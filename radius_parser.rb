#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'pp'
require 'strscan'

class RadiusParser < Racc::Parser

module_eval(<<'...end radius_parser.ry/module_eval...', 'radius_parser.ry', 147)

def parse(str)
  scanner = StringScanner.new(str)
  @q = []
  while !scanner.eos?
    scanner.scan(/[\s\n]+/)

    scanner.scan(/if/) ?                        @q << [:IF, "if"] :
    scanner.scan(/(elif|elsif)/) ?              @q << [:ELSEIF, "elseif"] :
    scanner.scan(/else/) ?                      @q << [:ELSE, "else"] :
    scanner.scan(/loop/) ?                      @q << [:LOOP, "loop"] :
    scanner.scan(/for/) ?                       @q << [:FOR, "for"] :
    scanner.scan(/while/) ?                     @q << [:WHILE, "while"] :
    scanner.scan(/break/) ?                     @q << [:BREAK, "break"] :
    scanner.scan(/return/) ?                    @q << [:RETURN, "return"] :
    scanner.scan(/function/) ?                  @q << [:FUNCTION, "function"] :
    scanner.scan(/class/) ?                     @q << [:CLASS, "class"] :
    scanner.scan(/self/) ?                      @q << [:SELF, "self"] :
    scanner.scan(/true/) ?                      @q << [:BOOLEAN, true] :
    scanner.scan(/false/) ?                     @q << [:BOOLEAN, false] :
    scanner.scan(/private/) ?                   @q << [:PRIVATE, "private"] :
    scanner.scan(/public/) ?                    @q << [:PUBLIC, "pubic"] :
    scanner.scan(/const/) ?                     @q << [:CONST, "const"] :
    scanner.scan(/static/) ?                    @q << [:STATIC, "static"] :
    scanner.scan(/null/) ?                      @q << [:NULL, "null"] :
    scanner.scan(/new/) ?                       @q << [:NEW, "new"] :
    scanner.scan(/super/) ?                     @q << [:SUPER, "super"]:
    scanner.scan(/base/) ?                      @q << [:SUPER, "super"]:
    scanner.scan(/parent/) ?                    @q << [:SUPER, "super"]:

    scanner.scan(/\".*?\"/) ?                   @q << [:STRING, scanner.matched[1..-2]] :
    scanner.scan(/[a-zA-Z_][a-zA-Z0-9_]*/) ?    @q << [:IDENTIFIER, scanner.matched.to_s] :
    scanner.scan(/([0-9]*\.[0-9]+)/) ?          @q << [:NUMBER, scanner.matched.to_f] :
    scanner.scan(/(0|[1-9][0-9]*)/) ?           @q << [:NUMBER, scanner.matched.to_i] :

    scanner.scan(/<-/) ?                        @q << ["=", "="] :

    scanner.scan(/\+=/) ?                       @q << ["+=", "+="] :
    scanner.scan(/-=/) ?                        @q << ["-=", "-="] :
    scanner.scan(/\*=/) ?                       @q << ["*=", "*="] :
    scanner.scan(/\/=/) ?                       @q << ["/=", "/="] :
    scanner.scan(/%=/) ?                        @q << ["%=", "%="] :

    scanner.scan(/==/) ?                        @q << ["==", "=="] :
    scanner.scan(/!=/) ?                        @q << ["!=", "!="] :
    scanner.scan(/<>/) ?                        @q << ["<>", "<>"] :
    scanner.scan(/>=/) ?                        @q << [">=", ">="] :
    scanner.scan(/<=/) ?                        @q << ["<=", "<="] :
    scanner.scan(/>/) ?                         @q << [">", ">"] :
    scanner.scan(/</) ?                         @q << ["<", "<"] :

    scanner.scan(/\&\&/) ?                      @q << ["&&", "&&"] :
    scanner.scan(/\|\|/) ?                      @q << ["||", "||"] :
    scanner.scan(/#.*/) ?                       nil :
    scanner.scan(/\/\/.*/) ?                    nil :

    scanner.scan(/./) ?                         @q << [scanner.matched, scanner.matched] :
    (raise "scanner error")
  end
  puts ("Token: #{@q}")

  do_parse
end

def next_token
  @q.shift
end

...end radius_parser.ry/module_eval...
##### State transition tables begin ###

clist = [
'-1,171,140,24,156,127,88,130,23,90,143,144,71,87,112,113,89,128,128',
'128,157,43,119,159,109,11,12,14,34,109,131,24,15,16,17,26,23,33,190',
'21,22,43,43,30,31,32,35,38,39,40,41,169,132,42,43,24,34,62,109,108,23',
'43,62,26,108,33,172,43,44,45,174,30,31,32,35,38,39,40,41,24,34,42,43',
'109,23,3,67,26,69,33,,62,,108,,30,31,32,35,38,39,40,41,24,34,42,43,',
'23,,,26,,33,,,62,,108,30,31,32,35,38,39,40,41,24,34,42,43,,23,,,26,',
'33,,,,,,30,31,32,35,38,39,40,41,24,34,42,43,,23,,,26,,33,,,,,,30,31',
'32,35,38,39,40,41,24,34,42,43,,23,,,26,,33,,,,,,30,31,32,35,38,39,40',
'41,24,34,42,43,,23,,,26,,33,,,,,,30,31,32,35,38,39,40,41,24,34,42,43',
',23,,,26,,33,,,,,,30,31,32,35,38,39,40,41,24,34,42,43,,23,,,26,,33,',
',,,,30,31,32,35,38,39,40,41,24,34,42,43,,23,,,26,,33,,,,,,30,31,32,35',
'38,39,40,41,24,34,42,43,,23,,,26,,33,,,,,,30,31,32,35,38,39,40,41,24',
'34,42,43,,23,,,26,,33,,,,,,30,31,32,35,38,39,40,41,24,34,42,43,,23,',
',26,,33,,,,,,30,31,32,35,38,39,40,41,24,34,42,43,,23,,,26,,33,,,,,,30',
'31,32,35,38,39,40,41,24,34,42,43,,23,,,26,,33,,,,,,30,31,32,35,38,39',
'40,41,24,34,42,43,,23,,,26,,33,,,,,,30,31,32,35,38,39,40,41,24,34,42',
'43,,23,,,26,,33,,,,,,30,31,32,35,38,39,40,41,24,34,42,43,,23,,,26,,33',
',,,,,30,31,32,35,38,39,40,41,24,34,42,43,,23,,,26,,33,,,,,,30,31,32',
'35,38,39,40,41,24,34,42,43,,23,,,26,,33,,,,,,30,31,32,35,38,39,40,41',
'24,34,42,43,,23,,,26,,33,,,,,,30,31,32,35,38,39,40,41,24,34,42,43,,23',
',,26,,33,,,,,,30,31,32,35,38,39,40,41,24,34,42,43,,23,,,26,,33,,,,,',
'30,31,32,35,38,39,40,41,24,34,42,43,,23,,,26,,33,,,,,,30,31,32,35,38',
'39,40,41,24,34,42,43,,23,,,26,,33,,,,,,30,31,32,35,38,39,40,41,24,34',
'42,43,,23,,,26,,33,,,,,,30,31,32,35,38,39,40,41,24,34,42,43,,23,,,26',
',33,,,,,,30,31,32,35,38,39,40,41,24,34,42,43,,23,,,26,,33,,,,,,30,31',
'32,35,38,39,40,41,24,34,42,43,,23,,,26,,33,,,,,,30,31,32,35,38,39,40',
'41,24,34,42,43,,23,,,26,,33,,,,,,30,31,32,35,38,39,40,41,24,34,42,43',
',23,,,26,,33,,,,,,30,31,32,35,38,39,40,41,24,34,42,43,,23,,,26,,33,',
',,,,30,31,32,35,38,39,40,41,24,34,42,43,,23,,,26,,33,,,,,,30,31,32,35',
'38,39,40,41,,34,42,43,,,24,,26,,33,23,,,,,30,31,32,35,38,39,40,41,,',
'42,43,11,12,14,34,147,,24,15,16,17,26,23,33,,21,22,,,30,31,32,35,38',
'39,40,41,,,42,43,24,34,,,,23,,,26,,33,,,,,,30,31,32,35,38,39,40,41,24',
'34,42,43,,23,,,26,,33,,,,,,30,31,32,35,38,39,40,41,24,34,42,43,,23,',
',26,,33,,,,,,30,31,32,35,38,39,40,41,24,34,42,43,,23,,,26,,33,,,,,,30',
'31,32,35,38,39,40,41,,34,42,43,,,24,,26,,33,23,,,,,30,31,32,35,38,39',
'40,41,,,42,43,11,12,14,34,158,,24,15,16,17,26,23,33,,21,22,,,30,31,32',
'35,38,39,40,41,,,42,43,24,34,160,,,23,,,26,,33,,21,22,,,30,31,32,35',
'38,39,40,41,,34,42,43,,,24,,26,,33,23,,,,,30,31,32,35,38,39,40,41,,',
'42,43,11,12,14,34,166,,,15,16,17,26,24,33,,21,22,23,,30,31,32,35,38',
'39,40,41,,,42,43,,,,11,12,14,34,167,,24,15,16,17,26,23,33,,21,22,,,30',
'31,32,35,38,39,40,41,,,42,43,,34,,,,,24,,26,,33,23,,,,,30,31,32,35,38',
'39,40,41,,,42,43,11,12,14,34,176,,24,15,16,17,26,23,33,,21,22,,,30,31',
'32,35,38,39,40,41,,,42,43,24,34,,,,23,,,26,,33,,,,,,30,31,32,35,38,39',
'40,41,,34,42,43,,,24,,26,,33,23,,,,,30,31,32,35,38,39,40,41,,,42,43',
'11,12,14,34,184,,24,15,16,17,26,23,33,,21,22,,,30,31,32,35,38,39,40',
'41,,,42,43,,34,,,,,24,,26,,33,23,,,,,30,31,32,35,38,39,40,41,,,42,43',
'11,12,14,34,186,,24,15,16,17,26,23,33,,21,22,,,30,31,32,35,38,39,40',
'41,,,42,43,,34,187,,,,24,,26,,33,23,21,22,,,30,31,32,35,38,39,40,41',
',,42,43,11,12,14,34,188,,,15,16,17,26,24,33,,21,22,23,,30,31,32,35,38',
'39,40,41,,,42,43,,,,11,12,14,34,192,,,15,16,17,26,,33,,21,22,,,30,31',
'32,35,38,39,40,41,,,42,43,109,,50,51,52,48,49,53,54,56,57,58,59,55,60',
'61,,109,,50,51,52,48,49,53,54,56,57,58,59,55,60,61,62,,108,-32,-32,-32',
'-32,-32,-32,72,73,74,75,76,77,,170,62,,108,-33,-33,-33,-33,-33,-33,-34',
'-34,-34,-34,-34,-34,109,129,50,51,52,48,49,53,54,56,57,58,59,55,60,61',
'109,,50,51,52,48,49,53,54,56,57,58,59,55,60,61,,62,,108,139,,,,,,,,',
',,,,62,,108,162,109,,50,51,52,48,49,-96,-96,-96,-96,-96,-96,-96,109',
',50,51,52,48,49,53,54,56,57,58,59,55,60,61,,,,62,,108,,,,,,,,,,,,62',
'109,108,50,51,52,48,49,-96,-96,-96,-96,-96,-96,-96,109,,50,51,52,48',
'49,-96,-96,-96,-96,-96,-96,-96,,,,,,62,,108,,,,,,,,,,,,62,109,108,50',
'51,52,48,49,-96,-96,-96,-96,-96,-96,-96,109,,50,51,52,48,49,-96,-96',
'-96,-96,-96,-96,-96,,,,,,62,,108,,,,,,,,,,,,62,109,108,50,51,52,48,49',
'-96,-96,-96,-96,-96,-96,-96,109,,50,51,52,48,49,53,54,56,57,58,59,55',
',,,,,62,,108,,,,,,,,,,,,62,46,108,50,51,52,48,49,53,54,56,57,58,59,55',
'60,61,109,,50,51,52,48,49,53,54,56,57,58,59,55,60,,,62,,47,,,,,,,,,',
',,,,62,46,108,50,51,52,48,49,53,54,56,57,58,59,55,60,61,109,,50,51,52',
'48,49,53,54,56,57,58,59,55,60,61,,62,,47,,,,,,,,,,,,,,62,109,108,50',
'51,52,48,49,53,54,56,57,58,59,55,60,61,109,,50,51,52,48,49,53,54,56',
'57,58,59,55,60,61,,62,,108,,,149,,,,,,,,,,,62,109,108,50,51,52,48,49',
'53,54,56,57,58,59,55,60,61,109,,50,51,52,48,49,53,54,56,57,58,59,55',
'60,61,,62,,108,,,,,,,,,,,,,,62,109,108,50,51,52,48,49,53,54,56,57,58',
'59,55,60,61,109,,50,51,52,48,49,53,54,56,57,58,59,55,60,61,,62,,108',
',,,,,,,,,,,,,62,109,108,50,51,52,48,49,53,54,56,57,58,59,55,60,61,109',
',50,51,52,48,49,53,54,56,57,58,59,55,60,61,,62,109,108,50,51,52,109',
',50,51,52,109,,50,51,52,62,109,108,50,51,52,48,49,53,54,56,57,58,59',
'55,60,61,,62,,108,,,62,,108,,175,62,,108,,,,62,109,108,50,51,52,48,49',
'53,54,56,57,58,59,55,60,61,109,,50,51,52,48,49,53,54,56,57,58,59,55',
'60,61,,62,189,108,,,,,,,,,,,,,,62,109,108,50,51,52,48,49,53,54,56,57',
'58,59,55,60,61,,,,,,,,,,,114,,,,,,,62,109,108,50,51,52,48,49,53,54,56',
'57,58,59,55,60,61,,,,,,,,,,,116,,,,,,,62,109,108,50,51,52,48,49,53,54',
'56,57,58,59,55,60,61,,,,,,,178,,,,,,,,,,,62,109,108,50,51,52,48,49,53',
'54,56,57,58,59,55,60,61,,,,,,,,,,,165,,,,,,,62,109,108,50,51,52,48,49',
'53,54,56,57,58,59,55,60,61,109,,50,51,52,48,49,53,54,56,57,58,59,55',
'60,61,,62,,108,,,,,,,,,,,,,,62,109,108,50,51,52,48,49,53,54,56,57,58',
'59,55,60,61,109,,50,51,52,48,49,53,54,56,57,58,59,55,60,61,,62,126,108',
',,,,,,,,,,,,,62,109,108,50,51,52,48,49,-96,-96,-96,-96,-96,-96,-96,',
',,,,,,,,,,,,,,,,,,62,,108' ]
        racc_action_table = arr = ::Array.new(2429, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'2,155,107,2,133,82,41,84,2,42,112,112,18,41,65,65,42,155,107,82,133',
'109,70,136,79,2,2,2,2,95,84,57,2,2,2,2,57,2,189,2,2,89,46,2,2,2,2,2',
'2,2,2,150,86,2,2,12,57,79,96,79,12,87,95,57,95,57,156,157,3,4,159,57',
'57,57,57,57,57,57,57,14,12,57,57,97,14,1,15,12,17,12,,96,,96,,12,12',
'12,12,12,12,12,12,16,14,12,12,,16,,,14,,14,,,97,,97,14,14,14,14,14,14',
'14,14,23,16,14,14,,23,,,16,,16,,,,,,16,16,16,16,16,16,16,16,24,23,16',
'16,,24,,,23,,23,,,,,,23,23,23,23,23,23,23,23,26,24,23,23,,26,,,24,,24',
',,,,,24,24,24,24,24,24,24,24,33,26,24,24,,33,,,26,,26,,,,,,26,26,26',
'26,26,26,26,26,34,33,26,26,,34,,,33,,33,,,,,,33,33,33,33,33,33,33,33',
'40,34,33,33,,40,,,34,,34,,,,,,34,34,34,34,34,34,34,34,47,40,34,34,,47',
',,40,,40,,,,,,40,40,40,40,40,40,40,40,48,47,40,40,,48,,,47,,47,,,,,',
'47,47,47,47,47,47,47,47,49,48,47,47,,49,,,48,,48,,,,,,48,48,48,48,48',
'48,48,48,50,49,48,48,,50,,,49,,49,,,,,,49,49,49,49,49,49,49,49,51,50',
'49,49,,51,,,50,,50,,,,,,50,50,50,50,50,50,50,50,52,51,50,50,,52,,,51',
',51,,,,,,51,51,51,51,51,51,51,51,53,52,51,51,,53,,,52,,52,,,,,,52,52',
'52,52,52,52,52,52,54,53,52,52,,54,,,53,,53,,,,,,53,53,53,53,53,53,53',
'53,55,54,53,53,,55,,,54,,54,,,,,,54,54,54,54,54,54,54,54,56,55,54,54',
',56,,,55,,55,,,,,,55,55,55,55,55,55,55,55,58,56,55,55,,58,,,56,,56,',
',,,,56,56,56,56,56,56,56,56,59,58,56,56,,59,,,58,,58,,,,,,58,58,58,58',
'58,58,58,58,60,59,58,58,,60,,,59,,59,,,,,,59,59,59,59,59,59,59,59,61',
'60,59,59,,61,,,60,,60,,,,,,60,60,60,60,60,60,60,60,62,61,60,60,,62,',
',61,,61,,,,,,61,61,61,61,61,61,61,61,69,62,61,61,,69,,,62,,62,,,,,,62',
'62,62,62,62,62,62,62,72,69,62,62,,72,,,69,,69,,,,,,69,69,69,69,69,69',
'69,69,73,72,69,69,,73,,,72,,72,,,,,,72,72,72,72,72,72,72,72,74,73,72',
'72,,74,,,73,,73,,,,,,73,73,73,73,73,73,73,73,75,74,73,73,,75,,,74,,74',
',,,,,74,74,74,74,74,74,74,74,76,75,74,74,,76,,,75,,75,,,,,,75,75,75',
'75,75,75,75,75,77,76,75,75,,77,,,76,,76,,,,,,76,76,76,76,76,76,76,76',
'108,77,76,76,,108,,,77,,77,,,,,,77,77,77,77,77,77,77,77,113,108,77,77',
',113,,,108,,108,,,,,,108,108,108,108,108,108,108,108,,113,108,108,,',
'115,,113,,113,115,,,,,113,113,113,113,113,113,113,113,,,113,113,115',
'115,115,115,115,,118,115,115,115,115,118,115,,115,115,,,115,115,115',
'115,115,115,115,115,,,115,115,128,118,,,,128,,,118,,118,,,,,,118,118',
'118,118,118,118,118,118,129,128,118,118,,129,,,128,,128,,,,,,128,128',
'128,128,128,128,128,128,131,129,128,128,,131,,,129,,129,,,,,,129,129',
'129,129,129,129,129,129,132,131,129,129,,132,,,131,,131,,,,,,131,131',
'131,131,131,131,131,131,,132,131,131,,,135,,132,,132,135,,,,,132,132',
'132,132,132,132,132,132,,,132,132,135,135,135,135,135,,138,135,135,135',
'135,138,135,,135,135,,,135,135,135,135,135,135,135,135,,,135,135,143',
'138,138,,,143,,,138,,138,,138,138,,,138,138,138,138,138,138,138,138',
',143,138,138,,,146,,143,,143,146,,,,,143,143,143,143,143,143,143,143',
',,143,143,146,146,146,146,146,,,146,146,146,146,148,146,,146,146,148',
',146,146,146,146,146,146,146,146,,,146,146,,,,148,148,148,148,148,,149',
'148,148,148,148,149,148,,148,148,,,148,148,148,148,148,148,148,148,',
',148,148,,149,,,,,164,,149,,149,164,,,,,149,149,149,149,149,149,149',
'149,,,149,149,164,164,164,164,164,,169,164,164,164,164,169,164,,164',
'164,,,164,164,164,164,164,164,164,164,,,164,164,170,169,,,,170,,,169',
',169,,,,,,169,169,169,169,169,169,169,169,,170,169,169,,,177,,170,,170',
'177,,,,,170,170,170,170,170,170,170,170,,,170,170,177,177,177,177,177',
',178,177,177,177,177,178,177,,177,177,,,177,177,177,177,177,177,177',
'177,,,177,177,,178,,,,,181,,178,,178,181,,,,,178,178,178,178,178,178',
'178,178,,,178,178,181,181,181,181,181,,182,181,181,181,181,182,181,',
'181,181,,,181,181,181,181,181,181,181,181,,,181,181,,182,182,,,,183',
',182,,182,183,182,182,,,182,182,182,182,182,182,182,182,,,182,182,183',
'183,183,183,183,,,183,183,183,183,191,183,,183,183,191,,183,183,183',
'183,183,183,183,183,,,183,183,,,,191,191,191,191,191,,,191,191,191,191',
',191,,191,191,,,191,191,191,191,191,191,191,191,,,191,191,154,,154,154',
'154,154,154,154,154,154,154,154,154,154,154,154,,83,,83,83,83,83,83',
'83,83,83,83,83,83,83,83,83,154,,154,91,91,91,91,91,91,19,19,19,19,19',
'19,,154,83,,83,20,20,20,20,20,20,139,139,139,139,139,139,92,83,92,92',
'92,92,92,92,92,92,92,92,92,92,92,92,141,,141,141,141,141,141,141,141',
'141,141,141,141,141,141,141,,92,,92,92,,,,,,,,,,,,,141,,141,141,104',
',104,104,104,104,104,104,104,104,104,104,104,104,85,,85,85,85,85,85',
'85,85,85,85,85,85,85,85,85,,,,104,,104,,,,,,,,,,,,85,99,85,99,99,99',
'99,99,99,99,99,99,99,99,99,100,,100,100,100,100,100,100,100,100,100',
'100,100,100,,,,,,99,,99,,,,,,,,,,,,100,101,100,101,101,101,101,101,101',
'101,101,101,101,101,101,102,,102,102,102,102,102,102,102,102,102,102',
'102,102,,,,,,101,,101,,,,,,,,,,,,102,103,102,103,103,103,103,103,103',
'103,103,103,103,103,103,105,,105,105,105,105,105,105,105,105,105,105',
'105,105,,,,,,103,,103,,,,,,,,,,,,105,5,105,5,5,5,5,5,5,5,5,5,5,5,5,5',
'5,106,,106,106,106,106,106,106,106,106,106,106,106,106,106,,,5,,5,,',
',,,,,,,,,,,106,151,106,151,151,151,151,151,151,151,151,151,151,151,151',
'151,151,152,,152,152,152,152,152,152,152,152,152,152,152,152,152,152',
',151,,151,,,,,,,,,,,,,,152,153,152,153,153,153,153,153,153,153,153,153',
'153,153,153,153,153,117,,117,117,117,117,117,117,117,117,117,117,117',
'117,117,117,,153,,153,,,117,,,,,,,,,,,117,120,117,120,120,120,120,120',
'120,120,120,120,120,120,120,120,120,121,,121,121,121,121,121,121,121',
'121,121,121,121,121,121,121,,120,,120,,,,,,,,,,,,,,121,122,121,122,122',
'122,122,122,122,122,122,122,122,122,122,122,122,123,,123,123,123,123',
'123,123,123,123,123,123,123,123,123,123,,122,,122,,,,,,,,,,,,,,123,124',
'123,124,124,124,124,124,124,124,124,124,124,124,124,124,124,125,,125',
'125,125,125,125,125,125,125,125,125,125,125,125,125,,124,78,124,78,78',
'78,93,,93,93,93,94,,94,94,94,125,163,125,163,163,163,163,163,163,163',
'163,163,163,163,163,163,163,,78,,78,,,93,,93,,163,94,,94,,,,163,185',
'163,185,185,185,185,185,185,185,185,185,185,185,185,185,185,63,,63,63',
'63,63,63,63,63,63,63,63,63,63,63,63,,185,185,185,,,,,,,,,,,,,,63,66',
'63,66,66,66,66,66,66,66,66,66,66,66,66,66,66,,,,,,,,,,,66,,,,,,,66,68',
'66,68,68,68,68,68,68,68,68,68,68,68,68,68,68,,,,,,,,,,,68,,,,,,,68,168',
'68,168,168,168,168,168,168,168,168,168,168,168,168,168,168,,,,,,,168',
',,,,,,,,,,168,145,168,145,145,145,145,145,145,145,145,145,145,145,145',
'145,145,,,,,,,,,,,145,,,,,,,145,179,145,179,179,179,179,179,179,179',
'179,179,179,179,179,179,179,180,,180,180,180,180,180,180,180,180,180',
'180,180,180,180,180,,179,,179,,,,,,,,,,,,,,180,80,180,80,80,80,80,80',
'80,80,80,80,80,80,80,80,80,81,,81,81,81,81,81,81,81,81,81,81,81,81,81',
'81,,80,80,80,,,,,,,,,,,,,,81,98,81,98,98,98,98,98,98,98,98,98,98,98',
'98,,,,,,,,,,,,,,,,,,,,98,,98' ]
        racc_action_check = arr = ::Array.new(2429, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
   nil,    85,     0,    68,    45,  1771,   nil,   nil,   nil,   nil,
   nil,   nil,    52,   nil,    76,    58,   100,    53,   -29,  1487,
  1498,   nil,   nil,   124,   148,   nil,   172,   nil,   nil,   nil,
   nil,   nil,   nil,   196,   220,   nil,   nil,   nil,   nil,   nil,
   244,   -22,   -19,   nil,   nil,   nil,   -12,   268,   292,   316,
   340,   364,   388,   412,   436,   460,   484,    28,   508,   532,
   556,   580,   604,  2121,   nil,   -16,  2155,   nil,  2189,   628,
   -20,   nil,   652,   676,   700,   724,   748,   772,  2055,    22,
  2341,  2357,   -33,  1478,   -22,  1593,    17,     7,   nil,   -13,
   nil,  1481,  1526,  2060,  2065,    27,    56,    81,  2391,  1627,
  1641,  1675,  1689,  1723,  1579,  1737,  1787,   -34,   796,   -33,
   nil,   nil,   -17,   820,   nil,   850,   nil,  1887,   878,   nil,
  1921,  1937,  1971,  1987,  2021,  2037,   nil,   nil,   902,   926,
   nil,   950,   974,   -32,   nil,  1004,   -13,   nil,  1032,  1504,
   nil,  1542,   nil,  1056,   nil,  2257,  1086,   nil,  1119,  1147,
    33,  1821,  1837,  1871,  1461,   -35,    38,    13,   nil,    42,
   nil,   nil,   nil,  2071,  1177,   nil,   nil,   nil,  2223,  1205,
  1229,   nil,   nil,   nil,   nil,   nil,   nil,  1259,  1287,  2291,
  2307,  1317,  1345,  1375,   nil,  2105,   nil,   nil,   nil,    10,
   nil,  1408,   nil ]

racc_action_default = [
    -2,   -96,   -35,   -96,    -3,    -5,    -6,    -7,    -8,    -9,
   -10,   -11,   -12,   -16,   -96,   -96,   -96,   -96,   -38,   -96,
   -62,   -36,   -37,   -96,   -96,   -60,   -96,   -64,   -65,   -66,
   -67,   -68,   -69,   -86,   -80,   -72,   -73,   -74,   -75,   -76,
   -96,   -96,   -96,   -95,   193,    -4,   -96,   -96,   -96,   -96,
   -96,   -96,   -96,   -96,   -96,   -96,   -96,   -96,   -96,   -96,
   -96,   -96,   -86,   -13,   -62,   -20,   -96,    -2,   -96,   -96,
   -40,   -39,   -96,   -96,   -96,   -96,   -96,   -96,   -44,   -59,
   -96,   -87,   -96,   -96,   -96,   -96,   -66,   -83,    -2,   -91,
   -93,   -61,   -96,   -42,   -43,   -45,   -46,   -47,   -48,   -49,
   -50,   -51,   -52,   -53,   -54,   -55,   -56,   -96,   -96,   -96,
   -14,   -17,   -96,   -96,    -2,   -35,    -2,   -96,   -96,   -41,
   -26,   -27,   -28,   -29,   -30,   -31,   -63,   -70,   -96,   -96,
   -71,   -96,   -86,   -96,   -84,   -35,   -96,   -92,   -35,   -58,
   -57,   -96,   -61,   -96,    -2,   -96,   -35,   -22,   -35,   -96,
   -96,   -96,   -88,   -81,   -96,   -96,   -96,   -96,   -79,   -96,
   -90,   -94,   -58,   -96,   -35,    -2,   -15,   -23,   -96,   -96,
   -96,   -77,    -2,   -85,   -93,    -2,   -21,   -35,   -96,   -25,
   -82,   -35,   -35,   -35,   -19,   -96,   -78,   -89,   -18,   -96,
    -2,   -35,   -24 ]

racc_goto_table = [
     2,   161,    20,    82,   150,    86,   138,    84,   133,   136,
   118,    65,   110,   111,    70,     1,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   107,   nil,   nil,   nil,    63,   nil,    66,   nil,
    68,   nil,   nil,   nil,   nil,   161,    91,    78,    79,   nil,
    80,   nil,   nil,   nil,   nil,   nil,   nil,    81,    83,   nil,
   nil,   nil,   nil,   nil,    85,   nil,   nil,   115,   nil,   nil,
   nil,    92,    93,    94,    95,    96,    97,    98,    99,   100,
   101,   102,   103,   104,   105,   106,    81,   134,   135,   137,
   182,   nil,   nil,   117,   nil,   nil,   120,   121,   122,   123,
   124,   125,   155,   nil,   nil,   nil,   nil,   nil,   nil,   142,
   nil,   nil,   nil,   nil,   146,    20,   148,   nil,    20,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   141,   nil,   nil,    20,   nil,   145,    20,   nil,
   nil,   nil,   151,   nil,   164,   nil,    20,   nil,    20,   nil,
   nil,   nil,   152,   153,   nil,   154,    81,   173,   nil,   nil,
   nil,   nil,   151,   nil,    20,   177,   nil,   163,   nil,   nil,
   nil,   nil,   181,   168,   nil,   183,   nil,    20,   nil,   nil,
   nil,    20,    20,    20,   nil,   nil,   nil,   nil,   nil,   nil,
   191,    20,   nil,   179,   180,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   185,   nil,   nil,   nil,   151 ]

racc_goto_check = [
     2,     5,    18,    19,    17,    21,    29,    24,    27,    28,
    16,    11,    12,    13,    15,     1,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    19,   nil,   nil,   nil,     4,   nil,     4,   nil,
     4,   nil,   nil,   nil,   nil,     5,    18,     4,     4,   nil,
     4,   nil,   nil,   nil,   nil,   nil,   nil,     4,     4,   nil,
   nil,   nil,   nil,   nil,     4,   nil,   nil,     2,   nil,   nil,
   nil,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,    18,     2,    18,
    29,   nil,   nil,     4,   nil,   nil,     4,     4,     4,     4,
     4,     4,    19,   nil,   nil,   nil,   nil,   nil,   nil,    18,
   nil,   nil,   nil,   nil,     2,    18,     2,   nil,    18,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     4,   nil,   nil,    18,   nil,     4,    18,   nil,
   nil,   nil,     4,   nil,     2,   nil,    18,   nil,    18,   nil,
   nil,   nil,     4,     4,   nil,     4,     4,    18,   nil,   nil,
   nil,   nil,     4,   nil,    18,     2,   nil,     4,   nil,   nil,
   nil,   nil,     2,     4,   nil,     2,   nil,    18,   nil,   nil,
   nil,    18,    18,    18,   nil,   nil,   nil,   nil,   nil,   nil,
     2,    18,   nil,     4,     4,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     4,   nil,   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,    15,     0,   nil,    24,  -137,   nil,   nil,   nil,   nil,
   nil,    -2,   -53,   -52,   nil,    -4,   -60,  -114,     0,   -30,
   nil,   -35,   nil,   nil,   -27,   nil,   nil,   -79,   -80,   -84 ]

racc_goto_default = [
   nil,   nil,   nil,     4,     5,     6,     7,     8,     9,    10,
    13,   nil,   nil,   nil,    18,   nil,   nil,    19,    64,   nil,
    25,    29,    27,    28,   nil,    36,    37,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 56, :_reduce_none,
  0, 57, :_reduce_2,
  2, 57, :_reduce_3,
  3, 57, :_reduce_4,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_11,
  1, 58, :_reduce_12,
  2, 58, :_reduce_13,
  3, 61, :_reduce_14,
  5, 65, :_reduce_15,
  0, 66, :_reduce_16,
  2, 66, :_reduce_17,
  6, 68, :_reduce_18,
  5, 68, :_reduce_19,
  0, 67, :_reduce_none,
  4, 67, :_reduce_21,
  4, 62, :_reduce_22,
  5, 64, :_reduce_23,
  11, 63, :_reduce_24,
  6, 60, :_reduce_25,
  3, 60, :_reduce_26,
  3, 60, :_reduce_27,
  3, 60, :_reduce_28,
  3, 60, :_reduce_29,
  3, 60, :_reduce_30,
  3, 60, :_reduce_31,
  3, 72, :_reduce_32,
  1, 72, :_reduce_33,
  4, 72, :_reduce_34,
  0, 69, :_reduce_35,
  1, 69, :_reduce_36,
  1, 69, :_reduce_37,
  0, 70, :_reduce_38,
  1, 70, :_reduce_39,
  0, 71, :_reduce_40,
  1, 71, :_reduce_41,
  3, 59, :_reduce_42,
  3, 59, :_reduce_43,
  2, 59, :_reduce_44,
  3, 59, :_reduce_45,
  3, 59, :_reduce_46,
  3, 59, :_reduce_47,
  3, 59, :_reduce_48,
  3, 59, :_reduce_49,
  3, 59, :_reduce_50,
  3, 59, :_reduce_51,
  3, 59, :_reduce_52,
  3, 59, :_reduce_53,
  3, 59, :_reduce_54,
  3, 59, :_reduce_55,
  3, 59, :_reduce_56,
  4, 59, :_reduce_57,
  4, 59, :_reduce_58,
  2, 59, :_reduce_59,
  1, 59, :_reduce_none,
  3, 76, :_reduce_61,
  1, 76, :_reduce_62,
  3, 75, :_reduce_63,
  1, 75, :_reduce_none,
  1, 75, :_reduce_none,
  1, 75, :_reduce_none,
  1, 77, :_reduce_67,
  1, 77, :_reduce_68,
  1, 77, :_reduce_69,
  3, 77, :_reduce_70,
  3, 77, :_reduce_71,
  1, 77, :_reduce_72,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_75,
  1, 78, :_reduce_76,
  5, 78, :_reduce_77,
  7, 80, :_reduce_78,
  4, 80, :_reduce_79,
  0, 79, :_reduce_80,
  3, 79, :_reduce_81,
  5, 79, :_reduce_82,
  0, 82, :_reduce_83,
  1, 82, :_reduce_84,
  3, 82, :_reduce_85,
  0, 74, :_reduce_86,
  1, 74, :_reduce_87,
  3, 74, :_reduce_88,
  7, 81, :_reduce_89,
  4, 81, :_reduce_90,
  0, 83, :_reduce_91,
  1, 83, :_reduce_92,
  0, 84, :_reduce_93,
  2, 84, :_reduce_94,
  1, 73, :_reduce_95 ]

racc_reduce_n = 96

racc_shift_n = 193

racc_token_table = {
  false => 0,
  :error => 1,
  "." => 2,
  "!" => 3,
  "*" => 4,
  "/" => 5,
  "%" => 6,
  "+" => 7,
  "-" => 8,
  "==" => 9,
  "!=" => 10,
  ">" => 11,
  ">=" => 12,
  "<" => 13,
  "<=" => 14,
  "<>" => 15,
  "&&" => 16,
  "||" => 17,
  "=" => 18,
  "+=" => 19,
  "-=" => 20,
  "*=" => 21,
  "/=" => 22,
  "%=" => 23,
  ";" => 24,
  :BREAK => 25,
  :RETURN => 26,
  :IF => 27,
  "{" => 28,
  "}" => 29,
  :ELSE => 30,
  :ELSEIF => 31,
  :LOOP => 32,
  :WHILE => 33,
  :FOR => 34,
  "(" => 35,
  ")" => 36,
  "[" => 37,
  "]" => 38,
  :PRIVATE => 39,
  :PUBLIC => 40,
  :STATIC => 41,
  :CONST => 42,
  :NUMBER => 43,
  :STRING => 44,
  :BOOLEAN => 45,
  :NULL => 46,
  :SELF => 47,
  :SUPER => 48,
  :NEW => 49,
  :FUNCTION => 50,
  ":" => 51,
  "," => 52,
  :CLASS => 53,
  :IDENTIFIER => 54 }

racc_nt_base = 55

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\"==\"",
  "\"!=\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"<>\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\"+=\"",
  "\"-=\"",
  "\"*=\"",
  "\"/=\"",
  "\"%=\"",
  "\";\"",
  "BREAK",
  "RETURN",
  "IF",
  "\"{\"",
  "\"}\"",
  "ELSE",
  "ELSEIF",
  "LOOP",
  "WHILE",
  "FOR",
  "\"(\"",
  "\")\"",
  "\"[\"",
  "\"]\"",
  "PRIVATE",
  "PUBLIC",
  "STATIC",
  "CONST",
  "NUMBER",
  "STRING",
  "BOOLEAN",
  "NULL",
  "SELF",
  "SUPER",
  "NEW",
  "FUNCTION",
  "\":\"",
  "\",\"",
  "CLASS",
  "IDENTIFIER",
  "$start",
  "program",
  "statements",
  "statement",
  "expr",
  "var_assign",
  "if_els_stmt",
  "loop_stmt",
  "for_stmt",
  "while_stmt",
  "if_stmt",
  "elif_stmts",
  "els_stmt",
  "elif_stmt",
  "access_md",
  "static_md",
  "const_md",
  "var_def",
  "identifier",
  "args",
  "primary",
  "variable",
  "lit",
  "object",
  "hash",
  "func_def",
  "class_def",
  "params",
  "expands",
  "var_assigns" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 15)
  def _reduce_2(val, _values, result)
    result = [:STATEMENTS, []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 16)
  def _reduce_3(val, _values, result)
    result[1] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 17)
  def _reduce_4(val, _values, result)
    result[1] << val[1]
    result
  end
.,.,

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 25)
  def _reduce_11(val, _values, result)
    result = [:BREAK]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 26)
  def _reduce_12(val, _values, result)
    result = [:RETURN, [:INSTANCE, :NULL, nil]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 27)
  def _reduce_13(val, _values, result)
    result = [:RETURN, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 29)
  def _reduce_14(val, _values, result)
    result = [:IF] + [([val[0]] + val[1] + [val[2]])]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 31)
  def _reduce_15(val, _values, result)
    result = [val[1], val[3]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 33)
  def _reduce_16(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 34)
  def _reduce_17(val, _values, result)
    result << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 35)
  def _reduce_18(val, _values, result)
    result = [val[2], val[4]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 36)
  def _reduce_19(val, _values, result)
    result = [val[1], val[3]]
    result
  end
.,.,

# reduce 20 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 39)
  def _reduce_21(val, _values, result)
    result = [[:INSTANCE, :BOOLEAN, nil, true], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 41)
  def _reduce_22(val, _values, result)
    result = [:LOOP, val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 43)
  def _reduce_23(val, _values, result)
    result = [:WHILE, val[1], val[3]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 45)
  def _reduce_24(val, _values, result)
    result = [:FOR, val[2], val[4], val[6], val[9]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 47)
  def _reduce_25(val, _values, result)
    result = ['=', val[0], val[1], val[2], val[3], val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 48)
  def _reduce_26(val, _values, result)
    result = ['=', nil, nil, nil, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 49)
  def _reduce_27(val, _values, result)
    result = ['=', nil, nil, nil, val[0], ['+', val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 50)
  def _reduce_28(val, _values, result)
    result = ['=', nil, nil, nil, val[0], ['-', val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 51)
  def _reduce_29(val, _values, result)
    result = ['=', nil, nil, nil, val[0], ['*', val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 52)
  def _reduce_30(val, _values, result)
    result = ['=', nil, nil, nil, val[0], ['/', val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 53)
  def _reduce_31(val, _values, result)
    result = ['=', nil, nil, nil, val[0], ['%', val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 55)
  def _reduce_32(val, _values, result)
    result = [:VARIABLE, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 56)
  def _reduce_33(val, _values, result)
    result = [:VARIABLE, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 57)
  def _reduce_34(val, _values, result)
    result = [:INDEX, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 59)
  def _reduce_35(val, _values, result)
    result = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 60)
  def _reduce_36(val, _values, result)
    result = :PRIVATE
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 61)
  def _reduce_37(val, _values, result)
    result = :PUBLIC
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 63)
  def _reduce_38(val, _values, result)
    result = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 64)
  def _reduce_39(val, _values, result)
    result = :STATIC
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 66)
  def _reduce_40(val, _values, result)
    result = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 67)
  def _reduce_41(val, _values, result)
    result = :CONSTANT
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 69)
  def _reduce_42(val, _values, result)
    result = ['+', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 70)
  def _reduce_43(val, _values, result)
    result = ['-', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 71)
  def _reduce_44(val, _values, result)
    result = ['-', [:INSTANCE, :NUMBER, nil, 0], val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 72)
  def _reduce_45(val, _values, result)
    result = ['*', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 73)
  def _reduce_46(val, _values, result)
    result = ['/', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 74)
  def _reduce_47(val, _values, result)
    result = ['%', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 76)
  def _reduce_48(val, _values, result)
    result = ['==', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 77)
  def _reduce_49(val, _values, result)
    result = ['!=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 78)
  def _reduce_50(val, _values, result)
    result = ['!=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 79)
  def _reduce_51(val, _values, result)
    result = ['>', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 80)
  def _reduce_52(val, _values, result)
    result = ['>=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 81)
  def _reduce_53(val, _values, result)
    result = ['<', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 82)
  def _reduce_54(val, _values, result)
    result = ['<=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 84)
  def _reduce_55(val, _values, result)
    result = ['&&', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 85)
  def _reduce_56(val, _values, result)
    result = ['||', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 86)
  def _reduce_57(val, _values, result)
    result = [:FUNC_CALL, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 87)
  def _reduce_58(val, _values, result)
    result = [:INDEX, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 89)
  def _reduce_59(val, _values, result)
    result = ['!', val[1]]
    result
  end
.,.,

# reduce 60 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 93)
  def _reduce_61(val, _values, result)
    result = [:VARIABLE, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 94)
  def _reduce_62(val, _values, result)
    result = [:VARIABLE, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 96)
  def _reduce_63(val, _values, result)
    result = val[1]
    result
  end
.,.,

# reduce 64 omitted

# reduce 65 omitted

# reduce 66 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 101)
  def _reduce_67(val, _values, result)
    result = [:INSTANCE, :NUMBER, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 102)
  def _reduce_68(val, _values, result)
    result = [:INSTANCE, :STRING, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 103)
  def _reduce_69(val, _values, result)
    result = [:INSTANCE, :BOOLEAN, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 104)
  def _reduce_70(val, _values, result)
    result = [:LIST_NEW, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 105)
  def _reduce_71(val, _values, result)
    result = [:HASH_NEW, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 106)
  def _reduce_72(val, _values, result)
    result = [:INSTANCE, :NULL, nil]
    result
  end
.,.,

# reduce 73 omitted

# reduce 74 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 110)
  def _reduce_75(val, _values, result)
    result = [:SELF]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 111)
  def _reduce_76(val, _values, result)
    result = [:SUPER]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 112)
  def _reduce_77(val, _values, result)
    result = [:NEW, val[1], val[3]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 114)
  def _reduce_78(val, _values, result)
    result = [:FUNCTION, val[2], val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 115)
  def _reduce_79(val, _values, result)
    result = [:FUNCTION, [], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 117)
  def _reduce_80(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 118)
  def _reduce_81(val, _values, result)
    result = [[val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 119)
  def _reduce_82(val, _values, result)
    result << [val[2], val[4]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 121)
  def _reduce_83(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 122)
  def _reduce_84(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 123)
  def _reduce_85(val, _values, result)
    result << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 125)
  def _reduce_86(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 126)
  def _reduce_87(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 127)
  def _reduce_88(val, _values, result)
    result << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 129)
  def _reduce_89(val, _values, result)
    result = [:CLASS_NEW, val[2], val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 130)
  def _reduce_90(val, _values, result)
    result = [:CLASS_NEW, nil, val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 132)
  def _reduce_91(val, _values, result)
    result = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 133)
  def _reduce_92(val, _values, result)
    result = [:VARIABLE, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 135)
  def _reduce_93(val, _values, result)
    result = [:STATEMENTS, []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 136)
  def _reduce_94(val, _values, result)
    result[1] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 138)
  def _reduce_95(val, _values, result)
    result = [:IDENTIFIER, val[0]]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class RadiusParser

if __FILE__ == $0
  parser = RadiusParser.new
  File.open("program.rlb", "r") do |f|
    res = parser.parse(f.read.chomp)
    p (res)
  end
end
