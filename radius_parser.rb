#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'pp'
require 'strscan'

class RadiusParser < Racc::Parser

module_eval(<<'...end radius_parser.ry/module_eval...', 'radius_parser.ry', 136)

def parse(str)
  scanner = StringScanner.new(str)
  @q = []
  while !scanner.eos?
    scanner.scan(/[\s\n]+/)

    scanner.scan(/if/) ?                        @q << [:IF, "if"] :
    scanner.scan(/(elif|elsif)/) ?              @q << [:ELSEIF, "elseif"] :
    scanner.scan(/else/) ?                      @q << [:ELSE, "else"] :
    scanner.scan(/loop/) ?                      @q << [:LOOP, "loop"] :
    scanner.scan(/break/) ?                     @q << [:BREAK, "break"] :
    scanner.scan(/return/) ?                    @q << [:RETURN, "return"] :
    scanner.scan(/function/) ?                  @q << [:FUNCTION, "function"] :
    scanner.scan(/class/) ?                     @q << [:CLASS, "class"] :
    scanner.scan(/self/) ?                      @q << [:SELF, "self"] :
    scanner.scan(/true/) ?                      @q << [:BOOLEAN, true] :
    scanner.scan(/false/) ?                     @q << [:BOOLEAN, false] :
    scanner.scan(/private/) ?                   @q << [:PRIVATE, "private"] :
    scanner.scan(/public/) ?                    @q << [:PUBLIC, "pubic"] :
    scanner.scan(/const/) ?                     @q << [:CONST, "const"] :
    scanner.scan(/static/) ?                    @q << [:STATIC, "static"] :
    scanner.scan(/null/) ?                      @q << [:NULL, "null"] :
    scanner.scan(/new/) ?                       @q << [:NEW, "new"] :
    scanner.scan(/super/) ?                     @q << [:SUPER, "super"]:

    scanner.scan(/\".*?\"/) ?                   @q << [:STRING, scanner.matched[1..-2]] :
    scanner.scan(/[a-zA-Z_][a-zA-Z0-9_]*/) ?    @q << [:IDENTIFIER, scanner.matched.to_s] :
    scanner.scan(/([0-9]*\.[0-9]+)/) ?          @q << [:NUMBER, scanner.matched.to_f] :
    scanner.scan(/(0|[1-9][0-9]*)/) ?           @q << [:NUMBER, scanner.matched.to_i] :

    scanner.scan(/<-/) ?                        @q << ["=", "="] :

    scanner.scan(/\+=/) ?                       @q << ["+=", "+="] :
    scanner.scan(/-=/) ?                        @q << ["-=", "-="] :
    scanner.scan(/\*=/) ?                       @q << ["*=", "*="] :
    scanner.scan(/\/=/) ?                       @q << ["/=", "/="] :

    scanner.scan(/==/) ?                        @q << ["==", "=="] :
    scanner.scan(/!=/) ?                        @q << ["!=", "!="] :
    scanner.scan(/<>/) ?                        @q << ["<>", "<>"] :
    scanner.scan(/>=/) ?                        @q << [">=", ">="] :
    scanner.scan(/<=/) ?                        @q << ["<=", "<="] :
    scanner.scan(/>/) ?                         @q << [">", ">"] :
    scanner.scan(/</) ?                         @q << ["<", "<"] :

    scanner.scan(/\&\&/) ?                      @q << ["&&", "&&"] :
    scanner.scan(/\|\|/) ?                      @q << ["||", "||"] :
    scanner.scan(/#.*/) ?                       nil :
    scanner.scan(/\/\/.*/) ?                    nil :

    scanner.scan(/./) ?                         @q << [scanner.matched, scanner.matched] :
    (raise "scanner error")
  end
  puts ("Token: #{@q}")

  do_parse
end

def next_token
  @q.shift
end

...end radius_parser.ry/module_eval...
##### State transition tables begin ###

clist = [
'-1,109,112,20,77,79,125,126,19,122,149,136,101,102,150,76,78,110,3,110',
'110,137,98,113,20,9,10,12,30,19,39,114,13,29,152,17,18,139,39,22,-25',
'26,27,28,31,34,35,36,37,30,20,38,39,97,29,19,-24,66,65,58,22,63,26,27',
'28,31,34,35,36,37,41,20,38,39,106,30,19,40,-23,39,29,147,39,39,,,22',
',26,27,28,31,34,35,36,37,30,20,38,39,,29,19,,,,,22,,26,27,28,31,34,35',
'36,37,,20,38,39,,30,19,,,,29,,,,,,22,,26,27,28,31,34,35,36,37,30,20',
'38,39,,29,19,,,,,22,,26,27,28,31,34,35,36,37,,20,38,39,,30,19,,,,29',
',,,,,22,,26,27,28,31,34,35,36,37,30,20,38,39,,29,19,,,,,22,,26,27,28',
'31,34,35,36,37,,20,38,39,,30,19,,,,29,,,,,,22,,26,27,28,31,34,35,36',
'37,30,20,38,39,,29,19,,,,,22,,26,27,28,31,34,35,36,37,,20,38,39,,30',
'19,,,,29,,,,,,22,,26,27,28,31,34,35,36,37,30,20,38,39,,29,19,,,,,22',
',26,27,28,31,34,35,36,37,,20,38,39,,30,19,,,,29,,,,,,22,,26,27,28,31',
'34,35,36,37,30,20,38,39,,29,19,,,,,22,,26,27,28,31,34,35,36,37,,20,38',
'39,,30,19,,,,29,,,,,,22,,26,27,28,31,34,35,36,37,30,20,38,39,,29,19',
',,,,22,,26,27,28,31,34,35,36,37,,20,38,39,,30,19,,,,29,,,,,,22,,26,27',
'28,31,34,35,36,37,30,20,38,39,,29,19,,,,,22,,26,27,28,31,34,35,36,37',
',20,38,39,,30,19,,,,29,,,,,,22,,26,27,28,31,34,35,36,37,30,20,38,39',
',29,19,,,,,22,,26,27,28,31,34,35,36,37,,20,38,39,,30,19,,,,29,,,,,,22',
',26,27,28,31,34,35,36,37,30,20,38,39,,29,19,,,,,22,,26,27,28,31,34,35',
'36,37,,20,38,39,,30,19,,,,29,,,,,,22,,26,27,28,31,34,35,36,37,30,20',
'38,39,,29,19,,,,,22,,26,27,28,31,34,35,36,37,,20,38,39,,30,19,,,,29',
',,,,,22,,26,27,28,31,34,35,36,37,30,20,38,39,,29,19,,,,,22,,26,27,28',
'31,34,35,36,37,,20,38,39,,30,19,,,,29,,,,,,22,,26,27,28,31,34,35,36',
'37,30,98,38,39,20,29,,,,19,,22,,26,27,28,31,34,35,36,37,,,38,39,98,9',
'10,12,30,129,,97,13,29,98,17,18,58,,22,,26,27,28,31,34,35,36,37,20,',
'38,39,,19,97,,,,,,58,,,,97,,,,,20,58,,,30,19,,,,29,,,,,,22,,26,27,28',
'31,34,35,36,37,30,20,38,39,,29,19,,,,,22,,26,27,28,31,34,35,36,37,,20',
'38,39,,30,19,,,,29,,,,,,22,,26,27,28,31,34,35,36,37,30,20,38,39,,29',
'19,,,,,22,,26,27,28,31,34,35,36,37,,,38,39,,30,,,20,,29,,,19,,,22,,26',
'27,28,31,34,35,36,37,,,38,39,9,10,12,30,138,,,13,29,,17,18,,,22,,26',
'27,28,31,34,35,36,37,20,,38,39,,19,,,,,,,,,,,,,,,,,20,,,30,140,19,,',
'29,,17,18,,,22,,26,27,28,31,34,35,36,37,,30,38,39,20,,29,,,19,,,22,',
'26,27,28,31,34,35,36,37,,,38,39,9,10,12,30,146,,,13,29,,17,18,,,22,',
'26,27,28,31,34,35,36,37,20,,38,39,,19,,,,,,,,,,,98,,46,47,48,,9,10,12',
'30,154,,,13,29,,17,18,,,22,,26,27,28,31,34,35,36,37,20,97,38,39,,19',
',58,,,,,,,,,98,,46,47,48,20,,,,30,19,,,,29,,,,,,22,,26,27,28,31,34,35',
'36,37,30,97,38,39,20,29,,58,,19,,22,,26,27,28,31,34,35,36,37,,,38,39',
',9,10,12,30,161,,,13,29,,17,18,,,22,,26,27,28,31,34,35,36,37,20,,38',
'39,,19,,,,,,,,,,,98,,46,47,48,,9,10,12,30,162,,,13,29,,17,18,,,22,,26',
'27,28,31,34,35,36,37,20,97,38,39,,19,,58,,,,,,,,,,,,,,,,,,30,163,,,20',
'29,,17,18,19,,22,,26,27,28,31,34,35,36,37,,,38,39,,9,10,12,30,164,,',
'13,29,,17,18,,,22,,26,27,28,31,34,35,36,37,,,38,39,98,,46,47,48,44,45',
'49,50,52,53,54,55,51,56,57,,,,,,,,,,,,,,,,97,,,,,,58,,,,,,,,,98,148',
'46,47,48,44,45,49,50,52,53,54,55,51,56,57,,,,,,,,,,,,,,,,97,,,,,,58',
',,,,,,,,98,111,46,47,48,44,45,49,50,52,53,54,55,51,56,57,,,,,,,,,,,',
',,,,97,,,,,,58,108,98,,46,47,48,44,45,49,50,52,53,54,55,51,56,57,98',
',46,47,48,44,45,-87,-87,-87,-87,-87,-87,-87,,97,121,,,,,58,,,,,,,,,',
'97,,,,,98,58,46,47,48,44,45,-87,-87,-87,-87,-87,-87,-87,98,,46,47,48',
'44,45,-87,-87,-87,-87,-87,-87,-87,,,,97,,,,,,58,,,,,,,,97,,,,,98,58',
'46,47,48,44,45,-87,-87,-87,-87,-87,-87,-87,98,,46,47,48,44,45,-87,-87',
'-87,-87,-87,-87,-87,,,,97,,,,,,58,,,,,,,,97,,,,,98,58,46,47,48,44,45',
'-87,-87,-87,-87,-87,-87,-87,98,,46,47,48,44,45,49,50,52,53,54,55,51',
'56,57,,97,,,,,,58,,,,,,,,97,,,,,98,58,46,47,48,44,45,49,50,52,53,54',
'55,51,56,57,,,,,,,,,,,103,,,,,97,,,,,42,58,46,47,48,44,45,49,50,52,53',
'54,55,51,56,57,98,,46,47,48,44,45,-87,-87,-87,-87,-87,-87,-87,,43,,',
',,,58,,,,,,,,,,97,,,,,98,58,46,47,48,44,45,49,50,52,53,54,55,51,98,',
'46,47,48,44,45,49,50,52,53,54,55,51,56,57,,97,,,,,,58,,,,,,,,97,,,,',
'98,58,46,47,48,44,45,49,50,52,53,54,55,51,56,57,,,,,,,,,,,145,,,,,97',
',,,,98,58,46,47,48,44,45,49,50,52,53,54,55,51,56,57,,,,,,,,,,,,,,,,97',
',,,,98,58,46,47,48,44,45,49,50,52,53,54,55,51,56,57,98,,46,47,48,44',
'45,49,50,52,53,54,55,51,56,97,142,,,,,58,,,,,,,,,,97,,,,,98,58,46,47',
'48,44,45,49,50,52,53,54,55,51,56,57,,,,,,,,,,,153,,,,,97,,,,,42,58,46',
'47,48,44,45,49,50,52,53,54,55,51,56,57,,,,,,,,,,,,,,,,43,,,,,98,58,46',
'47,48,44,45,49,50,52,53,54,55,51,56,57,,,,,,,,,,,,,,,,97,,,,,98,58,46',
'47,48,44,45,49,50,52,53,54,55,51,56,57,,,,,,,,,,,,,,,,97,,,,,98,58,46',
'47,48,44,45,49,50,52,53,54,55,51,56,57,,,,,,,,,,,,,,,,97,,,,,98,58,46',
'47,48,44,45,49,50,52,53,54,55,51,56,57,,,,,,,,,,,,,,,,97,,,,,98,58,46',
'47,48,44,45,49,50,52,53,54,55,51,56,57,,,,,,,,,,,,,,,,97,,,,,,58' ]
        racc_action_table = arr = ::Array.new(2090, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'2,71,73,2,37,38,101,101,2,96,135,115,61,61,136,37,38,71,1,96,135,115',
'68,73,49,2,2,2,2,49,137,75,2,2,139,2,2,118,42,2,121,2,2,2,2,2,2,2,2',
'49,10,2,2,68,49,10,16,15,14,68,49,13,49,49,49,49,49,49,49,49,4,12,49',
'49,64,10,12,3,80,78,10,130,98,76,,,10,,10,10,10,10,10,10,10,10,12,19',
'10,10,,12,19,,,,,12,,12,12,12,12,12,12,12,12,,20,12,12,,19,20,,,,19',
',,,,,19,,19,19,19,19,19,19,19,19,20,22,19,19,,20,22,,,,,20,,20,20,20',
'20,20,20,20,20,,29,20,20,,22,29,,,,22,,,,,,22,,22,22,22,22,22,22,22',
'22,29,30,22,22,,29,30,,,,,29,,29,29,29,29,29,29,29,29,,36,29,29,,30',
'36,,,,30,,,,,,30,,30,30,30,30,30,30,30,30,36,43,30,30,,36,43,,,,,36',
',36,36,36,36,36,36,36,36,,44,36,36,,43,44,,,,43,,,,,,43,,43,43,43,43',
'43,43,43,43,44,45,43,43,,44,45,,,,,44,,44,44,44,44,44,44,44,44,,46,44',
'44,,45,46,,,,45,,,,,,45,,45,45,45,45,45,45,45,45,46,47,45,45,,46,47',
',,,,46,,46,46,46,46,46,46,46,46,,48,46,46,,47,48,,,,47,,,,,,47,,47,47',
'47,47,47,47,47,47,48,50,47,47,,48,50,,,,,48,,48,48,48,48,48,48,48,48',
',51,48,48,,50,51,,,,50,,,,,,50,,50,50,50,50,50,50,50,50,51,52,50,50',
',51,52,,,,,51,,51,51,51,51,51,51,51,51,,53,51,51,,52,53,,,,52,,,,,,52',
',52,52,52,52,52,52,52,52,53,54,52,52,,53,54,,,,,53,,53,53,53,53,53,53',
'53,53,,55,53,53,,54,55,,,,54,,,,,,54,,54,54,54,54,54,54,54,54,55,56',
'54,54,,55,56,,,,,55,,55,55,55,55,55,55,55,55,,57,55,55,,56,57,,,,56',
',,,,,56,,56,56,56,56,56,56,56,56,57,58,56,56,,57,58,,,,,57,,57,57,57',
'57,57,57,57,57,,66,57,57,,58,66,,,,58,,,,,,58,,58,58,58,58,58,58,58',
'58,66,97,58,58,,66,97,,,,,66,,66,66,66,66,66,66,66,66,,102,66,66,,97',
'102,,,,97,,,,,,97,,97,97,97,97,97,97,97,97,102,84,97,97,104,102,,,,104',
',102,,102,102,102,102,102,102,102,102,,,102,102,85,104,104,104,104,104',
',84,104,104,86,104,104,84,,104,,104,104,104,104,104,104,104,104,105',
',104,104,,105,85,,,,,,85,,,,86,,,,,110,86,,,105,110,,,,105,,,,,,105',
',105,105,105,105,105,105,105,105,110,111,105,105,,110,111,,,,,110,,110',
'110,110,110,110,110,110,110,,113,110,110,,111,113,,,,111,,,,,,111,,111',
'111,111,111,111,111,111,111,113,114,111,111,,113,114,,,,,113,,113,113',
'113,113,113,113,113,113,,,113,113,,114,,,117,,114,,,117,,,114,,114,114',
'114,114,114,114,114,114,,,114,114,117,117,117,117,117,,,117,117,,117',
'117,,,117,,117,117,117,117,117,117,117,117,120,,117,117,,120,,,,,,,',
',,,,,,,,,125,,,120,120,125,,,120,,120,120,,,120,,120,120,120,120,120',
'120,120,120,,125,120,120,128,,125,,,128,,,125,,125,125,125,125,125,125',
'125,125,,,125,125,128,128,128,128,128,,,128,128,,128,128,,,128,,128',
'128,128,128,128,128,128,128,144,,128,128,,144,,,,,,,,,,,67,,67,67,67',
',144,144,144,144,144,,,144,144,,144,144,,,144,,144,144,144,144,144,144',
'144,144,147,67,144,144,,147,,67,,,,,,,,,82,,82,82,82,148,,,,147,148',
',,,147,,,,,,147,,147,147,147,147,147,147,147,147,148,82,147,147,155',
'148,,82,,155,,148,,148,148,148,148,148,148,148,148,,,148,148,,155,155',
'155,155,155,,,155,155,,155,155,,,155,,155,155,155,155,155,155,155,155',
'158,,155,155,,158,,,,,,,,,,,83,,83,83,83,,158,158,158,158,158,,,158',
'158,,158,158,,,158,,158,158,158,158,158,158,158,158,159,83,158,158,',
'159,,83,,,,,,,,,,,,,,,,,,159,159,,,160,159,,159,159,160,,159,,159,159',
'159,159,159,159,159,159,,,159,159,,160,160,160,160,160,,,160,160,,160',
'160,,,160,,160,160,160,160,160,160,160,160,,,160,160,134,,134,134,134',
'134,134,134,134,134,134,134,134,134,134,134,,,,,,,,,,,,,,,,134,,,,,',
'134,,,,,,,,,72,134,72,72,72,72,72,72,72,72,72,72,72,72,72,72,,,,,,,',
',,,,,,,,72,,,,,,72,,,,,,,,,69,72,69,69,69,69,69,69,69,69,69,69,69,69',
'69,69,,,,,,,,,,,,,,,,69,,,,,,69,69,81,,81,81,81,81,81,81,81,81,81,81',
'81,81,81,81,87,,87,87,87,87,87,87,87,87,87,87,87,87,,81,81,,,,,81,,',
',,,,,,,87,,,,,88,87,88,88,88,88,88,88,88,88,88,88,88,88,89,,89,89,89',
'89,89,89,89,89,89,89,89,89,,,,88,,,,,,88,,,,,,,,89,,,,,90,89,90,90,90',
'90,90,90,90,90,90,90,90,90,91,,91,91,91,91,91,91,91,91,91,91,91,91,',
',,90,,,,,,90,,,,,,,,91,,,,,92,91,92,92,92,92,92,92,92,92,92,92,92,92',
'157,,157,157,157,157,157,157,157,157,157,157,157,157,157,157,,92,,,',
',,92,,,,,,,,157,,,,,62,157,62,62,62,62,62,62,62,62,62,62,62,62,62,62',
',,,,,,,,,,62,,,,,62,,,,,5,62,5,5,5,5,5,5,5,5,5,5,5,5,5,5,93,,93,93,93',
'93,93,93,93,93,93,93,93,93,,5,,,,,,5,,,,,,,,,,93,,,,,94,93,94,94,94',
'94,94,94,94,94,94,94,94,94,59,,59,59,59,59,59,59,59,59,59,59,59,59,59',
'59,,94,,,,,,94,,,,,,,,59,,,,,127,59,127,127,127,127,127,127,127,127',
'127,127,127,127,127,127,,,,,,,,,,,127,,,,,127,,,,,156,127,156,156,156',
'156,156,156,156,156,156,156,156,156,156,156,,,,,,,,,,,,,,,,156,,,,,123',
'156,123,123,123,123,123,123,123,123,123,123,123,123,123,123,95,,95,95',
'95,95,95,95,95,95,95,95,95,95,95,123,123,,,,,123,,,,,,,,,,95,,,,,143',
'95,143,143,143,143,143,143,143,143,143,143,143,143,143,143,,,,,,,,,',
',143,,,,,143,,,,,131,143,131,131,131,131,131,131,131,131,131,131,131',
'131,131,131,,,,,,,,,,,,,,,,131,,,,,74,131,74,74,74,74,74,74,74,74,74',
'74,74,74,74,74,,,,,,,,,,,,,,,,74,,,,,70,74,70,70,70,70,70,70,70,70,70',
'70,70,70,70,70,,,,,,,,,,,,,,,,70,,,,,132,70,132,132,132,132,132,132',
'132,132,132,132,132,132,132,132,,,,,,,,,,,,,,,,132,,,,,107,132,107,107',
'107,107,107,107,107,107,107,107,107,107,107,107,,,,,,,,,,,,,,,,107,',
',,,133,107,133,133,133,133,133,133,133,133,133,133,133,133,133,133,',
',,,,,,,,,,,,,,133,,,,,,133' ]
        racc_action_check = arr = ::Array.new(2090, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
   nil,    18,     0,    77,    46,  1608,   nil,   nil,   nil,   nil,
    47,   nil,    68,    33,    21,    39,    38,   nil,   nil,    94,
   115,   nil,   141,   nil,   nil,   nil,   nil,   nil,   nil,   162,
   188,   nil,   nil,   nil,   nil,   nil,   209,   -24,   -23,   nil,
   nil,   nil,   -14,   235,   256,   282,   303,   329,   350,    21,
   376,   397,   423,   444,   470,   491,   517,   538,   564,  1674,
   nil,   -18,  1572,   nil,    36,   nil,   585,   988,    20,  1331,
  1942,   -33,  1285,   -27,  1906,    -8,    31,   nil,    27,   nil,
    60,  1370,  1034,  1130,   659,   683,   693,  1386,  1422,  1436,
  1472,  1486,  1522,  1624,  1660,  1798,   -31,   611,    30,   nil,
   nil,   -21,   632,   nil,   661,   707,   nil,  2014,   nil,   nil,
   728,   754,   nil,   775,   801,   -29,   nil,   829,    -3,   nil,
   875,    22,   nil,  1782,   nil,   897,   nil,  1710,   925,   nil,
    63,  1870,  1978,  2050,  1239,   -30,   -14,   -22,   nil,     6,
   nil,   nil,   nil,  1834,   971,   nil,   nil,  1017,  1038,   nil,
   nil,   nil,   nil,   nil,   nil,  1067,  1746,  1536,  1113,  1159,
  1188,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -2,   -87,   -26,   -87,    -3,    -5,    -6,    -7,    -8,    -9,
   -10,   -14,   -87,   -87,   -29,   -87,   -53,   -27,   -28,   -87,
   -87,   -51,   -87,   -55,   -56,   -57,   -58,   -59,   -60,   -77,
   -71,   -63,   -64,   -65,   -66,   -67,   -87,   -87,   -87,   -86,
   165,    -4,   -87,   -87,   -87,   -87,   -87,   -87,   -87,   -87,
   -87,   -87,   -87,   -87,   -87,   -87,   -87,   -87,   -77,   -11,
   -53,   -18,   -87,    -2,   -31,   -30,   -87,   -35,   -50,   -87,
   -78,   -87,   -87,   -87,   -87,   -57,   -74,    -2,   -82,   -84,
   -52,   -87,   -33,   -34,   -36,   -37,   -38,   -39,   -40,   -41,
   -42,   -43,   -44,   -45,   -46,   -47,   -87,   -87,   -87,   -12,
   -15,   -87,   -87,    -2,   -26,   -87,   -32,   -22,   -54,   -61,
   -87,   -87,   -62,   -87,   -77,   -87,   -75,   -26,   -87,   -83,
   -26,   -49,   -48,   -87,   -52,   -87,    -2,   -87,   -26,   -20,
   -87,   -87,   -79,   -72,   -87,   -87,   -87,   -87,   -70,   -87,
   -81,   -85,   -49,   -87,   -26,    -2,   -13,   -87,   -87,   -68,
    -2,   -76,   -84,    -2,   -19,   -26,   -21,   -73,   -26,   -26,
   -26,   -17,   -69,   -80,   -16 ]

racc_goto_table = [
    16,     2,    71,   141,   120,   130,    75,    73,   115,   118,
   105,    61,    99,   100,    64,     1,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    96,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    80,   nil,   141,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   104,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   116,   nil,   119,   159,   117,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   135,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   124,   nil,   nil,   nil,
   nil,   nil,    16,    16,   128,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,    16,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    16,   144,   nil,    59,
   nil,    62,   nil,   nil,   nil,   151,   nil,   nil,    67,    68,
   nil,    69,    16,   nil,   nil,   nil,   155,   nil,    70,    72,
   nil,   158,   nil,    16,   160,    74,    16,    16,    16,   nil,
   nil,   nil,    81,    82,    83,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    95,    70,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   107,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   123,   nil,   nil,   nil,
   nil,   127,   nil,   nil,   131,   nil,   nil,   nil,   nil,   132,
   133,   nil,   134,    70,   nil,   nil,   nil,   nil,   nil,   131,
   nil,   nil,   nil,   nil,   143,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   156,   157,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   131 ]

racc_goto_check = [
    16,     2,    17,     5,    27,    15,    19,    22,    25,    26,
    14,     9,    10,    11,    13,     1,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    17,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    16,   nil,     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    16,   nil,    16,    27,     2,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,
   nil,   nil,    16,    16,     2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,    16,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    16,     2,   nil,     4,
   nil,     4,   nil,   nil,   nil,    16,   nil,   nil,     4,     4,
   nil,     4,    16,   nil,   nil,   nil,     2,   nil,     4,     4,
   nil,     2,   nil,    16,     2,     4,    16,    16,    16,   nil,
   nil,   nil,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,
   nil,     4,   nil,   nil,     4,   nil,   nil,   nil,   nil,     4,
     4,   nil,     4,     4,   nil,   nil,   nil,   nil,   nil,     4,
   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     4,     4,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,    15,     1,   nil,   119,  -117,   nil,   nil,   nil,     0,
   -49,   -48,   nil,     0,   -54,  -100,    -2,   -27,   nil,   -30,
   nil,   nil,   -23,   nil,   nil,   -68,   -69,   -75 ]

racc_goto_default = [
   nil,   nil,   nil,     4,     5,     6,     7,     8,    11,   nil,
   nil,   nil,    14,   nil,   nil,    15,    60,   nil,    21,    25,
    23,    24,   nil,    32,    33,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 54, :_reduce_none,
  0, 55, :_reduce_2,
  2, 55, :_reduce_3,
  3, 55, :_reduce_4,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 56, :_reduce_9,
  1, 56, :_reduce_10,
  2, 56, :_reduce_11,
  3, 59, :_reduce_12,
  5, 61, :_reduce_13,
  0, 62, :_reduce_14,
  2, 62, :_reduce_15,
  6, 64, :_reduce_16,
  5, 64, :_reduce_17,
  0, 63, :_reduce_none,
  4, 63, :_reduce_19,
  4, 60, :_reduce_20,
  6, 58, :_reduce_21,
  3, 58, :_reduce_22,
  3, 68, :_reduce_23,
  1, 68, :_reduce_24,
  4, 68, :_reduce_25,
  0, 65, :_reduce_26,
  1, 65, :_reduce_27,
  1, 65, :_reduce_28,
  0, 66, :_reduce_29,
  1, 66, :_reduce_30,
  0, 67, :_reduce_31,
  1, 67, :_reduce_32,
  3, 57, :_reduce_33,
  3, 57, :_reduce_34,
  2, 57, :_reduce_35,
  3, 57, :_reduce_36,
  3, 57, :_reduce_37,
  3, 57, :_reduce_38,
  3, 57, :_reduce_39,
  3, 57, :_reduce_40,
  3, 57, :_reduce_41,
  3, 57, :_reduce_42,
  3, 57, :_reduce_43,
  3, 57, :_reduce_44,
  3, 57, :_reduce_45,
  3, 57, :_reduce_46,
  3, 57, :_reduce_47,
  4, 57, :_reduce_48,
  4, 57, :_reduce_49,
  2, 57, :_reduce_50,
  1, 57, :_reduce_none,
  3, 72, :_reduce_52,
  1, 72, :_reduce_53,
  3, 71, :_reduce_54,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 73, :_reduce_58,
  1, 73, :_reduce_59,
  1, 73, :_reduce_60,
  3, 73, :_reduce_61,
  3, 73, :_reduce_62,
  1, 73, :_reduce_63,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_66,
  1, 74, :_reduce_67,
  5, 74, :_reduce_68,
  7, 76, :_reduce_69,
  4, 76, :_reduce_70,
  0, 75, :_reduce_71,
  3, 75, :_reduce_72,
  5, 75, :_reduce_73,
  0, 78, :_reduce_74,
  1, 78, :_reduce_75,
  3, 78, :_reduce_76,
  0, 70, :_reduce_77,
  1, 70, :_reduce_78,
  3, 70, :_reduce_79,
  7, 77, :_reduce_80,
  4, 77, :_reduce_81,
  0, 79, :_reduce_82,
  1, 79, :_reduce_83,
  0, 80, :_reduce_84,
  2, 80, :_reduce_85,
  1, 69, :_reduce_86 ]

racc_reduce_n = 87

racc_shift_n = 165

racc_token_table = {
  false => 0,
  :error => 1,
  "." => 2,
  "!" => 3,
  "*" => 4,
  "/" => 5,
  "%" => 6,
  "+" => 7,
  "-" => 8,
  "==" => 9,
  "!=" => 10,
  ">" => 11,
  ">=" => 12,
  "<" => 13,
  "<=" => 14,
  "<>" => 15,
  "&&" => 16,
  "||" => 17,
  "=" => 18,
  "+=" => 19,
  "-=" => 20,
  "*=" => 21,
  "/=" => 22,
  "%=" => 23,
  ";" => 24,
  :BREAK => 25,
  :RETURN => 26,
  :IF => 27,
  "{" => 28,
  "}" => 29,
  :ELSE => 30,
  :ELSEIF => 31,
  :LOOP => 32,
  "[" => 33,
  "]" => 34,
  :PRIVATE => 35,
  :PUBLIC => 36,
  :STATIC => 37,
  :CONST => 38,
  "(" => 39,
  ")" => 40,
  :NUMBER => 41,
  :STRING => 42,
  :BOOLEAN => 43,
  :NULL => 44,
  :SELF => 45,
  :SUPER => 46,
  :NEW => 47,
  :FUNCTION => 48,
  ":" => 49,
  "," => 50,
  :CLASS => 51,
  :IDENTIFIER => 52 }

racc_nt_base = 53

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\"==\"",
  "\"!=\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"<>\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\"+=\"",
  "\"-=\"",
  "\"*=\"",
  "\"/=\"",
  "\"%=\"",
  "\";\"",
  "BREAK",
  "RETURN",
  "IF",
  "\"{\"",
  "\"}\"",
  "ELSE",
  "ELSEIF",
  "LOOP",
  "\"[\"",
  "\"]\"",
  "PRIVATE",
  "PUBLIC",
  "STATIC",
  "CONST",
  "\"(\"",
  "\")\"",
  "NUMBER",
  "STRING",
  "BOOLEAN",
  "NULL",
  "SELF",
  "SUPER",
  "NEW",
  "FUNCTION",
  "\":\"",
  "\",\"",
  "CLASS",
  "IDENTIFIER",
  "$start",
  "program",
  "statements",
  "statement",
  "expr",
  "var_assign",
  "if_els_stmt",
  "loop_stmt",
  "if_stmt",
  "elif_stmts",
  "els_stmt",
  "elif_stmt",
  "access_md",
  "static_md",
  "const_md",
  "var_def",
  "identifier",
  "args",
  "primary",
  "variable",
  "lit",
  "object",
  "hash",
  "func_def",
  "class_def",
  "params",
  "expands",
  "var_assigns" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 15)
  def _reduce_2(val, _values, result)
    result = [:STATEMENTS, []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 16)
  def _reduce_3(val, _values, result)
    result[1] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 17)
  def _reduce_4(val, _values, result)
    result[1] << val[1]
    result
  end
.,.,

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 23)
  def _reduce_9(val, _values, result)
    result = [:BREAK]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 24)
  def _reduce_10(val, _values, result)
    result = [:RETURN, [:INSTANCE, :NULL, nil]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 25)
  def _reduce_11(val, _values, result)
    result = [:RETURN, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 27)
  def _reduce_12(val, _values, result)
    result = [:IF] + [([val[0]] + val[1] + [val[2]])]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 29)
  def _reduce_13(val, _values, result)
    result = [val[1], val[3]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 31)
  def _reduce_14(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 32)
  def _reduce_15(val, _values, result)
    result << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 33)
  def _reduce_16(val, _values, result)
    result = [val[2], val[4]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 34)
  def _reduce_17(val, _values, result)
    result = [val[1], val[3]]
    result
  end
.,.,

# reduce 18 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 37)
  def _reduce_19(val, _values, result)
    result = [[:INSTANCE, :BOOLEAN, nil, true], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 39)
  def _reduce_20(val, _values, result)
    result = [:LOOP, val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 41)
  def _reduce_21(val, _values, result)
    result = ['=', val[0], val[1], val[2], val[3], val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 42)
  def _reduce_22(val, _values, result)
    result = ['=', nil, nil, nil, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 44)
  def _reduce_23(val, _values, result)
    result = [:VARIABLE, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 45)
  def _reduce_24(val, _values, result)
    result = [:VARIABLE, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 46)
  def _reduce_25(val, _values, result)
    result = [:INDEX, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 48)
  def _reduce_26(val, _values, result)
    result = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 49)
  def _reduce_27(val, _values, result)
    result = :PRIVATE
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 50)
  def _reduce_28(val, _values, result)
    result = :PUBLIC
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 52)
  def _reduce_29(val, _values, result)
    result = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 53)
  def _reduce_30(val, _values, result)
    result = :STATIC
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 55)
  def _reduce_31(val, _values, result)
    result = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 56)
  def _reduce_32(val, _values, result)
    result = :CONSTANT
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 58)
  def _reduce_33(val, _values, result)
    result = ['+', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 59)
  def _reduce_34(val, _values, result)
    result = ['-', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 60)
  def _reduce_35(val, _values, result)
    result = ['-', [:INSTANCE, :NUMBER, nil, 0], val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 61)
  def _reduce_36(val, _values, result)
    result = ['*', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 62)
  def _reduce_37(val, _values, result)
    result = ['/', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 63)
  def _reduce_38(val, _values, result)
    result = ['%', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 65)
  def _reduce_39(val, _values, result)
    result = ['==', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 66)
  def _reduce_40(val, _values, result)
    result = ['!=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 67)
  def _reduce_41(val, _values, result)
    result = ['!=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 68)
  def _reduce_42(val, _values, result)
    result = ['>', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 69)
  def _reduce_43(val, _values, result)
    result = ['>=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 70)
  def _reduce_44(val, _values, result)
    result = ['<', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 71)
  def _reduce_45(val, _values, result)
    result = ['<=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 73)
  def _reduce_46(val, _values, result)
    result = ['&&', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 74)
  def _reduce_47(val, _values, result)
    result = ['||', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 75)
  def _reduce_48(val, _values, result)
    result = [:FUNC_CALL, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 76)
  def _reduce_49(val, _values, result)
    result = [:INDEX, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 78)
  def _reduce_50(val, _values, result)
    result = ['!', val[1]]
    result
  end
.,.,

# reduce 51 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 82)
  def _reduce_52(val, _values, result)
    result = [:VARIABLE, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 83)
  def _reduce_53(val, _values, result)
    result = [:VARIABLE, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 85)
  def _reduce_54(val, _values, result)
    result = val[1]
    result
  end
.,.,

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 90)
  def _reduce_58(val, _values, result)
    result = [:INSTANCE, :NUMBER, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 91)
  def _reduce_59(val, _values, result)
    result = [:INSTANCE, :STRING, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 92)
  def _reduce_60(val, _values, result)
    result = [:INSTANCE, :BOOLEAN, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 93)
  def _reduce_61(val, _values, result)
    result = [:LIST_NEW, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 94)
  def _reduce_62(val, _values, result)
    result = [:HASH_NEW, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 95)
  def _reduce_63(val, _values, result)
    result = [:INSTANCE, :NULL, nil]
    result
  end
.,.,

# reduce 64 omitted

# reduce 65 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 99)
  def _reduce_66(val, _values, result)
    result = [:SELF]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 100)
  def _reduce_67(val, _values, result)
    result = [:SUPER]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 101)
  def _reduce_68(val, _values, result)
    result = [:NEW, val[1], val[3]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 103)
  def _reduce_69(val, _values, result)
    result = [:FUNCTION, val[2], val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 104)
  def _reduce_70(val, _values, result)
    result = [:FUNCTION, [], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 106)
  def _reduce_71(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 107)
  def _reduce_72(val, _values, result)
    result = [[val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 108)
  def _reduce_73(val, _values, result)
    result << [val[2], val[4]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 110)
  def _reduce_74(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 111)
  def _reduce_75(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 112)
  def _reduce_76(val, _values, result)
    result << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 114)
  def _reduce_77(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 115)
  def _reduce_78(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 116)
  def _reduce_79(val, _values, result)
    result << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 118)
  def _reduce_80(val, _values, result)
    result = [:CLASS_NEW, val[2], val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 119)
  def _reduce_81(val, _values, result)
    result = [:CLASS_NEW, nil, val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 121)
  def _reduce_82(val, _values, result)
    result = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 122)
  def _reduce_83(val, _values, result)
    result = [:VARIABLE, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 124)
  def _reduce_84(val, _values, result)
    result = [:STATEMENTS, []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 125)
  def _reduce_85(val, _values, result)
    result[1] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 127)
  def _reduce_86(val, _values, result)
    result = [:IDENTIFIER, val[0]]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class RadiusParser

if __FILE__ == $0
  parser = RadiusParser.new
  File.open("program.rlb", "r") do |f|
    res = parser.parse(f.read.chomp)
    p (res)
  end
end
