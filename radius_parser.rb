#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'pp'
require 'strscan'

class RadiusParser < Racc::Parser

module_eval(<<'...end radius_parser.ry/module_eval...', 'radius_parser.ry', 80)

def parse(str)
  scanner = StringScanner.new(str)
  @q = []
  while !scanner.eos?
    scanner.scan(/[\s\n]+/)

    scanner.scan(/if/) ?                        @q << [:IF, "if"] :
    scanner.scan(/else/) ?                      @q << [:ELSE, "else"] :
    scanner.scan(/loop/) ?                      @q << [:LOOP, "loop"] :
    scanner.scan(/break/) ?                     @q << [:BREAK, "break"] :
    scanner.scan(/return/) ?                    @q << [:RETURN, "return"] :
    scanner.scan(/def/) ?                       @q << [:DEF, "def"] :


    scanner.scan(/(true|false)/) ?              @q << [:BOOLEAN, scanner.matched] :
    scanner.scan(/\".*?\"/) ?                   @q << [:STRING, scanner.matched[1..-2]] :
    scanner.scan(/[a-zA-Z_][a-zA-Z0-9_]*/) ?    @q << [:IDENTIFIER, scanner.matched] :
    scanner.scan(/(0|[0-9]*\.[0-9]+|[1-9][0-9]*)/) ?   @q << [:NUMBER, scanner.matched.to_f] :

    scanner.scan(/\+=/) ?                       @q << ["+=", "+="] :
    scanner.scan(/-=/) ?                        @q << ["-=", "-="] :
    scanner.scan(/\*=/) ?                       @q << ["*=", "*="] :
    scanner.scan(/\/=/) ?                       @q << ["/=", "/="] :

    scanner.scan(/==/) ?                        @q << ["==", "=="] :
    scanner.scan(/!=/) ?                        @q << ["!=", "!="] :
    scanner.scan(/>=/) ?                        @q << [">=", ">="] :
    scanner.scan(/<=/) ?                        @q << ["<=", "<="] :
    scanner.scan(/>/) ?                         @q << [">", ">"] :
    scanner.scan(/</) ?                         @q << ["<", "<"] :

    scanner.scan(/./) ?                         @q << [scanner.matched, scanner.matched] :
    (raise "scanner error")
  end
  puts ("Token: #{@q}")

  do_parse
end

def next_token
  @q.shift
end

...end radius_parser.ry/module_eval...
##### State transition tables begin ###

racc_action_table = [
    14,    29,    30,    31,     3,    14,    29,    30,    31,    27,
    28,    32,    33,    34,    35,    36,    37,    16,    53,    50,
    14,    53,    16,    26,    20,    21,    22,    23,    24,    20,
    21,    22,    23,    24,    10,    11,    12,    16,    14,    90,
   101,    25,    13,    14,    20,    21,    22,    23,    24,    38,
    39,    40,    41,    42,    43,    16,    14,    49,    93,    44,
    16,    14,    20,    21,    22,    23,    24,    20,    21,    22,
    23,    24,    81,    16,    85,    46,    14,    82,    16,    82,
    20,    21,    22,    23,    24,    20,    21,    22,    23,    24,
    10,    11,    12,    16,    14,    29,    30,    31,    13,    45,
    20,    21,    22,    23,    24,    29,    30,    31,    10,    11,
    12,    16,    14,    93,    98,    44,    13,    54,    20,    21,
    22,    23,    24,   nil,    14,    86,    10,    11,    12,    16,
    82,    96,   nil,   nil,    13,   nil,    20,    21,    22,    23,
    24,    16,    14,   nil,   nil,   nil,   nil,   nil,    20,    21,
    22,    23,    24,   nil,   nil,   nil,    10,    11,    12,    16,
    14,   nil,    95,   nil,    13,   nil,    20,    21,    22,    23,
    24,   nil,    14,   nil,    10,    11,    12,    16,    14,    88,
   nil,   nil,    13,   nil,    20,    21,    22,    23,    24,    16,
    14,   nil,   nil,   nil,   nil,    16,    20,    21,    22,    23,
    24,   nil,    20,    21,    22,    23,    24,    16,    14,   nil,
   nil,   nil,   nil,   nil,    20,    21,    22,    23,    24,   nil,
    14,   nil,    10,    11,    12,    16,    14,   nil,    84,   nil,
    13,   nil,    20,    21,    22,    23,    24,    16,    14,   nil,
   nil,   nil,   nil,    16,    20,    21,    22,    23,    24,   nil,
    20,    21,    22,    23,    24,    16,    14,   nil,   nil,   nil,
   nil,    14,    20,    21,    22,    23,    24,   nil,   nil,   nil,
   nil,   nil,   nil,    16,    14,   nil,   nil,   nil,    16,    14,
    20,    21,    22,    23,    24,    20,    21,    22,    23,    24,
   nil,    16,    14,   nil,   nil,   nil,    16,    14,    20,    21,
    22,    23,    24,    20,    21,    22,    23,    24,   nil,    16,
    14,   nil,   nil,   nil,    16,    14,    20,    21,    22,    23,
    24,    20,    21,    22,    23,    24,   nil,    16,    14,   nil,
   nil,   nil,    16,    14,    20,    21,    22,    23,    24,    20,
    21,    22,    23,    24,   nil,    16,    14,   nil,   nil,   nil,
    16,    14,    20,    21,    22,    23,    24,    20,    21,    22,
    23,    24,   nil,    16,   nil,   nil,   nil,   nil,    16,   nil,
    20,    21,    22,    23,    24,    20,    21,    22,    23,    24,
    29,    30,    31,    27,    28,    32,    33,    34,    35,    36,
    37,    29,    30,    31,    27,    28,    32,    33,    34,    35,
    36,    37,    78,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    83,    29,    30,    31,    27,    28,    32,
    33,    34,    35,    36,    37,   nil,   nil,   nil,   nil,   nil,
   nil,    75,    29,    30,    31,    27,    28,   -50,   -50,   -50,
   -50,   -50,   -50,    29,    30,    31,    27,    28,   -50,   -50,
   -50,   -50,   -50,   -50,    29,    30,    31,    27,    28,   -50,
   -50,   -50,   -50,   -50,   -50,    29,    30,    31,    27,    28,
   -50,   -50,   -50,   -50,   -50,   -50,    29,    30,    31,    27,
    28,   -50,   -50,   -50,   -50,   -50,   -50,    29,    30,    31,
    27,    28,   -50,   -50,   -50,   -50,   -50,   -50,    29,    30,
    31,    27,    28,    32,    33,    34,    35,    36,    37,    29,
    30,    31,    27,    28,    32,    33,    34,    35,    36,    37,
    29,    30,    31,    27,    28,    32,    33,    34,    35,    36,
    37,    29,    30,    31,    27,    28,    32,    33,    34,    35,
    36,    37,    29,    30,    31,    27,    28,    32,    33,    34,
    35,    36,    37,    29,    30,    31,    27,    28,    32,    33,
    34,    35,    36,    37,    29,    30,    31,    27,    28,    32,
    33,    34,    35,    36,    37,    29,    30,    31,    27,    28,
    32,    33,    34,    35,    36,    37 ]

racc_action_check = [
    54,    55,    55,    55,     1,    53,     5,     5,     5,     5,
     5,     5,     5,     5,     5,     5,     5,    54,    19,    13,
   100,    66,    53,     5,    54,    54,    54,    54,    54,    53,
    53,    53,    53,    53,   100,   100,   100,   100,    42,    86,
   100,     3,   100,    43,   100,   100,   100,   100,   100,     6,
     6,     6,     6,     6,     6,    42,    44,    12,    89,     6,
    43,    49,    42,    42,    42,    42,    42,    43,    43,    43,
    43,    43,    74,    44,    79,    10,     2,    74,    49,    79,
    44,    44,    44,    44,    44,    49,    49,    49,    49,    49,
     2,     2,     2,     2,    94,    56,    56,    56,     2,     7,
     2,     2,     2,     2,     2,    51,    51,    51,    94,    94,
    94,    94,    93,    95,    94,    48,    94,    23,    94,    94,
    94,    94,    94,   nil,    11,    80,    93,    93,    93,    93,
    80,    93,   nil,   nil,    93,   nil,    93,    93,    93,    93,
    93,    11,    91,   nil,   nil,   nil,   nil,   nil,    11,    11,
    11,    11,    11,   nil,   nil,   nil,    91,    91,    91,    91,
    83,   nil,    91,   nil,    91,   nil,    91,    91,    91,    91,
    91,   nil,    14,   nil,    83,    83,    83,    83,    16,    83,
   nil,   nil,    83,   nil,    83,    83,    83,    83,    83,    14,
    82,   nil,   nil,   nil,   nil,    16,    14,    14,    14,    14,
    14,   nil,    16,    16,    16,    16,    16,    82,    77,   nil,
   nil,   nil,   nil,   nil,    82,    82,    82,    82,    82,   nil,
    27,   nil,    77,    77,    77,    77,    28,   nil,    77,   nil,
    77,   nil,    77,    77,    77,    77,    77,    27,    29,   nil,
   nil,   nil,   nil,    28,    27,    27,    27,    27,    27,   nil,
    28,    28,    28,    28,    28,    29,    30,   nil,   nil,   nil,
   nil,    31,    29,    29,    29,    29,    29,   nil,   nil,   nil,
   nil,   nil,   nil,    30,    32,   nil,   nil,   nil,    31,    33,
    30,    30,    30,    30,    30,    31,    31,    31,    31,    31,
   nil,    32,    34,   nil,   nil,   nil,    33,    35,    32,    32,
    32,    32,    32,    33,    33,    33,    33,    33,   nil,    34,
    36,   nil,   nil,   nil,    35,    37,    34,    34,    34,    34,
    34,    35,    35,    35,    35,    35,   nil,    36,    38,   nil,
   nil,   nil,    37,    39,    36,    36,    36,    36,    36,    37,
    37,    37,    37,    37,   nil,    38,    40,   nil,   nil,   nil,
    39,    41,    38,    38,    38,    38,    38,    39,    39,    39,
    39,    39,   nil,    40,   nil,   nil,   nil,   nil,    41,   nil,
    40,    40,    40,    40,    40,    41,    41,    41,    41,    41,
    52,    52,    52,    52,    52,    52,    52,    52,    52,    52,
    52,    76,    76,    76,    76,    76,    76,    76,    76,    76,
    76,    76,    52,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    76,    47,    47,    47,    47,    47,    47,
    47,    47,    47,    47,    47,   nil,   nil,   nil,   nil,   nil,
   nil,    47,    62,    62,    62,    62,    62,    62,    62,    62,
    62,    62,    62,    60,    60,    60,    60,    60,    60,    60,
    60,    60,    60,    60,    61,    61,    61,    61,    61,    61,
    61,    61,    61,    61,    61,    63,    63,    63,    63,    63,
    63,    63,    63,    63,    63,    63,    64,    64,    64,    64,
    64,    64,    64,    64,    64,    64,    64,    65,    65,    65,
    65,    65,    65,    65,    65,    65,    65,    65,    67,    67,
    67,    67,    67,    67,    67,    67,    67,    67,    67,    68,
    68,    68,    68,    68,    68,    68,    68,    68,    68,    68,
    69,    69,    69,    69,    69,    69,    69,    69,    69,    69,
    69,    70,    70,    70,    70,    70,    70,    70,    70,    70,
    70,    70,    71,    71,    71,    71,    71,    71,    71,    71,
    71,    71,    71,    72,    72,    72,    72,    72,    72,    72,
    72,    72,    72,    72,    73,    73,    73,    73,    73,    73,
    73,    73,    73,    73,    73,    87,    87,    87,    87,    87,
    87,    87,    87,    87,    87,    87 ]

racc_action_pointer = [
   nil,     4,    70,    41,   nil,     4,    36,    80,   nil,   nil,
    56,   118,    34,    -6,   166,   nil,   172,   nil,   nil,    -5,
   nil,   nil,   nil,    94,   nil,   nil,   nil,   214,   220,   232,
   250,   255,   268,   273,   286,   291,   304,   309,   322,   327,
   340,   345,    32,    37,    50,   nil,   nil,   412,    92,    55,
   nil,   103,   378,    -1,    -6,    -1,    93,   nil,   nil,   nil,
   441,   452,   430,   463,   474,   485,    -2,   496,   507,   518,
   529,   540,   551,   562,    48,   nil,   389,   202,   nil,    50,
   101,   nil,   184,   154,   nil,   nil,    14,   573,   nil,    31,
   nil,   136,   nil,   106,    88,    86,   nil,   nil,   nil,   nil,
    14,   nil ]

racc_action_default = [
    -2,   -50,    -1,   -50,    -3,   -50,   -45,   -50,    -7,    -8,
   -50,   -50,   -50,   -50,   -50,   -35,   -50,   -37,   -38,   -50,
   -44,   -46,   -47,   -50,   -49,   102,    -4,   -50,   -50,   -50,
   -50,   -50,   -50,   -50,   -50,   -50,   -50,   -50,   -50,   -50,
   -50,   -50,   -50,   -50,   -41,    -6,    -9,   -50,   -45,   -50,
    -2,   -25,   -50,   -41,   -41,   -23,   -24,   -26,   -27,   -28,
   -29,   -30,   -31,   -32,   -33,   -34,    -5,   -11,   -12,   -13,
   -14,   -15,   -16,   -42,   -50,   -10,   -50,   -50,   -36,   -50,
   -50,   -39,   -50,   -50,   -22,   -40,   -50,   -43,    -2,   -19,
    -2,   -50,   -18,   -50,   -50,   -19,    -2,   -21,   -48,   -17,
   -50,   -20 ]

racc_goto_table = [
     6,    47,    74,    89,    51,     2,    52,    66,    92,     1,
   nil,    79,    80,    97,    99,   nil,   nil,    55,    56,    57,
    58,    59,    60,    61,    62,    63,    64,    65,    67,    68,
    69,    70,    71,    72,    73,   nil,   nil,   nil,   nil,    76,
   nil,   nil,   nil,    73,    73,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    77,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    87,   nil,   nil,     6,   nil,   nil,   nil,   nil,
   nil,     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6,
   nil,     6,     6,    91,   nil,    94,   nil,   nil,     6,   nil,
   nil,   100 ]

racc_goto_check = [
     5,     4,    14,     3,     4,     2,     4,     6,    10,     1,
   nil,    14,    14,     3,    10,   nil,   nil,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,   nil,   nil,   nil,   nil,     4,
   nil,   nil,   nil,     4,     4,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     4,   nil,   nil,     5,   nil,   nil,   nil,   nil,
   nil,     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,
   nil,     5,     5,     2,   nil,     2,   nil,   nil,     5,   nil,
   nil,     2 ]

racc_goto_pointer = [
   nil,     9,     5,   -80,   -10,    -2,   -31,   nil,   nil,   nil,
   -81,   nil,   nil,   nil,   -42 ]

racc_goto_default = [
   nil,   nil,   nil,     4,     5,    48,    19,     7,     8,     9,
   nil,    15,    17,    18,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 36, :_reduce_none,
  0, 37, :_reduce_2,
  2, 37, :_reduce_3,
  2, 38, :_reduce_none,
  3, 38, :_reduce_5,
  2, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  2, 38, :_reduce_9,
  3, 38, :_reduce_10,
  3, 42, :_reduce_11,
  3, 42, :_reduce_12,
  3, 42, :_reduce_13,
  3, 42, :_reduce_14,
  3, 42, :_reduce_15,
  3, 42, :_reduce_16,
  8, 43, :_reduce_17,
  6, 43, :_reduce_18,
  0, 45, :_reduce_none,
  4, 45, :_reduce_20,
  2, 45, :_reduce_21,
  4, 44, :_reduce_22,
  3, 39, :_reduce_23,
  3, 39, :_reduce_24,
  2, 39, :_reduce_25,
  3, 39, :_reduce_26,
  3, 39, :_reduce_27,
  3, 39, :_reduce_28,
  3, 39, :_reduce_29,
  3, 39, :_reduce_30,
  3, 39, :_reduce_31,
  3, 39, :_reduce_32,
  3, 39, :_reduce_33,
  3, 39, :_reduce_34,
  1, 39, :_reduce_none,
  3, 46, :_reduce_36,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  4, 48, :_reduce_39,
  4, 48, :_reduce_40,
  0, 49, :_reduce_41,
  1, 49, :_reduce_42,
  3, 49, :_reduce_43,
  1, 47, :_reduce_44,
  1, 47, :_reduce_none,
  1, 47, :_reduce_46,
  1, 47, :_reduce_47,
  7, 41, :_reduce_48,
  1, 40, :_reduce_49 ]

racc_reduce_n = 50

racc_shift_n = 102

racc_token_table = {
  false => 0,
  :error => 1,
  "*" => 2,
  "/" => 3,
  "%" => 4,
  "+" => 5,
  "-" => 6,
  "==" => 7,
  "!=" => 8,
  ">" => 9,
  ">=" => 10,
  "<" => 11,
  "<=" => 12,
  "=" => 13,
  "+=" => 14,
  "-=" => 15,
  "*=" => 16,
  "/=" => 17,
  "%=" => 18,
  ";" => 19,
  :BREAK => 20,
  :RETURN => 21,
  :IF => 22,
  "(" => 23,
  ")" => 24,
  "{" => 25,
  "}" => 26,
  :ELSE => 27,
  :LOOP => 28,
  "," => 29,
  :NUMBER => 30,
  :STRING => 31,
  :BOOLEAN => 32,
  :DEF => 33,
  :IDENTIFIER => 34 }

racc_nt_base = 35

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\"==\"",
  "\"!=\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"=\"",
  "\"+=\"",
  "\"-=\"",
  "\"*=\"",
  "\"/=\"",
  "\"%=\"",
  "\";\"",
  "BREAK",
  "RETURN",
  "IF",
  "\"(\"",
  "\")\"",
  "\"{\"",
  "\"}\"",
  "ELSE",
  "LOOP",
  "\",\"",
  "NUMBER",
  "STRING",
  "BOOLEAN",
  "DEF",
  "IDENTIFIER",
  "$start",
  "program",
  "stmts",
  "stmt",
  "expr",
  "identifier",
  "func",
  "var_assign",
  "if_stmt",
  "loop_stmt",
  "else_stmt",
  "primary",
  "lit",
  "func_call",
  "list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 11)
  def _reduce_2(val, _values, result)
    result = ['STMTS']
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 12)
  def _reduce_3(val, _values, result)
    val[0] << val[1]
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 15)
  def _reduce_5(val, _values, result)
    result = ['=', val[0], val[2]]
    result
  end
.,.,

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 19)
  def _reduce_9(val, _values, result)
    result = ['BREAK']
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 20)
  def _reduce_10(val, _values, result)
    result = ['RETURN', val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 22)
  def _reduce_11(val, _values, result)
    result = ['=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 23)
  def _reduce_12(val, _values, result)
    result = ['+=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 24)
  def _reduce_13(val, _values, result)
    result = ['-=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 25)
  def _reduce_14(val, _values, result)
    result = ['*=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 26)
  def _reduce_15(val, _values, result)
    result = ['/=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 27)
  def _reduce_16(val, _values, result)
    result = ['%=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 29)
  def _reduce_17(val, _values, result)
    result = ['IF', val[2], val[5], val[7]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 30)
  def _reduce_18(val, _values, result)
    result = ['IF', val[2], val[4], val[5]]
    result
  end
.,.,

# reduce 19 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 33)
  def _reduce_20(val, _values, result)
    result = val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 34)
  def _reduce_21(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 36)
  def _reduce_22(val, _values, result)
    result = ['LOOP', val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 38)
  def _reduce_23(val, _values, result)
    result = ['+', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 39)
  def _reduce_24(val, _values, result)
    result = ['-', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 40)
  def _reduce_25(val, _values, result)
    result = ['-', ["NUMBER", 0], val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 41)
  def _reduce_26(val, _values, result)
    result = ['*', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 42)
  def _reduce_27(val, _values, result)
    result = ['/', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 43)
  def _reduce_28(val, _values, result)
    result = ['%', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 44)
  def _reduce_29(val, _values, result)
    result = ['==', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 45)
  def _reduce_30(val, _values, result)
    result = ['!=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 46)
  def _reduce_31(val, _values, result)
    result = ['>', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 47)
  def _reduce_32(val, _values, result)
    result = ['>=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 48)
  def _reduce_33(val, _values, result)
    result = ['<', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 49)
  def _reduce_34(val, _values, result)
    result = ['<=', val[0], val[2]]
    result
  end
.,.,

# reduce 35 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 52)
  def _reduce_36(val, _values, result)
    result = val[1]
    result
  end
.,.,

# reduce 37 omitted

# reduce 38 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 56)
  def _reduce_39(val, _values, result)
    result = ['FUNC_CALL', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 57)
  def _reduce_40(val, _values, result)
    result = ['FUNC_CALL', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 60)
  def _reduce_41(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 61)
  def _reduce_42(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 62)
  def _reduce_43(val, _values, result)
    val[0] << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 64)
  def _reduce_44(val, _values, result)
    result = ['NUMBER', val[0]]
    result
  end
.,.,

# reduce 45 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 66)
  def _reduce_46(val, _values, result)
    result = ['STRING', val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 67)
  def _reduce_47(val, _values, result)
    result = ['BOOLEAN', val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 69)
  def _reduce_48(val, _values, result)
    result = ['FUNCTION', val[2], val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 71)
  def _reduce_49(val, _values, result)
    result = ['IDENTIFIER', val[0]]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class RadiusParser

if __FILE__ == $0
  parser = RadiusParser.new
  File.open("program.rlb", "r") do |f|
    res = parser.parse(f.read)
    puts ("Parse: #{res}")
  end
end
