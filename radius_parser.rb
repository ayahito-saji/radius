#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'pp'
require 'strscan'

class RadiusParser < Racc::Parser

module_eval(<<'...end radius_parser.ry/module_eval...', 'radius_parser.ry', 128)

def parse(str)
  scanner = StringScanner.new(str)
  @q = []
  while !scanner.eos?
    scanner.scan(/[\s\n]+/)

    scanner.scan(/if/) ?                        @q << [:IF, "if"] :
    scanner.scan(/else/) ?                      @q << [:ELSE, "else"] :
    scanner.scan(/loop/) ?                      @q << [:LOOP, "loop"] :
    scanner.scan(/break/) ?                     @q << [:BREAK, "break"] :
    scanner.scan(/return/) ?                    @q << [:RETURN, "return"] :
    scanner.scan(/function/) ?                  @q << [:FUNCTION, "function"] :
    scanner.scan(/class/) ?                     @q << [:CLASS, "class"] :
    scanner.scan(/self/) ?                      @q << [:SELF, "self"] :
    scanner.scan(/true/) ?                      @q << [:BOOLEAN, true] :
    scanner.scan(/false/) ?                     @q << [:BOOLEAN, false] :
    scanner.scan(/private/) ?                   @q << [:PRIVATE, "private"] :
    scanner.scan(/public/) ?                    @q << [:PUBLIC, "pubic"] :
    scanner.scan(/const/) ?                     @q << [:CONST, "const"] :
    scanner.scan(/static/) ?                    @q << [:STATIC, "static"] :
    scanner.scan(/null/) ?                      @q << [:NULL, "null"] :
    scanner.scan(/new/) ?                       @q << [:NEW, "new"] :


    scanner.scan(/\".*?\"/) ?                   @q << [:STRING, scanner.matched[1..-2]] :
    scanner.scan(/[a-zA-Z_][a-zA-Z0-9_]*/) ?    @q << [:IDENTIFIER, scanner.matched.to_s] :
    scanner.scan(/([0-9]*\.[0-9]+)/) ?          @q << [:NUMBER, scanner.matched.to_f] :
    scanner.scan(/(0|[1-9][0-9]*)/) ?           @q << [:NUMBER, scanner.matched.to_i] :

    scanner.scan(/\+=/) ?                       @q << ["+=", "+="] :
    scanner.scan(/-=/) ?                        @q << ["-=", "-="] :
    scanner.scan(/\*=/) ?                       @q << ["*=", "*="] :
    scanner.scan(/\/=/) ?                       @q << ["/=", "/="] :

    scanner.scan(/==/) ?                        @q << ["==", "=="] :
    scanner.scan(/!=/) ?                        @q << ["!=", "!="] :
    scanner.scan(/<>/) ?                        @q << ["<>", "<>"] :
    scanner.scan(/>=/) ?                        @q << [">=", ">="] :
    scanner.scan(/<=/) ?                        @q << ["<=", "<="] :
    scanner.scan(/>/) ?                         @q << [">", ">"] :
    scanner.scan(/</) ?                         @q << ["<", "<"] :

    scanner.scan(/\&\&/) ?                      @q << ["&&", "&&"] :
    scanner.scan(/\|\|/) ?                      @q << ["||", "||"] :
    scanner.scan(/#.*/) ?                       nil :

    scanner.scan(/./) ?                         @q << [scanner.matched, scanner.matched] :
    (raise "scanner error")
  end
  puts ("Token: #{@q}")

  do_parse
end

def next_token
  @q.shift
end

...end radius_parser.ry/module_eval...
##### State transition tables begin ###

racc_action_table = [
    -1,   102,    76,    19,    74,   105,   126,    39,    18,    38,
   115,    60,    75,   -19,    73,   127,   103,   137,    95,   103,
    44,    45,    46,    95,   106,     9,    10,    11,    29,    37,
    95,    12,    28,    95,    16,    17,     3,   139,    21,   141,
    25,    26,    27,    30,    33,    34,    35,    19,    94,    36,
    37,    63,    18,    94,    56,   136,   -18,    37,    37,    56,
    94,    37,   107,    94,   103,    62,    56,    99,    37,    56,
    95,   129,    29,    19,   -20,   146,    28,   134,    18,   nil,
   nil,   nil,    21,   nil,    25,    26,    27,    30,    33,    34,
    35,   nil,   nil,    36,    37,     9,    10,    11,    29,   147,
    94,    12,    28,   nil,    16,    17,    56,   nil,    21,   nil,
    25,    26,    27,    30,    33,    34,    35,    19,   nil,    36,
    37,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,   nil,
   nil,    18,    29,   nil,   nil,   nil,    28,   nil,   nil,   nil,
   nil,   nil,    21,   nil,    25,    26,    27,    30,    33,    34,
    35,    29,    19,    36,    37,    28,   nil,    18,   nil,   nil,
   nil,    21,   nil,    25,    26,    27,    30,    33,    34,    35,
   nil,   nil,    36,    37,     9,    10,    11,    29,   119,   nil,
    12,    28,   nil,    16,    17,   nil,   nil,    21,   nil,    25,
    26,    27,    30,    33,    34,    35,    19,   nil,    36,    37,
   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,
    18,    29,   nil,   nil,   nil,    28,   nil,   nil,   nil,   nil,
   nil,    21,   nil,    25,    26,    27,    30,    33,    34,    35,
    29,    19,    36,    37,    28,   nil,    18,   nil,   nil,   nil,
    21,   nil,    25,    26,    27,    30,    33,    34,    35,   nil,
    19,    36,    37,   nil,   nil,    18,    29,   nil,   nil,   nil,
    28,   nil,   nil,   nil,   nil,   nil,    21,   nil,    25,    26,
    27,    30,    33,    34,    35,    29,    19,    36,    37,    28,
   nil,    18,   nil,   nil,   nil,    21,   nil,    25,    26,    27,
    30,    33,    34,    35,   nil,    19,    36,    37,   nil,   nil,
    18,    29,   nil,   nil,   nil,    28,   nil,   nil,   nil,   nil,
   nil,    21,   nil,    25,    26,    27,    30,    33,    34,    35,
    29,    19,    36,    37,    28,   nil,    18,   nil,   nil,   nil,
    21,   nil,    25,    26,    27,    30,    33,    34,    35,   nil,
    19,    36,    37,   nil,   nil,    18,    29,   nil,   nil,   nil,
    28,   nil,   nil,   nil,   nil,   nil,    21,   nil,    25,    26,
    27,    30,    33,    34,    35,    29,    19,    36,    37,    28,
   nil,    18,   nil,   nil,   nil,    21,   nil,    25,    26,    27,
    30,    33,    34,    35,   nil,    19,    36,    37,   nil,   nil,
    18,    29,   nil,   nil,   nil,    28,   nil,   nil,   nil,   nil,
   nil,    21,   nil,    25,    26,    27,    30,    33,    34,    35,
    29,    19,    36,    37,    28,   nil,    18,   nil,   nil,   nil,
    21,   nil,    25,    26,    27,    30,    33,    34,    35,   nil,
    19,    36,    37,   nil,   nil,    18,    29,   nil,   nil,   nil,
    28,   nil,   nil,   nil,   nil,   nil,    21,   nil,    25,    26,
    27,    30,    33,    34,    35,    29,    19,    36,    37,    28,
   nil,    18,   nil,   nil,   nil,    21,   nil,    25,    26,    27,
    30,    33,    34,    35,   nil,   nil,    36,    37,   nil,   nil,
   nil,    29,    19,   nil,   nil,    28,   nil,    18,   nil,   nil,
   nil,    21,   nil,    25,    26,    27,    30,    33,    34,    35,
   nil,   nil,    36,    37,     9,    10,    11,    29,   133,   nil,
    12,    28,   nil,    16,    17,   nil,   nil,    21,   nil,    25,
    26,    27,    30,    33,    34,    35,    19,   nil,    36,    37,
   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    95,   nil,    44,    45,    46,
   nil,    29,   130,   nil,    19,    28,   nil,    16,    17,    18,
   nil,    21,   nil,    25,    26,    27,    30,    33,    34,    35,
   nil,   nil,    36,    37,   nil,    94,     9,    10,    11,    29,
   128,    56,    12,    28,   nil,    16,    17,   nil,   nil,    21,
   nil,    25,    26,    27,    30,    33,    34,    35,    19,   nil,
    36,    37,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,
   nil,   nil,    18,    29,   nil,   nil,   nil,    28,   nil,   nil,
   nil,   nil,   nil,    21,   nil,    25,    26,    27,    30,    33,
    34,    35,    29,    19,    36,    37,    28,   nil,    18,   nil,
   nil,   nil,    21,   nil,    25,    26,    27,    30,    33,    34,
    35,   nil,    19,    36,    37,   nil,   nil,    18,    29,   nil,
   nil,   nil,    28,   nil,   nil,   nil,   nil,   nil,    21,   nil,
    25,    26,    27,    30,    33,    34,    35,    29,    19,    36,
    37,    28,   nil,    18,   nil,   nil,   nil,    21,   nil,    25,
    26,    27,    30,    33,    34,    35,   nil,    19,    36,    37,
   nil,   nil,    18,    29,   nil,   nil,   nil,    28,   nil,   nil,
   nil,   nil,   nil,    21,   nil,    25,    26,    27,    30,    33,
    34,    35,    29,    19,    36,    37,    28,   nil,    18,   nil,
   nil,   nil,    21,   nil,    25,    26,    27,    30,    33,    34,
    35,   nil,    19,    36,    37,   nil,   nil,    18,    29,   nil,
   nil,   nil,    28,   nil,   nil,   nil,   nil,   nil,    21,   nil,
    25,    26,    27,    30,    33,    34,    35,    29,    19,    36,
    37,    28,   nil,    18,   nil,   nil,   nil,    21,   nil,    25,
    26,    27,    30,    33,    34,    35,   nil,    19,    36,    37,
   nil,   nil,    18,    29,   nil,   nil,   nil,    28,   nil,   nil,
   nil,   nil,   nil,    21,   nil,    25,    26,    27,    30,    33,
    34,    35,    29,    19,    36,    37,    28,   nil,    18,   nil,
   nil,   nil,    21,   nil,    25,    26,    27,    30,    33,    34,
    35,   nil,    19,    36,    37,   nil,   nil,    18,    29,   nil,
   nil,   nil,    28,   nil,   nil,   nil,   nil,   nil,    21,   nil,
    25,    26,    27,    30,    33,    34,    35,    29,    19,    36,
    37,    28,   nil,    18,   nil,   nil,   nil,    21,   nil,    25,
    26,    27,    30,    33,    34,    35,   nil,    19,    36,    37,
   nil,   nil,    18,    29,   nil,   nil,   nil,    28,   nil,   nil,
   nil,   nil,   nil,    21,   nil,    25,    26,    27,    30,    33,
    34,    35,    29,    19,    36,    37,    28,   nil,    18,   nil,
   nil,   nil,    21,   nil,    25,    26,    27,    30,    33,    34,
    35,   nil,    19,    36,    37,   nil,   nil,    18,    29,   nil,
   nil,   nil,    28,   nil,   nil,   nil,   nil,   nil,    21,   nil,
    25,    26,    27,    30,    33,    34,    35,    29,    19,    36,
    37,    28,   nil,    18,   nil,   nil,   nil,    21,   nil,    25,
    26,    27,    30,    33,    34,    35,   nil,   nil,    36,    37,
     9,    10,    11,    29,   150,   nil,    12,    28,   nil,    16,
    17,   nil,   nil,    21,   nil,    25,    26,    27,    30,    33,
    34,    35,    19,   nil,    36,    37,   nil,    18,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    19,   nil,   nil,   nil,   nil,    18,    29,   148,   nil,
   nil,    28,   nil,    16,    17,   nil,   nil,    21,   nil,    25,
    26,    27,    30,    33,    34,    35,    29,   nil,    36,    37,
    28,   nil,   nil,   nil,   nil,   nil,    21,   nil,    25,    26,
    27,    30,    33,    34,    35,   nil,   nil,    36,    37,    95,
   nil,    44,    45,    46,    42,    43,    47,    48,    50,    51,
    52,    53,    49,    54,    55,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    94,
    95,   nil,    44,    45,    46,    56,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    95,   135,    44,    45,    46,    42,    43,
    47,    48,    50,    51,    52,    53,    49,    54,    55,   nil,
    94,   nil,   nil,   nil,   nil,   nil,    56,   nil,   nil,   nil,
   nil,   nil,   nil,    94,   nil,   nil,   nil,   nil,   nil,    56,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    95,   104,    44,
    45,    46,    42,    43,    47,    48,    50,    51,    52,    53,
    49,    54,    55,    95,   nil,    44,    45,    46,    42,    43,
   -81,   -81,   -81,   -81,   -81,   -81,   -81,    94,   nil,   nil,
   nil,   nil,   nil,    56,   101,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    94,   nil,   nil,   nil,   nil,    40,    56,
    44,    45,    46,    42,    43,    47,    48,    50,    51,    52,
    53,    49,    54,    55,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    41,   nil,
   nil,   nil,   nil,    95,    56,    44,    45,    46,    42,    43,
    47,    48,    50,    51,    52,    53,    49,    54,    55,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    94,   nil,   nil,   nil,   nil,    95,    56,
    44,    45,    46,    42,    43,    47,    48,    50,    51,    52,
    53,    49,    54,    55,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    96,   nil,   nil,   nil,    94,   nil,
   nil,   nil,   nil,    95,    56,    44,    45,    46,    42,    43,
    47,    48,    50,    51,    52,    53,    49,    54,    55,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    94,   nil,   nil,   nil,   nil,    95,    56,
    44,    45,    46,    42,    43,    47,    48,    50,    51,    52,
    53,    49,    54,    55,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    94,   nil,
   nil,   nil,   nil,    95,    56,    44,    45,    46,    42,    43,
    47,    48,    50,    51,    52,    53,    49,    54,    55,    95,
   nil,    44,    45,    46,    42,    43,   -81,   -81,   -81,   -81,
   -81,   -81,   -81,    94,   114,   nil,   nil,   nil,   nil,    56,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    94,
   nil,   nil,   nil,   nil,    95,    56,    44,    45,    46,    42,
    43,   -81,   -81,   -81,   -81,   -81,   -81,   -81,    95,   nil,
    44,    45,    46,    42,    43,   -81,   -81,   -81,   -81,   -81,
   -81,   -81,   nil,   nil,    94,   nil,   nil,   nil,   nil,   nil,
    56,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    94,   nil,
   nil,   nil,   nil,    95,    56,    44,    45,    46,    42,    43,
   -81,   -81,   -81,   -81,   -81,   -81,   -81,    95,   nil,    44,
    45,    46,    42,    43,   -81,   -81,   -81,   -81,   -81,   -81,
   -81,   nil,   nil,    94,   nil,   nil,   nil,   nil,   nil,    56,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    94,   nil,   nil,
   nil,   nil,    95,    56,    44,    45,    46,    42,    43,   -81,
   -81,   -81,   -81,   -81,   -81,   -81,    95,   nil,    44,    45,
    46,    42,    43,    47,    48,    50,    51,    52,    53,    49,
   nil,   nil,    94,   nil,   nil,   nil,   nil,   nil,    56,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    94,   nil,   nil,   nil,
   nil,    95,    56,    44,    45,    46,    42,    43,    47,    48,
    50,    51,    52,    53,    49,    54,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    94,   nil,   nil,   nil,   nil,    95,    56,    44,    45,
    46,    42,    43,    47,    48,    50,    51,    52,    53,    49,
    54,    55,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    94,   nil,   nil,   nil,
   nil,    95,    56,    44,    45,    46,    42,    43,    47,    48,
    50,    51,    52,    53,    49,    54,    55,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    94,   132,   nil,   nil,   nil,    40,    56,    44,    45,
    46,    42,    43,    47,    48,    50,    51,    52,    53,    49,
    54,    55,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    41,   nil,   nil,   nil,
   nil,    95,    56,    44,    45,    46,    42,    43,    47,    48,
    50,    51,    52,    53,    49,    54,    55,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    94,   nil,   nil,   nil,   nil,    95,    56,    44,    45,
    46,    42,    43,    47,    48,    50,    51,    52,    53,    49,
    54,    55,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    94,   nil,   nil,   nil,
   nil,    95,    56,    44,    45,    46,    42,    43,    47,    48,
    50,    51,    52,    53,    49,    54,    55,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    94,   nil,   nil,   nil,   nil,    95,    56,    44,    45,
    46,    42,    43,    47,    48,    50,    51,    52,    53,    49,
    54,    55,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    94,   nil,   nil,   nil,
   nil,   nil,    56 ]

racc_action_check = [
     2,    68,    36,     2,    35,    70,   108,     4,     2,     3,
    93,    12,    36,    15,    35,   108,    68,   126,    64,    93,
    64,    64,    64,    65,    70,     2,     2,     2,     2,   127,
    81,     2,     2,    82,     2,     2,     1,   129,     2,   133,
     2,     2,     2,     2,     2,     2,     2,   104,    64,     2,
     2,    14,   104,    65,    64,   125,    77,    95,    75,    65,
    81,    73,    72,    82,   125,    13,    81,    61,    40,    82,
    83,   111,   104,   144,   114,   141,   104,   120,   144,   nil,
   nil,   nil,   104,   nil,   104,   104,   104,   104,   104,   104,
   104,   nil,   nil,   104,   104,   144,   144,   144,   144,   144,
    83,   144,   144,   nil,   144,   144,    83,   nil,   144,   nil,
   144,   144,   144,   144,   144,   144,   144,   103,   nil,   144,
   144,   nil,   103,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    98,   nil,   nil,   nil,
   nil,    98,   103,   nil,   nil,   nil,   103,   nil,   nil,   nil,
   nil,   nil,   103,   nil,   103,   103,   103,   103,   103,   103,
   103,    98,    97,   103,   103,    98,   nil,    97,   nil,   nil,
   nil,    98,   nil,    98,    98,    98,    98,    98,    98,    98,
   nil,   nil,    98,    98,    97,    97,    97,    97,    97,   nil,
    97,    97,   nil,    97,    97,   nil,   nil,    97,   nil,    97,
    97,    97,    97,    97,    97,    97,    94,   nil,    97,    97,
   nil,    94,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   135,   nil,   nil,   nil,   nil,
   135,    94,   nil,   nil,   nil,    94,   nil,   nil,   nil,   nil,
   nil,    94,   nil,    94,    94,    94,    94,    94,    94,    94,
   135,   134,    94,    94,   135,   nil,   134,   nil,   nil,   nil,
   135,   nil,   135,   135,   135,   135,   135,   135,   135,   nil,
    11,   135,   135,   nil,   nil,    11,   134,   nil,   nil,   nil,
   134,   nil,   nil,   nil,   nil,   nil,   134,   nil,   134,   134,
   134,   134,   134,   134,   134,    11,    63,   134,   134,    11,
   nil,    63,   nil,   nil,   nil,    11,   nil,    11,    11,    11,
    11,    11,    11,    11,   nil,    10,    11,    11,   nil,   nil,
    10,    63,   nil,   nil,   nil,    63,   nil,   nil,   nil,   nil,
   nil,    63,   nil,    63,    63,    63,    63,    63,    63,    63,
    10,   106,    63,    63,    10,   nil,   106,   nil,   nil,   nil,
    10,   nil,    10,    10,    10,    10,    10,    10,    10,   nil,
    18,    10,    10,   nil,   nil,    18,   106,   nil,   nil,   nil,
   106,   nil,   nil,   nil,   nil,   nil,   106,   nil,   106,   106,
   106,   106,   106,   106,   106,    18,    19,   106,   106,    18,
   nil,    19,   nil,   nil,   nil,    18,   nil,    18,    18,    18,
    18,    18,    18,    18,   nil,    21,    18,    18,   nil,   nil,
    21,    19,   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,
   nil,    19,   nil,    19,    19,    19,    19,    19,    19,    19,
    21,    28,    19,    19,    21,   nil,    28,   nil,   nil,   nil,
    21,   nil,    21,    21,    21,    21,    21,    21,    21,   nil,
    29,    21,    21,   nil,   nil,    29,    28,   nil,   nil,   nil,
    28,   nil,   nil,   nil,   nil,   nil,    28,   nil,    28,    28,
    28,    28,    28,    28,    28,    29,    34,    28,    28,    29,
   nil,    34,   nil,   nil,   nil,    29,   nil,    29,    29,    29,
    29,    29,    29,    29,   nil,   nil,    29,    29,   nil,   nil,
   nil,    34,   118,   nil,   nil,    34,   nil,   118,   nil,   nil,
   nil,    34,   nil,    34,    34,    34,    34,    34,    34,    34,
   nil,   nil,    34,    34,   118,   118,   118,   118,   118,   nil,
   118,   118,   nil,   118,   118,   nil,   nil,   118,   nil,   118,
   118,   118,   118,   118,   118,   118,   113,   nil,   118,   118,
   nil,   113,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    79,   nil,    79,    79,    79,
   nil,   113,   113,   nil,   110,   113,   nil,   113,   113,   110,
   nil,   113,   nil,   113,   113,   113,   113,   113,   113,   113,
   nil,   nil,   113,   113,   nil,    79,   110,   110,   110,   110,
   110,    79,   110,   110,   nil,   110,   110,   nil,   nil,   110,
   nil,   110,   110,   110,   110,   110,   110,   110,    41,   nil,
   110,   110,   nil,    41,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    42,   nil,   nil,
   nil,   nil,    42,    41,   nil,   nil,   nil,    41,   nil,   nil,
   nil,   nil,   nil,    41,   nil,    41,    41,    41,    41,    41,
    41,    41,    42,    43,    41,    41,    42,   nil,    43,   nil,
   nil,   nil,    42,   nil,    42,    42,    42,    42,    42,    42,
    42,   nil,    44,    42,    42,   nil,   nil,    44,    43,   nil,
   nil,   nil,    43,   nil,   nil,   nil,   nil,   nil,    43,   nil,
    43,    43,    43,    43,    43,    43,    43,    44,    45,    43,
    43,    44,   nil,    45,   nil,   nil,   nil,    44,   nil,    44,
    44,    44,    44,    44,    44,    44,   nil,    46,    44,    44,
   nil,   nil,    46,    45,   nil,   nil,   nil,    45,   nil,   nil,
   nil,   nil,   nil,    45,   nil,    45,    45,    45,    45,    45,
    45,    45,    46,    47,    45,    45,    46,   nil,    47,   nil,
   nil,   nil,    46,   nil,    46,    46,    46,    46,    46,    46,
    46,   nil,    48,    46,    46,   nil,   nil,    48,    47,   nil,
   nil,   nil,    47,   nil,   nil,   nil,   nil,   nil,    47,   nil,
    47,    47,    47,    47,    47,    47,    47,    48,    49,    47,
    47,    48,   nil,    49,   nil,   nil,   nil,    48,   nil,    48,
    48,    48,    48,    48,    48,    48,   nil,    50,    48,    48,
   nil,   nil,    50,    49,   nil,   nil,   nil,    49,   nil,   nil,
   nil,   nil,   nil,    49,   nil,    49,    49,    49,    49,    49,
    49,    49,    50,    51,    49,    49,    50,   nil,    51,   nil,
   nil,   nil,    50,   nil,    50,    50,    50,    50,    50,    50,
    50,   nil,    52,    50,    50,   nil,   nil,    52,    51,   nil,
   nil,   nil,    51,   nil,   nil,   nil,   nil,   nil,    51,   nil,
    51,    51,    51,    51,    51,    51,    51,    52,    53,    51,
    51,    52,   nil,    53,   nil,   nil,   nil,    52,   nil,    52,
    52,    52,    52,    52,    52,    52,   nil,    54,    52,    52,
   nil,   nil,    54,    53,   nil,   nil,   nil,    53,   nil,   nil,
   nil,   nil,   nil,    53,   nil,    53,    53,    53,    53,    53,
    53,    53,    54,    55,    53,    53,    54,   nil,    55,   nil,
   nil,   nil,    54,   nil,    54,    54,    54,    54,    54,    54,
    54,   nil,    56,    54,    54,   nil,   nil,    56,    55,   nil,
   nil,   nil,    55,   nil,   nil,   nil,   nil,   nil,    55,   nil,
    55,    55,    55,    55,    55,    55,    55,    56,   149,    55,
    55,    56,   nil,   149,   nil,   nil,   nil,    56,   nil,    56,
    56,    56,    56,    56,    56,    56,   nil,   nil,    56,    56,
   149,   149,   149,   149,   149,   nil,   149,   149,   nil,   149,
   149,   nil,   nil,   149,   nil,   149,   149,   149,   149,   149,
   149,   149,   145,   nil,   149,   149,   nil,   145,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   107,   nil,   nil,   nil,   nil,   107,   145,   145,   nil,
   nil,   145,   nil,   145,   145,   nil,   nil,   145,   nil,   145,
   145,   145,   145,   145,   145,   145,   107,   nil,   145,   145,
   107,   nil,   nil,   nil,   nil,   nil,   107,   nil,   107,   107,
   107,   107,   107,   107,   107,   nil,   nil,   107,   107,   124,
   nil,   124,   124,   124,   124,   124,   124,   124,   124,   124,
   124,   124,   124,   124,   124,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   124,
    80,   nil,    80,    80,    80,   124,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    69,   124,    69,    69,    69,    69,    69,
    69,    69,    69,    69,    69,    69,    69,    69,    69,   nil,
    80,   nil,   nil,   nil,   nil,   nil,    80,   nil,   nil,   nil,
   nil,   nil,   nil,    69,   nil,   nil,   nil,   nil,   nil,    69,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    66,    69,    66,
    66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
    66,    66,    66,    89,   nil,    89,    89,    89,    89,    89,
    89,    89,    89,    89,    89,    89,    89,    66,   nil,   nil,
   nil,   nil,   nil,    66,    66,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    89,   nil,   nil,   nil,   nil,     5,    89,
     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,
     5,     5,     5,     5,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,
   nil,   nil,   nil,    57,     5,    57,    57,    57,    57,    57,
    57,    57,    57,    57,    57,    57,    57,    57,    57,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    57,   nil,   nil,   nil,   nil,    59,    57,
    59,    59,    59,    59,    59,    59,    59,    59,    59,    59,
    59,    59,    59,    59,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    59,   nil,   nil,   nil,    59,   nil,
   nil,   nil,   nil,    67,    59,    67,    67,    67,    67,    67,
    67,    67,    67,    67,    67,    67,    67,    67,    67,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    67,   nil,   nil,   nil,   nil,    71,    67,
    71,    71,    71,    71,    71,    71,    71,    71,    71,    71,
    71,    71,    71,    71,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    71,   nil,
   nil,   nil,   nil,    78,    71,    78,    78,    78,    78,    78,
    78,    78,    78,    78,    78,    78,    78,    78,    78,    84,
   nil,    84,    84,    84,    84,    84,    84,    84,    84,    84,
    84,    84,    84,    78,    78,   nil,   nil,   nil,   nil,    78,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    84,
   nil,   nil,   nil,   nil,    85,    84,    85,    85,    85,    85,
    85,    85,    85,    85,    85,    85,    85,    85,    86,   nil,
    86,    86,    86,    86,    86,    86,    86,    86,    86,    86,
    86,    86,   nil,   nil,    85,   nil,   nil,   nil,   nil,   nil,
    85,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    86,   nil,
   nil,   nil,   nil,    87,    86,    87,    87,    87,    87,    87,
    87,    87,    87,    87,    87,    87,    87,    88,   nil,    88,
    88,    88,    88,    88,    88,    88,    88,    88,    88,    88,
    88,   nil,   nil,    87,   nil,   nil,   nil,   nil,   nil,    87,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    88,   nil,   nil,
   nil,   nil,    90,    88,    90,    90,    90,    90,    90,    90,
    90,    90,    90,    90,    90,    90,    91,   nil,    91,    91,
    91,    91,    91,    91,    91,    91,    91,    91,    91,    91,
   nil,   nil,    90,   nil,   nil,   nil,   nil,   nil,    90,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    91,   nil,   nil,   nil,
   nil,    92,    91,    92,    92,    92,    92,    92,    92,    92,
    92,    92,    92,    92,    92,    92,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    92,   nil,   nil,   nil,   nil,   100,    92,   100,   100,
   100,   100,   100,   100,   100,   100,   100,   100,   100,   100,
   100,   100,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   100,   nil,   nil,   nil,
   nil,   116,   100,   116,   116,   116,   116,   116,   116,   116,
   116,   116,   116,   116,   116,   116,   116,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   116,   116,   nil,   nil,   nil,   121,   116,   121,   121,
   121,   121,   121,   121,   121,   121,   121,   121,   121,   121,
   121,   121,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   121,   nil,   nil,   nil,
   nil,   122,   121,   122,   122,   122,   122,   122,   122,   122,
   122,   122,   122,   122,   122,   122,   122,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   122,   nil,   nil,   nil,   nil,   123,   122,   123,   123,
   123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
   123,   123,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   123,   nil,   nil,   nil,
   nil,   142,   123,   142,   142,   142,   142,   142,   142,   142,
   142,   142,   142,   142,   142,   142,   142,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   142,   nil,   nil,   nil,   nil,   143,   142,   143,   143,
   143,   143,   143,   143,   143,   143,   143,   143,   143,   143,
   143,   143,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   143,   nil,   nil,   nil,
   nil,   nil,   143 ]

racc_action_pointer = [
   nil,    36,     0,     9,   -17,  1226,   nil,   nil,   nil,   nil,
   312,   267,   -17,    29,    33,    -5,   nil,   nil,   357,   383,
   nil,   402,   nil,   nil,   nil,   nil,   nil,   nil,   428,   447,
   nil,   nil,   nil,   nil,   473,   -24,   -26,   nil,   nil,   nil,
    18,   615,   634,   660,   679,   705,   724,   750,   769,   795,
   814,   840,   859,   885,   904,   930,   949,  1261,   nil,  1296,
   nil,    30,   nil,   293,    16,    21,  1175,  1331,   -32,  1131,
   -24,  1366,    24,    11,   nil,     8,   nil,    38,  1401,   563,
  1118,    28,    31,    68,  1417,  1452,  1466,  1501,  1515,  1191,
  1550,  1564,  1599,   -29,   203,     7,   nil,   159,   133,   nil,
  1634,   nil,   nil,   114,    44,   nil,   338,  1038,   -33,   nil,
   571,    32,   nil,   543,    56,   nil,  1669,   nil,   499,   nil,
    59,  1704,  1739,  1774,  1087,    16,   -11,   -21,   nil,     9,
   nil,   nil,   nil,     9,   248,   222,   nil,   nil,   nil,   nil,
   nil,    47,  1809,  1844,    70,  1019,   nil,   nil,   nil,   975,
   nil ]

racc_action_default = [
    -2,   -81,   -21,   -81,    -3,    -5,    -6,    -7,    -8,    -9,
   -10,   -81,   -81,   -24,   -81,   -48,   -22,   -23,   -81,   -81,
   -46,   -81,   -50,   -51,   -52,   -53,   -54,   -55,   -71,   -65,
   -58,   -59,   -60,   -61,   -81,   -81,   -81,   -80,   151,    -4,
   -81,   -81,   -81,   -81,   -81,   -81,   -81,   -81,   -81,   -81,
   -81,   -81,   -81,   -81,   -81,   -81,   -71,   -11,   -48,   -81,
    -2,   -26,   -25,   -81,   -30,   -45,   -81,   -72,   -81,   -81,
   -81,   -81,   -52,   -68,    -2,   -76,   -78,   -47,   -81,   -28,
   -29,   -31,   -32,   -33,   -34,   -35,   -36,   -37,   -38,   -39,
   -40,   -41,   -42,   -81,   -81,   -81,    -2,   -21,   -81,   -27,
   -17,   -49,   -56,   -81,   -81,   -57,   -81,   -71,   -81,   -69,
   -21,   -81,   -77,   -21,   -44,   -43,   -81,   -47,   -21,   -15,
   -81,   -81,   -73,   -66,   -81,   -81,   -81,   -81,   -64,   -81,
   -75,   -79,   -44,   -13,   -81,   -81,   -62,    -2,   -70,   -78,
   -12,   -81,   -16,   -67,   -21,   -21,    -2,   -63,   -74,   -21,
   -14 ]

racc_goto_table = [
    15,    68,     2,   113,   131,    70,   108,   111,   120,   140,
    61,    98,     1,    72,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    93,
   nil,   nil,   nil,   nil,   nil,   nil,   131,   nil,    77,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    97,   nil,   nil,   nil,   145,   nil,   nil,   nil,
   nil,   109,   nil,   112,   nil,   nil,   110,   nil,   nil,   nil,
   125,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   117,   nil,    15,    15,   nil,   118,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,   nil,
   nil,    15,   nil,   nil,   nil,   nil,    15,   nil,   nil,   nil,
   nil,   nil,    57,    59,   nil,   138,   nil,   nil,   nil,   nil,
    64,    65,   nil,    66,   nil,   nil,   nil,   nil,   nil,   144,
    67,    69,    15,    15,   nil,   nil,    71,    15,   149,   nil,
   nil,   nil,   nil,    78,    79,    80,    81,    82,    83,    84,
    85,    86,    87,    88,    89,    90,    91,    92,    67,   nil,
   nil,   nil,   nil,   nil,   nil,   100,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   116,   nil,   nil,   nil,
   121,   nil,   nil,   nil,   nil,   122,   123,   nil,   124,    67,
   nil,   nil,   nil,   nil,   nil,   121,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   142,   143,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   121 ]

racc_goto_check = [
    13,    14,     2,    24,     5,    19,    22,    23,    12,     8,
    10,    11,     1,    16,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    14,
   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,    13,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     2,   nil,   nil,   nil,    24,   nil,   nil,   nil,
   nil,    13,   nil,    13,   nil,   nil,     2,   nil,   nil,   nil,
    14,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    13,   nil,    13,    13,   nil,     2,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,   nil,
   nil,    13,   nil,   nil,   nil,   nil,    13,   nil,   nil,   nil,
   nil,   nil,     4,     4,   nil,    13,   nil,   nil,   nil,   nil,
     4,     4,   nil,     4,   nil,   nil,   nil,   nil,   nil,     2,
     4,     4,    13,    13,   nil,   nil,     4,    13,     2,   nil,
   nil,   nil,   nil,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     4,   nil,
   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,
     4,   nil,   nil,   nil,   nil,     4,     4,   nil,     4,     4,
   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     4,     4,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,    12,     2,   nil,   112,  -109,   nil,   nil,  -124,   nil,
    -3,   -50,   -90,    -2,   -27,   nil,   -21,   nil,   nil,   -24,
   nil,   nil,   -67,   -68,   -73 ]

racc_goto_default = [
   nil,   nil,   nil,     4,     5,     6,     7,     8,   nil,    13,
   nil,   nil,    14,    58,   nil,    20,    24,    22,    23,   nil,
    31,    32,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 52, :_reduce_none,
  0, 53, :_reduce_2,
  2, 53, :_reduce_3,
  3, 53, :_reduce_4,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_9,
  1, 54, :_reduce_10,
  2, 54, :_reduce_11,
  6, 57, :_reduce_12,
  0, 59, :_reduce_none,
  4, 59, :_reduce_14,
  4, 58, :_reduce_15,
  6, 56, :_reduce_16,
  3, 56, :_reduce_17,
  3, 63, :_reduce_18,
  1, 63, :_reduce_19,
  4, 63, :_reduce_20,
  0, 60, :_reduce_21,
  1, 60, :_reduce_22,
  1, 60, :_reduce_23,
  0, 61, :_reduce_24,
  1, 61, :_reduce_25,
  0, 62, :_reduce_26,
  1, 62, :_reduce_27,
  3, 55, :_reduce_28,
  3, 55, :_reduce_29,
  2, 55, :_reduce_30,
  3, 55, :_reduce_31,
  3, 55, :_reduce_32,
  3, 55, :_reduce_33,
  3, 55, :_reduce_34,
  3, 55, :_reduce_35,
  3, 55, :_reduce_36,
  3, 55, :_reduce_37,
  3, 55, :_reduce_38,
  3, 55, :_reduce_39,
  3, 55, :_reduce_40,
  3, 55, :_reduce_41,
  3, 55, :_reduce_42,
  4, 55, :_reduce_43,
  4, 55, :_reduce_44,
  2, 55, :_reduce_45,
  1, 55, :_reduce_none,
  3, 67, :_reduce_47,
  1, 67, :_reduce_48,
  3, 66, :_reduce_49,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 68, :_reduce_53,
  1, 68, :_reduce_54,
  1, 68, :_reduce_55,
  3, 68, :_reduce_56,
  3, 68, :_reduce_57,
  1, 68, :_reduce_58,
  1, 69, :_reduce_none,
  1, 69, :_reduce_none,
  1, 69, :_reduce_61,
  5, 69, :_reduce_62,
  7, 71, :_reduce_63,
  4, 71, :_reduce_64,
  0, 70, :_reduce_65,
  3, 70, :_reduce_66,
  5, 70, :_reduce_67,
  0, 73, :_reduce_68,
  1, 73, :_reduce_69,
  3, 73, :_reduce_70,
  0, 65, :_reduce_71,
  1, 65, :_reduce_72,
  3, 65, :_reduce_73,
  7, 72, :_reduce_74,
  4, 72, :_reduce_75,
  0, 74, :_reduce_76,
  1, 74, :_reduce_none,
  0, 75, :_reduce_78,
  2, 75, :_reduce_79,
  1, 64, :_reduce_80 ]

racc_reduce_n = 81

racc_shift_n = 151

racc_token_table = {
  false => 0,
  :error => 1,
  "." => 2,
  "!" => 3,
  "*" => 4,
  "/" => 5,
  "%" => 6,
  "+" => 7,
  "-" => 8,
  "==" => 9,
  "!=" => 10,
  ">" => 11,
  ">=" => 12,
  "<" => 13,
  "<=" => 14,
  "<>" => 15,
  "&&" => 16,
  "||" => 17,
  "=" => 18,
  "+=" => 19,
  "-=" => 20,
  "*=" => 21,
  "/=" => 22,
  "%=" => 23,
  ";" => 24,
  :BREAK => 25,
  :RETURN => 26,
  :IF => 27,
  "{" => 28,
  "}" => 29,
  :ELSE => 30,
  :LOOP => 31,
  "[" => 32,
  "]" => 33,
  :PRIVATE => 34,
  :PUBLIC => 35,
  :STATIC => 36,
  :CONST => 37,
  "(" => 38,
  ")" => 39,
  :NUMBER => 40,
  :STRING => 41,
  :BOOLEAN => 42,
  :NULL => 43,
  :SELF => 44,
  :NEW => 45,
  :FUNCTION => 46,
  ":" => 47,
  "," => 48,
  :CLASS => 49,
  :IDENTIFIER => 50 }

racc_nt_base = 51

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\"==\"",
  "\"!=\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"<>\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\"+=\"",
  "\"-=\"",
  "\"*=\"",
  "\"/=\"",
  "\"%=\"",
  "\";\"",
  "BREAK",
  "RETURN",
  "IF",
  "\"{\"",
  "\"}\"",
  "ELSE",
  "LOOP",
  "\"[\"",
  "\"]\"",
  "PRIVATE",
  "PUBLIC",
  "STATIC",
  "CONST",
  "\"(\"",
  "\")\"",
  "NUMBER",
  "STRING",
  "BOOLEAN",
  "NULL",
  "SELF",
  "NEW",
  "FUNCTION",
  "\":\"",
  "\",\"",
  "CLASS",
  "IDENTIFIER",
  "$start",
  "program",
  "statements",
  "statement",
  "expr",
  "var_assign",
  "if_stmt",
  "loop_stmt",
  "else_stmt",
  "access_md",
  "static_md",
  "const_md",
  "var_def",
  "identifier",
  "args",
  "primary",
  "variable",
  "lit",
  "object",
  "hash",
  "func_def",
  "class_def",
  "params",
  "expands",
  "var_assigns" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 15)
  def _reduce_2(val, _values, result)
    result = [:STATEMENTS, []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 16)
  def _reduce_3(val, _values, result)
    result[1] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 17)
  def _reduce_4(val, _values, result)
    result[1] << val[1]
    result
  end
.,.,

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 23)
  def _reduce_9(val, _values, result)
    result = [:BREAK]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 24)
  def _reduce_10(val, _values, result)
    result = [:RETURN, [:INSTANCE, :NULL, nil]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 25)
  def _reduce_11(val, _values, result)
    result = [:RETURN, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 27)
  def _reduce_12(val, _values, result)
    result = [:IF, val[1], val[3], val[5]]
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 30)
  def _reduce_14(val, _values, result)
    result = val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 32)
  def _reduce_15(val, _values, result)
    result = [:LOOP, val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 34)
  def _reduce_16(val, _values, result)
    result = ['=', val[0], val[1], val[2], val[3], val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 35)
  def _reduce_17(val, _values, result)
    result = ['=', nil, nil, nil, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 37)
  def _reduce_18(val, _values, result)
    result = [:VARIABLE, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 38)
  def _reduce_19(val, _values, result)
    result = [:VARIABLE, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 39)
  def _reduce_20(val, _values, result)
    result = [:INDEX, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 41)
  def _reduce_21(val, _values, result)
    result = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 42)
  def _reduce_22(val, _values, result)
    result = :PRIVATE
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 43)
  def _reduce_23(val, _values, result)
    result = :PUBLIC
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 45)
  def _reduce_24(val, _values, result)
    result = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 46)
  def _reduce_25(val, _values, result)
    result = :STATIC
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 48)
  def _reduce_26(val, _values, result)
    result = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 49)
  def _reduce_27(val, _values, result)
    result = :CONSTANT
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 51)
  def _reduce_28(val, _values, result)
    result = ['+', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 52)
  def _reduce_29(val, _values, result)
    result = ['-', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 53)
  def _reduce_30(val, _values, result)
    result = ['-', [:INSTANCE, :NUMBER, nil, 0], val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 54)
  def _reduce_31(val, _values, result)
    result = ['*', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 55)
  def _reduce_32(val, _values, result)
    result = ['/', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 56)
  def _reduce_33(val, _values, result)
    result = ['%', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 58)
  def _reduce_34(val, _values, result)
    result = ['==', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 59)
  def _reduce_35(val, _values, result)
    result = ['!=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 60)
  def _reduce_36(val, _values, result)
    result = ['!=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 61)
  def _reduce_37(val, _values, result)
    result = ['>', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 62)
  def _reduce_38(val, _values, result)
    result = ['>=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 63)
  def _reduce_39(val, _values, result)
    result = ['<', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 64)
  def _reduce_40(val, _values, result)
    result = ['<=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 66)
  def _reduce_41(val, _values, result)
    result = ['&&', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 67)
  def _reduce_42(val, _values, result)
    result = ['||', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 68)
  def _reduce_43(val, _values, result)
    result = [:FUNC_CALL, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 69)
  def _reduce_44(val, _values, result)
    result = [:INDEX, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 71)
  def _reduce_45(val, _values, result)
    result = ['!', val[1]]
    result
  end
.,.,

# reduce 46 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 75)
  def _reduce_47(val, _values, result)
    result = [:VARIABLE, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 76)
  def _reduce_48(val, _values, result)
    result = [:VARIABLE, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 78)
  def _reduce_49(val, _values, result)
    result = val[1]
    result
  end
.,.,

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 83)
  def _reduce_53(val, _values, result)
    result = [:INSTANCE, :NUMBER, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 84)
  def _reduce_54(val, _values, result)
    result = [:INSTANCE, :STRING, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 85)
  def _reduce_55(val, _values, result)
    result = [:INSTANCE, :BOOLEAN, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 86)
  def _reduce_56(val, _values, result)
    result = [:LIST_NEW, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 87)
  def _reduce_57(val, _values, result)
    result = [:HASH_NEW, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 88)
  def _reduce_58(val, _values, result)
    result = [:INSTANCE, :NULL, nil]
    result
  end
.,.,

# reduce 59 omitted

# reduce 60 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 92)
  def _reduce_61(val, _values, result)
    result = [:SELF]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 93)
  def _reduce_62(val, _values, result)
    result = [:NEW, val[1], val[3]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 95)
  def _reduce_63(val, _values, result)
    result = [:FUNCTION, val[2], val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 96)
  def _reduce_64(val, _values, result)
    result = [:FUNCTION, [], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 98)
  def _reduce_65(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 99)
  def _reduce_66(val, _values, result)
    result = [[val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 100)
  def _reduce_67(val, _values, result)
    result << [val[2], val[4]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 102)
  def _reduce_68(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 103)
  def _reduce_69(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 104)
  def _reduce_70(val, _values, result)
    result << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 106)
  def _reduce_71(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 107)
  def _reduce_72(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 108)
  def _reduce_73(val, _values, result)
    result << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 110)
  def _reduce_74(val, _values, result)
    result = [:CLASS, val[2], val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 111)
  def _reduce_75(val, _values, result)
    result = [:CLASS, nil, val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 113)
  def _reduce_76(val, _values, result)
    result = nil
    result
  end
.,.,

# reduce 77 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 116)
  def _reduce_78(val, _values, result)
    result = [:STATEMENTS, []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 117)
  def _reduce_79(val, _values, result)
    result[1] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 119)
  def _reduce_80(val, _values, result)
    result = [:IDENTIFIER, val[0]]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class RadiusParser

if __FILE__ == $0
  parser = RadiusParser.new
  File.open("program.rlb", "r") do |f|
    res = parser.parse(f.read.chomp)
    p (res)
  end
end
