#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'pp'
require 'strscan'

class RadiusParser < Racc::Parser

module_eval(<<'...end radius_parser.ry/module_eval...', 'radius_parser.ry', 78)

def parse(str)
  scanner = StringScanner.new(str)
  @q = []
  while !scanner.eos?
    scanner.scan(/[\s\n]+/)

    scanner.scan(/if/) ?                        @q << [:IF, "if"] :
    scanner.scan(/else/) ?                      @q << [:ELSE, "else"] :
    scanner.scan(/loop/) ?                      @q << [:LOOP, "loop"] :
    scanner.scan(/break/) ?                     @q << [:BREAK, "break"] :
    scanner.scan(/return/) ?                     @q << [:RETURN, "return"] :

    scanner.scan(/true|false/) ?                @q << [:BOOLEAN, scanner.matched] :
    scanner.scan(/\".*?\"/) ?                   @q << [:STRING, scanner.matched[1..-2]] :
    scanner.scan(/[a-zA-Z_][a-zA-Z0-9_]*/) ?    @q << [:IDENTIFIER, scanner.matched] :
    scanner.scan(/(0|[0-9]*\.[0-9]+|[1-9][0-9]*)/) ?   @q << [:NUMBER, scanner.matched.to_f] :

    scanner.scan(/\+=/) ?                       @q << ["+=", "+="] :
    scanner.scan(/-=/) ?                        @q << ["-=", "-="] :
    scanner.scan(/\*=/) ?                       @q << ["*=", "*="] :
    scanner.scan(/\/=/) ?                       @q << ["/=", "/="] :

    scanner.scan(/==/) ?                        @q << ["==", "=="] :
    scanner.scan(/!=/) ?                        @q << ["!=", "!="] :
    scanner.scan(/>=/) ?                        @q << [">=", ">="] :
    scanner.scan(/<=/) ?                        @q << ["<=", "<="] :
    scanner.scan(/>/) ?                         @q << [">", ">"] :
    scanner.scan(/</) ?                         @q << ["<", "<"] :

    scanner.scan(/./) ?                         @q << [scanner.matched, scanner.matched] :
    (raise "scanner error")
  end
  puts ("Token: #{@q}")

  do_parse
end

def next_token
  @q.shift
end

...end radius_parser.ry/module_eval...
##### State transition tables begin ###

racc_action_table = [
     2,    48,    80,    85,    78,    52,    13,    77,    77,    77,
    13,    27,    28,    29,    27,    28,    29,    27,    28,    29,
     8,     9,    11,    15,    13,    23,    91,    15,    12,    47,
    19,    20,    21,    22,    19,    20,    21,    22,     8,     9,
    11,    15,    13,    94,    37,    36,    12,    91,    19,    20,
    21,    22,    46,    13,    52,    84,     8,     9,    11,    15,
   nil,   nil,    93,   nil,    12,   nil,    19,    20,    21,    22,
    15,    13,   nil,   nil,   nil,    13,   nil,    19,    20,    21,
    22,   nil,   nil,   nil,   nil,     8,     9,    11,    15,    13,
   nil,    98,    15,    12,   nil,    19,    20,    21,    22,    19,
    20,    21,    22,     8,     9,    11,    15,    13,   nil,    92,
   nil,    12,   nil,    19,    20,    21,    22,   nil,    13,   nil,
   nil,     8,     9,    11,    15,   nil,    86,   nil,   nil,    12,
    13,    19,    20,    21,    22,    15,    13,   nil,   nil,   nil,
   nil,    13,    19,    20,    21,    22,   nil,    15,   nil,   nil,
   nil,   nil,    13,    15,    19,    20,    21,    22,    15,   nil,
    19,    20,    21,    22,    13,    19,    20,    21,    22,    15,
    13,   nil,   nil,   nil,   nil,    13,    19,    20,    21,    22,
   nil,    15,   nil,   nil,   nil,   nil,    13,    15,    19,    20,
    21,    22,    15,   nil,    19,    20,    21,    22,    13,    19,
    20,    21,    22,    15,    13,   nil,   nil,   nil,   nil,    13,
    19,    20,    21,    22,   nil,    15,   nil,   nil,   nil,   nil,
    13,    15,    19,    20,    21,    22,    15,   nil,    19,    20,
    21,    22,    13,    19,    20,    21,    22,    15,    13,   nil,
   nil,   nil,   nil,    13,    19,    20,    21,    22,   nil,    15,
   nil,   nil,   nil,   nil,    13,    15,    19,    20,    21,    22,
    15,   nil,    19,    20,    21,    22,   nil,    19,    20,    21,
    22,    15,    13,   nil,   nil,   nil,    13,   nil,    19,    20,
    21,    22,   nil,   nil,   nil,   nil,     8,     9,    11,    15,
    13,   nil,    82,    15,    12,    13,    19,    20,    21,    22,
    19,    20,    21,    22,   nil,   nil,    13,    15,   nil,   nil,
   nil,   nil,    15,   nil,    19,    20,    21,    22,   nil,    19,
    20,    21,    22,    15,   nil,   nil,   nil,   nil,   nil,   nil,
    19,    20,    21,    22,    27,    28,    29,    25,    26,    30,
    31,    32,    33,    34,    35,    27,    28,    29,    25,    26,
    30,    31,    32,    33,    34,    35,    76,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    81,    27,    28,
    29,    25,    26,    30,    31,    32,    33,    34,    35,   nil,
   nil,   nil,   nil,   nil,   nil,    24,    27,    28,    29,    25,
    26,    30,    31,    32,    33,    34,    35,   nil,   nil,   nil,
   nil,   nil,   nil,    64,    27,    28,    29,    25,    26,    30,
    31,    32,    33,    34,    35,    40,    41,    42,    43,    44,
    45,   nil,   nil,   nil,   nil,    46,    27,    28,    29,    25,
    26,   -49,   -49,   -49,   -49,   -49,   -49,    27,    28,    29,
    25,    26,   -49,   -49,   -49,   -49,   -49,   -49,    27,    28,
    29,    25,    26,   -49,   -49,   -49,   -49,   -49,   -49,    27,
    28,    29,    25,    26,   -49,   -49,   -49,   -49,   -49,   -49,
    27,    28,    29,    25,    26,   -49,   -49,   -49,   -49,   -49,
   -49,    27,    28,    29,    25,    26,   -49,   -49,   -49,   -49,
   -49,   -49,    27,    28,    29,    25,    26,    30,    31,    32,
    33,    34,    35,    27,    28,    29,    25,    26,    30,    31,
    32,    33,    34,    35,    27,    28,    29,    25,    26,    30,
    31,    32,    33,    34,    35,    27,    28,    29,    25,    26,
    30,    31,    32,    33,    34,    35,    27,    28,    29,    25,
    26,    30,    31,    32,    33,    34,    35,    27,    28,    29,
    25,    26,    30,    31,    32,    33,    34,    35,    27,    28,
    29,    25,    26,    30,    31,    32,    33,    34,    35 ]

racc_action_check = [
     1,    12,    73,    79,    51,    65,     1,    73,    79,    51,
    52,    49,    49,    49,    53,    53,    53,    54,    54,    54,
     1,     1,     1,     1,    91,     2,    87,    52,     1,    11,
     1,     1,     1,     1,    52,    52,    52,    52,    91,    91,
    91,    91,    89,    91,     8,     5,    91,    93,    91,    91,
    91,    91,    39,     9,    18,    78,    89,    89,    89,    89,
   nil,   nil,    89,   nil,    89,   nil,    89,    89,    89,    89,
     9,    97,   nil,   nil,   nil,    13,   nil,     9,     9,     9,
     9,   nil,   nil,   nil,   nil,    97,    97,    97,    97,    88,
   nil,    97,    13,    97,   nil,    97,    97,    97,    97,    13,
    13,    13,    13,    88,    88,    88,    88,    81,   nil,    88,
   nil,    88,   nil,    88,    88,    88,    88,   nil,    15,   nil,
   nil,    81,    81,    81,    81,   nil,    81,   nil,   nil,    81,
    77,    81,    81,    81,    81,    15,    25,   nil,   nil,   nil,
   nil,    26,    15,    15,    15,    15,   nil,    77,   nil,   nil,
   nil,   nil,    27,    25,    77,    77,    77,    77,    26,   nil,
    25,    25,    25,    25,    28,    26,    26,    26,    26,    27,
    29,   nil,   nil,   nil,   nil,    30,    27,    27,    27,    27,
   nil,    28,   nil,   nil,   nil,   nil,    44,    29,    28,    28,
    28,    28,    30,   nil,    29,    29,    29,    29,    45,    30,
    30,    30,    30,    44,    46,   nil,   nil,   nil,   nil,    47,
    44,    44,    44,    44,   nil,    45,   nil,   nil,   nil,   nil,
    31,    46,    45,    45,    45,    45,    47,   nil,    46,    46,
    46,    46,    32,    47,    47,    47,    47,    31,    33,   nil,
   nil,   nil,   nil,    34,    31,    31,    31,    31,   nil,    32,
   nil,   nil,   nil,   nil,    35,    33,    32,    32,    32,    32,
    34,   nil,    33,    33,    33,    33,   nil,    34,    34,    34,
    34,    35,    75,   nil,   nil,   nil,    40,   nil,    35,    35,
    35,    35,   nil,   nil,   nil,   nil,    75,    75,    75,    75,
    41,   nil,    75,    40,    75,    42,    75,    75,    75,    75,
    40,    40,    40,    40,   nil,   nil,    43,    41,   nil,   nil,
   nil,   nil,    42,   nil,    41,    41,    41,    41,   nil,    42,
    42,    42,    42,    43,   nil,   nil,   nil,   nil,   nil,   nil,
    43,    43,    43,    43,    50,    50,    50,    50,    50,    50,
    50,    50,    50,    50,    50,    74,    74,    74,    74,    74,
    74,    74,    74,    74,    74,    74,    50,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    74,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     4,   nil,
   nil,   nil,   nil,   nil,   nil,     4,    38,    38,    38,    38,
    38,    38,    38,    38,    38,    38,    38,   nil,   nil,   nil,
   nil,   nil,   nil,    38,    70,    70,    70,    70,    70,    70,
    70,    70,    70,    70,    70,    10,    10,    10,    10,    10,
    10,   nil,   nil,   nil,   nil,    10,    58,    58,    58,    58,
    58,    58,    58,    58,    58,    58,    58,    59,    59,    59,
    59,    59,    59,    59,    59,    59,    59,    59,    60,    60,
    60,    60,    60,    60,    60,    60,    60,    60,    60,    61,
    61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
    62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
    62,    63,    63,    63,    63,    63,    63,    63,    63,    63,
    63,    63,    66,    66,    66,    66,    66,    66,    66,    66,
    66,    66,    66,    67,    67,    67,    67,    67,    67,    67,
    67,    67,    67,    67,    68,    68,    68,    68,    68,    68,
    68,    68,    68,    68,    68,    69,    69,    69,    69,    69,
    69,    69,    69,    69,    69,    69,    71,    71,    71,    71,
    71,    71,    71,    71,    71,    71,    71,    72,    72,    72,
    72,    72,    72,    72,    72,    72,    72,    72,    83,    83,
    83,    83,    83,    83,    83,    83,    83,    83,    83 ]

racc_action_pointer = [
   nil,     0,    25,   nil,   366,    26,   nil,   nil,    25,    47,
   402,     6,   -24,    69,   nil,   112,   nil,   nil,    31,   nil,
   nil,   nil,   nil,   nil,   nil,   130,   135,   146,   158,   164,
   169,   214,   226,   232,   237,   248,   nil,   nil,   384,    29,
   270,   284,   289,   300,   180,   192,   198,   203,   nil,     9,
   332,   -20,     4,    12,    15,   nil,   nil,   nil,   424,   435,
   446,   457,   468,   479,   nil,   -18,   490,   501,   512,   523,
   402,   534,   545,   -22,   343,   266,   nil,   124,    30,   -21,
   nil,   101,   nil,   556,   nil,   nil,   nil,    -1,    83,    36,
   nil,    18,   nil,    20,   nil,   nil,   nil,    65,   nil ]

racc_action_default = [
    -1,   -49,   -49,    -2,   -49,   -49,    -5,    -6,   -49,   -49,
   -44,   -49,   -49,   -49,   -34,   -40,   -36,   -37,   -49,   -43,
   -45,   -46,   -48,    99,    -3,   -49,   -49,   -49,   -49,   -49,
   -49,   -49,   -49,   -49,   -49,   -49,    -4,    -7,   -49,   -44,
   -49,   -49,   -49,   -49,   -49,   -49,   -40,   -49,    -1,   -24,
   -41,   -49,   -40,   -22,   -23,   -25,   -26,   -27,   -28,   -29,
   -30,   -31,   -32,   -33,    -8,    -9,   -10,   -11,   -12,   -13,
   -14,   -15,   -41,   -49,   -49,   -49,   -35,   -49,   -49,   -49,
   -38,   -49,   -21,   -42,    -1,   -39,    -1,   -18,   -49,   -49,
   -17,   -49,   -47,   -18,    -1,   -20,   -16,   -49,   -19 ]

racc_goto_table = [
    10,    87,    38,    90,    65,     1,    49,   nil,    50,    96,
    51,    95,   nil,   nil,   nil,   nil,   nil,   nil,    53,    54,
    55,    56,    57,    58,    59,    60,    61,    62,    63,   nil,
   nil,   nil,   nil,    66,    67,    68,    69,    70,    71,    72,
    74,    73,   nil,   nil,   nil,    72,   nil,    79,   nil,   nil,
   nil,   nil,   nil,    75,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    83,   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,
    10,   nil,   nil,   nil,   nil,   nil,   nil,    10,    10,    88,
    10,    89,   nil,   nil,   nil,   nil,    10,   nil,   nil,    97 ]

racc_goto_check = [
     7,     2,     3,     9,     8,     1,     3,   nil,     3,     9,
    13,     2,   nil,   nil,   nil,   nil,   nil,   nil,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,   nil,
   nil,   nil,   nil,     3,     3,     3,     3,     3,     3,     3,
     3,    13,   nil,   nil,   nil,     3,   nil,    13,   nil,   nil,
   nil,   nil,   nil,     1,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     3,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,
     7,   nil,   nil,   nil,   nil,   nil,   nil,     7,     7,     1,
     7,     1,   nil,   nil,   nil,   nil,     7,   nil,   nil,     1 ]

racc_goto_pointer = [
   nil,     5,   -80,    -7,   nil,   nil,   nil,    -1,   -36,   -84,
   nil,   nil,   nil,    -5 ]

racc_goto_default = [
   nil,   nil,     3,     4,     5,     6,     7,    39,    18,   nil,
    14,    16,    17,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 35, :_reduce_1,
  2, 35, :_reduce_2,
  2, 36, :_reduce_none,
  2, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  2, 36, :_reduce_7,
  3, 36, :_reduce_8,
  3, 36, :_reduce_9,
  3, 38, :_reduce_10,
  3, 38, :_reduce_11,
  3, 38, :_reduce_12,
  3, 38, :_reduce_13,
  3, 38, :_reduce_14,
  3, 38, :_reduce_15,
  8, 39, :_reduce_16,
  6, 39, :_reduce_17,
  0, 43, :_reduce_none,
  4, 43, :_reduce_19,
  2, 43, :_reduce_20,
  4, 40, :_reduce_21,
  3, 37, :_reduce_22,
  3, 37, :_reduce_23,
  2, 37, :_reduce_24,
  3, 37, :_reduce_25,
  3, 37, :_reduce_26,
  3, 37, :_reduce_27,
  3, 37, :_reduce_28,
  3, 37, :_reduce_29,
  3, 37, :_reduce_30,
  3, 37, :_reduce_31,
  3, 37, :_reduce_32,
  3, 37, :_reduce_33,
  1, 37, :_reduce_none,
  3, 44, :_reduce_35,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  4, 46, :_reduce_38,
  4, 46, :_reduce_39,
  0, 47, :_reduce_40,
  1, 47, :_reduce_41,
  3, 47, :_reduce_42,
  1, 45, :_reduce_43,
  1, 45, :_reduce_none,
  1, 45, :_reduce_45,
  1, 45, :_reduce_46,
  6, 42, :_reduce_47,
  1, 41, :_reduce_48 ]

racc_reduce_n = 49

racc_shift_n = 99

racc_token_table = {
  false => 0,
  :error => 1,
  "*" => 2,
  "/" => 3,
  "%" => 4,
  "+" => 5,
  "-" => 6,
  "==" => 7,
  "!=" => 8,
  ">" => 9,
  ">=" => 10,
  "<" => 11,
  "<=" => 12,
  "=" => 13,
  "+=" => 14,
  "-=" => 15,
  "*=" => 16,
  "/=" => 17,
  "%=" => 18,
  ";" => 19,
  :BREAK => 20,
  :RETURN => 21,
  :IF => 22,
  "(" => 23,
  ")" => 24,
  "{" => 25,
  "}" => 26,
  :ELSE => 27,
  :LOOP => 28,
  "," => 29,
  :NUMBER => 30,
  :STRING => 31,
  :BOOLEAN => 32,
  :IDENTIFIER => 33 }

racc_nt_base = 34

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\"==\"",
  "\"!=\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"=\"",
  "\"+=\"",
  "\"-=\"",
  "\"*=\"",
  "\"/=\"",
  "\"%=\"",
  "\";\"",
  "BREAK",
  "RETURN",
  "IF",
  "\"(\"",
  "\")\"",
  "\"{\"",
  "\"}\"",
  "ELSE",
  "LOOP",
  "\",\"",
  "NUMBER",
  "STRING",
  "BOOLEAN",
  "IDENTIFIER",
  "$start",
  "stmts",
  "stmt",
  "expr",
  "var_assign",
  "if_stmt",
  "loop_stmt",
  "identifier",
  "func",
  "else_stmt",
  "primary",
  "lit",
  "func_call",
  "list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 9)
  def _reduce_1(val, _values, result)
    result = ['STMTS']
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 10)
  def _reduce_2(val, _values, result)
    result << val[1]
    result
  end
.,.,

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 16)
  def _reduce_7(val, _values, result)
    result = ['BREAK']
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 17)
  def _reduce_8(val, _values, result)
    result = ['RETURN', val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 18)
  def _reduce_9(val, _values, result)
    result = ['=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 20)
  def _reduce_10(val, _values, result)
    result = ['=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 21)
  def _reduce_11(val, _values, result)
    result = ['+=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 22)
  def _reduce_12(val, _values, result)
    result = ['-=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 23)
  def _reduce_13(val, _values, result)
    result = ['*=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 24)
  def _reduce_14(val, _values, result)
    result = ['/=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 25)
  def _reduce_15(val, _values, result)
    result = ['%=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 27)
  def _reduce_16(val, _values, result)
    result = ['IF', val[2], val[5], val[7]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 28)
  def _reduce_17(val, _values, result)
    result = ['IF', val[2], val[4], val[5]]
    result
  end
.,.,

# reduce 18 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 31)
  def _reduce_19(val, _values, result)
    result = val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 32)
  def _reduce_20(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 34)
  def _reduce_21(val, _values, result)
    result = ['LOOP', val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 36)
  def _reduce_22(val, _values, result)
    result = ['+', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 37)
  def _reduce_23(val, _values, result)
    result = ['-', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 38)
  def _reduce_24(val, _values, result)
    result = ['-', ["NUMBER", 0], val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 39)
  def _reduce_25(val, _values, result)
    result = ['*', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 40)
  def _reduce_26(val, _values, result)
    result = ['/', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 41)
  def _reduce_27(val, _values, result)
    result = ['%', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 42)
  def _reduce_28(val, _values, result)
    result = ['==', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 43)
  def _reduce_29(val, _values, result)
    result = ['!=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 44)
  def _reduce_30(val, _values, result)
    result = ['>', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 45)
  def _reduce_31(val, _values, result)
    result = ['>=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 46)
  def _reduce_32(val, _values, result)
    result = ['<', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 47)
  def _reduce_33(val, _values, result)
    result = ['<=', val[0], val[2]]
    result
  end
.,.,

# reduce 34 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 50)
  def _reduce_35(val, _values, result)
    result = val[1]
    result
  end
.,.,

# reduce 36 omitted

# reduce 37 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 54)
  def _reduce_38(val, _values, result)
    result = ['FUNC_CALL', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 55)
  def _reduce_39(val, _values, result)
    result = ['FUNC_CALL', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 58)
  def _reduce_40(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 59)
  def _reduce_41(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 60)
  def _reduce_42(val, _values, result)
    result << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 62)
  def _reduce_43(val, _values, result)
    result = ['NUMBER', val[0]]
    result
  end
.,.,

# reduce 44 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 64)
  def _reduce_45(val, _values, result)
    result = ['STRING', val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 65)
  def _reduce_46(val, _values, result)
    result = ['BOOLEAN', val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 67)
  def _reduce_47(val, _values, result)
    result = ['FUNCTION', val[1], val[4]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 69)
  def _reduce_48(val, _values, result)
    result = ['IDENTIFIER', val[0]]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class RadiusParser

if __FILE__ == $0
  parser = RadiusParser.new
  File.open("program.rlb", "r") do |f|
    res = parser.parse(f.read)
    puts ("Parse: #{res}")
  end
end
