#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'pp'
require 'strscan'

class RadiusParser < Racc::Parser

module_eval(<<'...end radius_parser.ry/module_eval...', 'radius_parser.ry', 61)

def parse(str)
  scanner = StringScanner.new(str)
  @q = []
  while !scanner.eos?
    scanner.scan(/[\s\n]+/)

    scanner.scan(/if/) ?                        @q << [:IF, "if"] :
    scanner.scan(/else/) ?                      @q << [:ELSE, "else"] :

    scanner.scan(/\".*?\"/) ?                   @q << [:STRING, scanner.matched[1..-2]] :
    scanner.scan(/[a-zA-Z_][a-zA-Z0-9_]*/) ?    @q << [:IDENTIFIER, scanner.matched] :
    scanner.scan(/([0-9]+|[0-9]*\.[0-9]+)/) ?   @q << [:NUMBER, scanner.matched.to_i] :

    scanner.scan(/==/) ?                        @q << ["==", "=="] :
    scanner.scan(/!=/) ?                        @q << ["!=", "!="] :
    scanner.scan(/>=/) ?                        @q << [">=", ">="] :
    scanner.scan(/<=/) ?                        @q << ["<=", "<="] :
    scanner.scan(/>/) ?                         @q << [">", ">"] :
    scanner.scan(/</) ?                         @q << ["<", "<"] :

    scanner.scan(/./) ?                         @q << [scanner.matched, scanner.matched] :
    (raise "scanner error")
  end
  # puts ("Token: #{@q}")

  do_parse
end

def next_token
  @q.shift
end

...end radius_parser.ry/module_eval...
##### State transition tables begin ###

racc_action_table = [
     2,     9,    51,    21,    22,     9,    52,    29,    17,    30,
    30,     8,    11,    59,    61,     8,    11,     9,    14,    15,
    16,     9,    14,    15,    16,    31,     9,     8,    11,    21,
    22,    60,    11,    59,    14,    15,    16,    11,    14,    15,
    16,     9,   nil,    14,    15,    16,     9,    21,    22,   nil,
     9,     8,    11,   nil,   nil,    65,   nil,    11,    14,    15,
    16,    11,     9,    14,    15,    16,     9,    14,    15,    16,
   nil,     9,     8,    11,   nil,    55,     9,    11,   nil,    14,
    15,    16,    11,    14,    15,    16,     9,    11,    14,    15,
    16,     9,   nil,    14,    15,    16,     9,    11,   nil,   nil,
     9,   nil,    11,    14,    15,    16,   nil,    11,    14,    15,
    16,    11,     9,    14,    15,    16,     9,    14,    15,    16,
   nil,     9,   nil,    11,   nil,     9,   nil,    11,   nil,    14,
    15,    16,    11,    14,    15,    16,    11,     9,    14,    15,
    16,   nil,    14,    15,    16,   nil,   nil,   nil,    11,   nil,
   nil,   nil,   nil,   nil,    14,    15,    16,    21,    22,    19,
    20,    23,    24,    25,    26,    27,    28,   nil,   nil,   nil,
   nil,   nil,    49,    21,    22,    19,    20,    23,    24,    25,
    26,    27,    28,   nil,   nil,   nil,   nil,   nil,    53,    21,
    22,    19,    20,    23,    24,    25,    26,    27,    28,   nil,
    50,    21,    22,    19,    20,    23,    24,    25,    26,    27,
    28,   nil,    18,    21,    22,    19,    20,    23,    24,    25,
    26,    27,    28,    21,    22,    19,    20,   -35,   -35,   -35,
   -35,   -35,   -35,    21,    22,    19,    20,   -35,   -35,   -35,
   -35,   -35,   -35,    21,    22,    19,    20,   -35,   -35,   -35,
   -35,   -35,   -35,    21,    22,    19,    20,   -35,   -35,   -35,
   -35,   -35,   -35,    21,    22,    19,    20,   -35,   -35,   -35,
   -35,   -35,   -35,    21,    22,    19,    20,   -35,   -35,   -35,
   -35,   -35,   -35,    21,    22,    19,    20,    23,    24,    25,
    26,    27,    28 ]

racc_action_check = [
     1,    59,    47,    35,    35,     1,    47,     7,     2,     7,
    33,    59,    59,    56,    59,     1,     1,    57,    59,    59,
    59,     9,     1,     1,     1,     8,    11,    57,    57,    36,
    36,    57,     9,    60,    57,    57,    57,    11,     9,     9,
     9,    64,   nil,    11,    11,    11,    30,    32,    32,   nil,
    31,    64,    64,   nil,   nil,    64,   nil,    30,    64,    64,
    64,    31,    53,    30,    30,    30,    52,    31,    31,    31,
   nil,    19,    53,    53,   nil,    53,    20,    52,   nil,    53,
    53,    53,    19,    52,    52,    52,    21,    20,    19,    19,
    19,    22,   nil,    20,    20,    20,    23,    21,   nil,   nil,
    24,   nil,    22,    21,    21,    21,   nil,    23,    22,    22,
    22,    24,    25,    23,    23,    23,    26,    24,    24,    24,
   nil,    27,   nil,    25,   nil,    28,   nil,    26,   nil,    25,
    25,    25,    27,    26,    26,    26,    28,    29,    27,    27,
    27,   nil,    28,    28,    28,   nil,   nil,   nil,    29,   nil,
   nil,   nil,   nil,   nil,    29,    29,    29,    34,    34,    34,
    34,    34,    34,    34,    34,    34,    34,   nil,   nil,   nil,
   nil,   nil,    34,    48,    48,    48,    48,    48,    48,    48,
    48,    48,    48,   nil,   nil,   nil,   nil,   nil,    48,    45,
    45,    45,    45,    45,    45,    45,    45,    45,    45,   nil,
    45,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,   nil,     4,    54,    54,    54,    54,    54,    54,    54,
    54,    54,    54,    39,    39,    39,    39,    39,    39,    39,
    39,    39,    39,    40,    40,    40,    40,    40,    40,    40,
    40,    40,    40,    41,    41,    41,    41,    41,    41,    41,
    41,    41,    41,    42,    42,    42,    42,    42,    42,    42,
    42,    42,    42,    43,    43,    43,    43,    43,    43,    43,
    43,    43,    43,    44,    44,    44,    44,    44,    44,    44,
    44,    44,    44,    46,    46,    46,    46,    46,    46,    46,
    46,    46,    46 ]

racc_action_pointer = [
   nil,     0,     8,   nil,   199,   nil,   nil,    -7,     9,    16,
   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    66,
    71,    81,    86,    91,    95,   107,   111,   116,   120,   132,
    41,    45,    45,    -6,   155,     1,    27,   nil,   nil,   221,
   231,   241,   251,   261,   271,   187,   281,   -15,   171,   nil,
   nil,   nil,    61,    57,   211,   nil,    -7,    12,   nil,    -4,
    13,   nil,   nil,   nil,    36,   nil ]

racc_action_default = [
    -1,   -35,   -35,    -2,   -35,    -4,    -5,   -32,   -35,   -35,
   -23,   -35,   -25,   -26,   -31,   -33,   -34,    66,    -3,   -35,
   -35,   -35,   -35,   -35,   -35,   -35,   -35,   -35,   -35,   -35,
   -28,   -35,   -14,   -32,   -35,   -12,   -13,   -15,   -16,   -17,
   -18,   -19,   -20,   -21,   -22,   -35,   -29,   -35,   -35,   -24,
    -6,   -27,   -35,   -35,   -30,    -1,    -9,   -35,    -8,   -35,
    -9,    -1,   -11,    -7,   -35,   -10 ]

racc_goto_table = [
     7,    32,    56,    34,     1,    58,    47,   nil,    62,    63,
   nil,    35,    36,    37,    38,    39,    40,    41,    42,    43,
    44,    45,    46,    48,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    54,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     7,   nil,   nil,   nil,     7,   nil,     7,    57,
   nil,   nil,   nil,     7,   nil,    64 ]

racc_goto_check = [
     6,     3,     2,     3,     1,     7,    11,   nil,     2,     7,
   nil,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     6,   nil,   nil,   nil,     6,   nil,     6,     1,
   nil,   nil,   nil,     6,   nil,     1 ]

racc_goto_pointer = [
   nil,     4,   -51,    -8,   nil,   nil,    -1,   -51,   nil,   nil,
   nil,   -24 ]

racc_goto_default = [
   nil,   nil,     3,     4,     5,     6,    33,   nil,    10,    12,
    13,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 26, :_reduce_1,
  2, 26, :_reduce_2,
  2, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  4, 29, :_reduce_6,
  8, 30, :_reduce_7,
  6, 30, :_reduce_8,
  0, 32, :_reduce_none,
  4, 32, :_reduce_10,
  2, 32, :_reduce_11,
  3, 28, :_reduce_12,
  3, 28, :_reduce_13,
  2, 28, :_reduce_14,
  3, 28, :_reduce_15,
  3, 28, :_reduce_16,
  3, 28, :_reduce_17,
  3, 28, :_reduce_18,
  3, 28, :_reduce_19,
  3, 28, :_reduce_20,
  3, 28, :_reduce_21,
  3, 28, :_reduce_22,
  1, 28, :_reduce_none,
  3, 33, :_reduce_24,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  4, 35, :_reduce_27,
  0, 36, :_reduce_28,
  1, 36, :_reduce_29,
  3, 36, :_reduce_30,
  1, 34, :_reduce_31,
  1, 34, :_reduce_32,
  1, 34, :_reduce_33,
  1, 31, :_reduce_34 ]

racc_reduce_n = 35

racc_shift_n = 66

racc_token_table = {
  false => 0,
  :error => 1,
  "*" => 2,
  "/" => 3,
  "+" => 4,
  "-" => 5,
  "==" => 6,
  "!=" => 7,
  ">" => 8,
  ">=" => 9,
  "<" => 10,
  "<=" => 11,
  "else" => 12,
  ";" => 13,
  "=" => 14,
  :IF => 15,
  "(" => 16,
  ")" => 17,
  "{" => 18,
  "}" => 19,
  :ELSE => 20,
  "," => 21,
  :NUMBER => 22,
  :STRING => 23,
  :IDENTIFIER => 24 }

racc_nt_base = 25

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\"==\"",
  "\"!=\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"else\"",
  "\";\"",
  "\"=\"",
  "IF",
  "\"(\"",
  "\")\"",
  "\"{\"",
  "\"}\"",
  "ELSE",
  "\",\"",
  "NUMBER",
  "STRING",
  "IDENTIFIER",
  "$start",
  "stmts",
  "stmt",
  "expr",
  "var_assign",
  "if_stmt",
  "identifier",
  "else_stmt",
  "primary",
  "lit",
  "func_call",
  "list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 9)
  def _reduce_1(val, _values, result)
    result = ['STMTS']
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 10)
  def _reduce_2(val, _values, result)
    result << val[1]
    result
  end
.,.,

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 16)
  def _reduce_6(val, _values, result)
    result = ['VAR_ASSIGN', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 18)
  def _reduce_7(val, _values, result)
    result = ['IF', val[2], val[5], val[7]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 19)
  def _reduce_8(val, _values, result)
    result = ['IF', val[2], val[4], val[5]]
    result
  end
.,.,

# reduce 9 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 22)
  def _reduce_10(val, _values, result)
    result = val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 23)
  def _reduce_11(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 25)
  def _reduce_12(val, _values, result)
    result = ['+', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 26)
  def _reduce_13(val, _values, result)
    result = ['-', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 27)
  def _reduce_14(val, _values, result)
    result = ['-', ["NUMBER", 0], val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 28)
  def _reduce_15(val, _values, result)
    result = ['*', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 29)
  def _reduce_16(val, _values, result)
    result = ['/', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 30)
  def _reduce_17(val, _values, result)
    result = ['==', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 31)
  def _reduce_18(val, _values, result)
    result = ['!=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 32)
  def _reduce_19(val, _values, result)
    result = ['>', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 33)
  def _reduce_20(val, _values, result)
    result = ['>=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 34)
  def _reduce_21(val, _values, result)
    result = ['<', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 35)
  def _reduce_22(val, _values, result)
    result = ['<=', val[0], val[2]]
    result
  end
.,.,

# reduce 23 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 38)
  def _reduce_24(val, _values, result)
    result = val[1]
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 42)
  def _reduce_27(val, _values, result)
    result = ['FUNC_CALL', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 44)
  def _reduce_28(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 45)
  def _reduce_29(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 46)
  def _reduce_30(val, _values, result)
    result << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 48)
  def _reduce_31(val, _values, result)
    result = ['NUMBER', val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 49)
  def _reduce_32(val, _values, result)
    result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 50)
  def _reduce_33(val, _values, result)
    result = ['STRING', val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 52)
  def _reduce_34(val, _values, result)
    result = ['IDENTIFIER', val[0]]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class RadiusParser

if __FILE__ == $0
  parser = RadiusParser.new
  File.open("program.rlb", "r") do |f|
    res = parser.parse(f.read)
    puts ("Parse: #{res}")
  end
end
