#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'pp'
require 'strscan'

class RadiusParser < Racc::Parser

module_eval(<<'...end radius_parser.ry/module_eval...', 'radius_parser.ry', 117)

def parse(str)
  scanner = StringScanner.new(str)
  @q = []
  while !scanner.eos?
    scanner.scan(/[\s\n]+/)

    scanner.scan(/if/) ?                        @q << [:IF, "if"] :
    scanner.scan(/else/) ?                      @q << [:ELSE, "else"] :
    scanner.scan(/loop/) ?                      @q << [:LOOP, "loop"] :
    scanner.scan(/break/) ?                     @q << [:BREAK, "break"] :
    scanner.scan(/return/) ?                    @q << [:RETURN, "return"] :
    scanner.scan(/function/) ?                  @q << [:FUNCTION, "function"] :
    scanner.scan(/class/) ?                     @q << [:CLASS, "class"] :
    scanner.scan(/self/) ?                      @q << [:SELF, "self"] :
    scanner.scan(/true/) ?                      @q << [:BOOLEAN, true] :
    scanner.scan(/false/) ?                     @q << [:BOOLEAN, false] :

    scanner.scan(/\".*?\"/) ?                   @q << [:STRING, scanner.matched[1..-2]] :
    scanner.scan(/[a-zA-Z_][a-zA-Z0-9_]*/) ?    @q << [:IDENTIFIER, scanner.matched.to_sym] :
    scanner.scan(/([0-9]*\.[0-9]+)/) ?          @q << [:NUMBER, scanner.matched.to_f] :
    scanner.scan(/(0|[1-9][0-9]*)/) ?           @q << [:NUMBER, scanner.matched.to_i] :

    scanner.scan(/\+=/) ?                       @q << ["+=", "+="] :
    scanner.scan(/-=/) ?                        @q << ["-=", "-="] :
    scanner.scan(/\*=/) ?                       @q << ["*=", "*="] :
    scanner.scan(/\/=/) ?                       @q << ["/=", "/="] :

    scanner.scan(/==/) ?                        @q << ["==", "=="] :
    scanner.scan(/!=/) ?                        @q << ["!=", "!="] :
    scanner.scan(/<>/) ?                        @q << ["<>", "<>"] :
    scanner.scan(/>=/) ?                        @q << [">=", ">="] :
    scanner.scan(/<=/) ?                        @q << ["<=", "<="] :
    scanner.scan(/>/) ?                         @q << [">", ">"] :
    scanner.scan(/</) ?                         @q << ["<", "<"] :

    scanner.scan(/\&\&/) ?                      @q << ["&&", "&&"] :
    scanner.scan(/\|\|/) ?                      @q << ["||", "||"] :
    scanner.scan(/#.+/) ?                       nil :

    scanner.scan(/./) ?                         @q << [scanner.matched, scanner.matched] :
    (raise "scanner error")
  end
  puts ("Token: #{@q}")

  do_parse
end

def next_token
  @q.shift
end

...end radius_parser.ry/module_eval...
##### State transition tables begin ###

racc_action_table = [
    55,    56,    57,    53,    54,    58,    59,    61,    62,    63,
    64,    60,    55,    56,    57,    48,   105,    26,    65,    66,
   108,   106,    55,    56,    57,    53,    54,    58,    59,    61,
    62,    63,    64,    60,   109,    26,    22,    22,    35,   129,
    65,    66,    28,   114,    31,    32,    33,    34,   112,    14,
    17,    20,    47,    26,    21,    22,    35,   126,   106,    22,
    28,   107,    31,    32,    33,    34,   132,    14,    17,    20,
   128,    26,    21,    22,    35,    52,   106,    46,    28,    51,
    31,    32,    33,    34,   115,    14,    17,    20,    45,    26,
    21,    22,    35,    50,   116,    22,    28,    49,    31,    32,
    33,    34,   113,    14,    17,    20,   131,    26,    21,    22,
    35,   118,   106,   -47,    28,   136,    31,    32,    33,    34,
    24,    14,    17,    20,    48,    26,    21,    22,    35,    55,
    56,    57,    28,    23,    31,    32,    33,    34,     3,    14,
    17,    20,   nil,    26,    21,    22,    35,    55,    56,    57,
    28,   nil,    31,    32,    33,    34,   nil,    14,    17,    20,
   nil,    26,    21,    22,    35,   nil,   nil,   nil,    28,   nil,
    31,    32,    33,    34,   nil,    14,    17,    20,   nil,    26,
    21,    22,    35,   nil,   nil,   nil,    28,   nil,    31,    32,
    33,    34,   nil,    14,    17,    20,   nil,    26,    21,    22,
    35,   nil,   nil,   nil,    28,   nil,    31,    32,    33,    34,
   nil,    14,    17,    20,   nil,    26,    21,    22,    35,   nil,
   nil,   nil,    28,   nil,    31,    32,    33,    34,   nil,    14,
    17,    20,   nil,    26,    21,    22,    35,   nil,   nil,   nil,
    28,   nil,    31,    32,    33,    34,   nil,    14,    17,    20,
   nil,    26,    21,    22,    35,   nil,   nil,   nil,    28,   nil,
    31,    32,    33,    34,   nil,    14,    17,    20,   nil,    26,
    21,    22,    35,   nil,   nil,   nil,    28,   nil,    31,    32,
    33,    34,   nil,    14,    17,    20,   nil,    26,    21,    22,
    35,   nil,   nil,   nil,    28,   nil,    31,    32,    33,    34,
   nil,    14,    17,    20,   nil,    26,    21,    22,    35,   nil,
   nil,   nil,    28,   nil,    31,    32,    33,    34,   nil,    14,
    17,    20,   nil,    26,    21,    22,    35,   nil,   nil,   nil,
    28,   nil,    31,    32,    33,    34,   nil,    14,    17,    20,
   nil,    26,    21,    22,    35,   nil,   nil,   nil,    28,   nil,
    31,    32,    33,    34,   nil,    14,    17,    20,   nil,    26,
    21,    22,    35,   nil,   nil,   nil,    28,   nil,    31,    32,
    33,    34,   nil,    14,    17,    20,   nil,    26,    21,    22,
    35,   nil,   nil,   nil,    28,   nil,    31,    32,    33,    34,
   nil,    14,    17,    20,   nil,    26,    21,    22,    35,   nil,
   nil,   nil,    28,   nil,    31,    32,    33,    34,   nil,    14,
    17,    20,   nil,    26,    21,    22,    35,   nil,   nil,   nil,
    28,   nil,    31,    32,    33,    34,   nil,    14,    17,    20,
   nil,    26,    21,    22,    35,   nil,   nil,   nil,    28,   nil,
    31,    32,    33,    34,   nil,    14,    17,    20,   nil,    26,
    21,    22,    35,   nil,   nil,   nil,    28,   nil,    31,    32,
    33,    34,   nil,    14,    17,    20,   nil,    26,    21,    22,
    35,   nil,   nil,   nil,    28,   nil,    31,    32,    33,    34,
   nil,    14,    17,    20,   nil,    26,    21,    22,    35,   nil,
   nil,   nil,    28,   nil,    31,    32,    33,    34,   nil,    14,
    17,    20,   nil,    26,    21,    22,    35,   nil,   nil,   nil,
    28,   nil,    31,    32,    33,    34,   nil,    14,    17,    20,
   nil,    26,    21,    22,    35,   nil,   nil,   nil,    28,   nil,
    31,    32,    33,    34,   nil,    14,    17,    20,   nil,    26,
    21,    22,    35,   nil,   nil,   nil,    28,   nil,    31,    32,
    33,    34,   nil,    14,    17,    20,   nil,    26,    21,    22,
    35,   nil,   nil,   nil,    28,   nil,    31,    32,    33,    34,
   nil,    14,    17,    20,   nil,    26,    21,    22,    35,   nil,
   nil,   nil,    28,   nil,    31,    32,    33,    34,   nil,    14,
    17,    20,   nil,    26,    21,    22,    35,   nil,   nil,   nil,
    28,   nil,    31,    32,    33,    34,   nil,    14,    17,    20,
   nil,   nil,    21,    22,    35,   nil,   nil,   nil,    28,   nil,
    31,    32,    33,    34,   nil,    14,    17,    20,   nil,   nil,
    21,    22,    55,    56,    57,    53,    54,    58,    59,    61,
    62,    63,    64,    60,   138,   nil,   nil,   nil,   nil,   nil,
    65,    66,   nil,   nil,    14,    17,    20,   nil,   nil,    21,
    22,   nil,   104,    55,    56,    57,    53,    54,    58,    59,
    61,    62,    63,    64,    60,    38,    39,    40,    41,    42,
    43,    65,    66,     8,     9,    12,   nil,   117,    79,    13,
     8,     9,    12,   nil,   111,   nil,    13,    14,    17,    20,
   nil,   nil,    21,    22,    14,    17,    20,   nil,   nil,    21,
    22,     8,     9,    12,   nil,   137,   nil,    13,     8,     9,
    12,   nil,   124,   nil,    13,    14,    17,    20,   nil,   nil,
    21,    22,    14,    17,    20,   nil,   nil,    21,    22,     8,
     9,    12,   nil,   nil,   nil,    13,     8,     9,    12,   nil,
   140,   nil,    13,    14,    17,    20,   nil,   nil,    21,    22,
    14,    17,    20,   nil,   nil,    21,    22,    55,    56,    57,
    53,    54,    58,    59,    61,    62,    63,    64,    60,   nil,
   nil,   nil,   nil,   nil,   nil,    65,    66,    55,    56,    57,
    53,    54,    58,    59,    61,    62,    63,    64,    60,   nil,
   nil,   nil,   nil,   nil,   nil,    65,    66,    55,    56,    57,
    53,    54,    58,    59,    61,    62,    63,    64,    60,   nil,
   nil,   nil,   nil,   nil,   nil,    65,    66,    55,    56,    57,
    53,    54,    58,    59,    61,    62,    63,    64,    60,   nil,
   nil,   nil,   nil,   nil,   nil,    65,    66,    55,    56,    57,
    53,    54,    58,    59,    61,    62,    63,    64,    60,   nil,
   nil,   nil,   nil,   nil,   nil,    65,    66,    55,    56,    57,
    53,    54,    58,    59,    61,    62,    63,    64,    60,   nil,
   nil,   nil,   nil,   nil,   nil,    65,    66,    55,    56,    57,
    53,    54,    58,    59,    61,    62,    63,    64,    60,   nil,
   nil,   nil,   nil,   nil,   nil,    65,    66,    55,    56,    57,
    53,    54,    58,    59,    61,    62,    63,    64,    60,   nil,
   nil,   nil,   nil,   nil,   nil,    65,    66,    55,    56,    57,
    53,    54,    58,    59,    61,    62,    63,    64,    60,   nil,
   nil,   nil,   nil,   nil,   nil,    65,    66,    55,    56,    57,
    53,    54,    58,    59,    61,    62,    63,    64,    60,   nil,
   nil,   nil,   nil,   nil,   nil,    65,    66,    55,    56,    57,
    53,    54,    58,    59,    61,    62,    63,    64,    60,   nil,
   nil,   nil,   nil,   nil,   nil,    65,    66,    55,    56,    57,
    53,    54,    58,    59,    61,    62,    63,    64,    60,   119,
   nil,   nil,   nil,   nil,   nil,    65,   nil,   nil,   nil,    14,
    17,    20,   nil,   nil,    21,    22,    55,    56,    57,    53,
    54,   -74,   -74,   -74,   -74,   -74,   -74,   -74,    55,    56,
    57,    53,    54,    58,    59,    61,    62,    63,    64,    60,
    55,    56,    57,    53,    54,   -74,   -74,   -74,   -74,   -74,
   -74,   -74,    55,    56,    57,    53,    54,   -74,   -74,   -74,
   -74,   -74,   -74,   -74,    55,    56,    57,    53,    54,   -74,
   -74,   -74,   -74,   -74,   -74,   -74,    55,    56,    57,    53,
    54,   -74,   -74,   -74,   -74,   -74,   -74,   -74,    55,    56,
    57,    53,    54,   -74,   -74,   -74,   -74,   -74,   -74,   -74,
    55,    56,    57,    53,    54,   -74,   -74,   -74,   -74,   -74,
   -74,   -74 ]

racc_action_check = [
   123,   123,   123,   123,   123,   123,   123,   123,   123,   123,
   123,   123,    90,    90,    90,    30,    70,    64,   123,   123,
    72,    70,    71,    71,    71,    71,    71,    71,    71,    71,
    71,    71,    71,    71,    72,     9,    51,    49,    64,   123,
    71,    71,    64,    83,    64,    64,    64,    64,    81,    64,
    64,    64,    18,   129,    64,    64,     9,   115,    81,   116,
     9,    71,     9,     9,     9,     9,   125,     9,     9,     9,
   118,    65,     9,     9,   129,    21,   125,    15,   129,    21,
   129,   129,   129,   129,    84,   129,   129,   129,    13,    66,
   129,   129,    65,    20,    84,    48,    65,    20,    65,    65,
    65,    65,    82,    65,    65,    65,   124,    12,    65,    65,
    66,    87,    82,    10,    66,   131,    66,    66,    66,    66,
     4,    66,    66,    66,    19,    63,    66,    66,    12,    91,
    91,    91,    12,     3,    12,    12,    12,    12,     1,    12,
    12,    12,   nil,    62,    12,    12,    63,    67,    67,    67,
    63,   nil,    63,    63,    63,    63,   nil,    63,    63,    63,
   nil,   114,    63,    63,    62,   nil,   nil,   nil,    62,   nil,
    62,    62,    62,    62,   nil,    62,    62,    62,   nil,    61,
    62,    62,   114,   nil,   nil,   nil,   114,   nil,   114,   114,
   114,   114,   nil,   114,   114,   114,   nil,   109,   114,   114,
    61,   nil,   nil,   nil,    61,   nil,    61,    61,    61,    61,
   nil,    61,    61,    61,   nil,   107,    61,    61,   109,   nil,
   nil,   nil,   109,   nil,   109,   109,   109,   109,   nil,   109,
   109,   109,   nil,    60,   109,   109,   107,   nil,   nil,   nil,
   107,   nil,   107,   107,   107,   107,   nil,   107,   107,   107,
   nil,    26,   107,   107,    60,   nil,   nil,   nil,    60,   nil,
    60,    60,    60,    60,   nil,    60,    60,    60,   nil,    28,
    60,    60,    26,   nil,   nil,   nil,    26,   nil,    26,    26,
    26,    26,   nil,    26,    26,    26,   nil,   106,    26,    26,
    28,   nil,   nil,   nil,    28,   nil,    28,    28,    28,    28,
   nil,    28,    28,    28,   nil,    34,    28,    28,   106,   nil,
   nil,   nil,   106,   nil,   106,   106,   106,   106,   nil,   106,
   106,   106,   nil,    35,   106,   106,    34,   nil,   nil,   nil,
    34,   nil,    34,    34,    34,    34,   nil,    34,    34,    34,
   nil,    38,    34,    34,    35,   nil,   nil,   nil,    35,   nil,
    35,    35,    35,    35,   nil,    35,    35,    35,   nil,    39,
    35,    35,    38,   nil,   nil,   nil,    38,   nil,    38,    38,
    38,    38,   nil,    38,    38,    38,   nil,    40,    38,    38,
    39,   nil,   nil,   nil,    39,   nil,    39,    39,    39,    39,
   nil,    39,    39,    39,   nil,    41,    39,    39,    40,   nil,
   nil,   nil,    40,   nil,    40,    40,    40,    40,   nil,    40,
    40,    40,   nil,    42,    40,    40,    41,   nil,   nil,   nil,
    41,   nil,    41,    41,    41,    41,   nil,    41,    41,    41,
   nil,    43,    41,    41,    42,   nil,   nil,   nil,    42,   nil,
    42,    42,    42,    42,   nil,    42,    42,    42,   nil,    59,
    42,    42,    43,   nil,   nil,   nil,    43,   nil,    43,    43,
    43,    43,   nil,    43,    43,    43,   nil,    46,    43,    43,
    59,   nil,   nil,   nil,    59,   nil,    59,    59,    59,    59,
   nil,    59,    59,    59,   nil,    47,    59,    59,    46,   nil,
   nil,   nil,    46,   nil,    46,    46,    46,    46,   nil,    46,
    46,    46,   nil,    58,    46,    46,    47,   nil,   nil,   nil,
    47,   nil,    47,    47,    47,    47,   nil,    47,    47,    47,
   nil,    57,    47,    47,    58,   nil,   nil,   nil,    58,   nil,
    58,    58,    58,    58,   nil,    58,    58,    58,   nil,    56,
    58,    58,    57,   nil,   nil,   nil,    57,   nil,    57,    57,
    57,    57,   nil,    57,    57,    57,   nil,    53,    57,    57,
    56,   nil,   nil,   nil,    56,   nil,    56,    56,    56,    56,
   nil,    56,    56,    56,   nil,    54,    56,    56,    53,   nil,
   nil,   nil,    53,   nil,    53,    53,    53,    53,   nil,    53,
    53,    53,   nil,    55,    53,    53,    54,   nil,   nil,   nil,
    54,   nil,    54,    54,    54,    54,   nil,    54,    54,    54,
   nil,   nil,    54,    54,    55,   nil,   nil,   nil,    55,   nil,
    55,    55,    55,    55,   nil,    55,    55,    55,   nil,   nil,
    55,    55,    68,    68,    68,    68,    68,    68,    68,    68,
    68,    68,    68,    68,   134,   nil,   nil,   nil,   nil,   nil,
    68,    68,   nil,   nil,   134,   134,   134,   nil,   nil,   134,
   134,   nil,    68,    44,    44,    44,    44,    44,    44,    44,
    44,    44,    44,    44,    44,    11,    11,    11,    11,    11,
    11,    44,    44,    86,    86,    86,   nil,    86,    44,    86,
    80,    80,    80,   nil,    80,   nil,    80,    86,    86,    86,
   nil,   nil,    86,    86,    80,    80,    80,   nil,   nil,    80,
    80,   133,   133,   133,   nil,   133,   nil,   133,   110,   110,
   110,   nil,   110,   nil,   110,   133,   133,   133,   nil,   nil,
   133,   133,   110,   110,   110,   nil,   nil,   110,   110,     2,
     2,     2,   nil,   nil,   nil,     2,   139,   139,   139,   nil,
   139,   nil,   139,     2,     2,     2,   nil,   nil,     2,     2,
   139,   139,   139,   nil,   nil,   139,   139,   135,   135,   135,
   135,   135,   135,   135,   135,   135,   135,   135,   135,   nil,
   nil,   nil,   nil,   nil,   nil,   135,   135,   121,   121,   121,
   121,   121,   121,   121,   121,   121,   121,   121,   121,   nil,
   nil,   nil,   nil,   nil,   nil,   121,   121,    77,    77,    77,
    77,    77,    77,    77,    77,    77,    77,    77,    77,   nil,
   nil,   nil,   nil,   nil,   nil,    77,    77,    25,    25,    25,
    25,    25,    25,    25,    25,    25,    25,    25,    25,   nil,
   nil,   nil,   nil,   nil,   nil,    25,    25,    69,    69,    69,
    69,    69,    69,    69,    69,    69,    69,    69,    69,   nil,
   nil,   nil,   nil,   nil,   nil,    69,    69,    76,    76,    76,
    76,    76,    76,    76,    76,    76,    76,    76,    76,   nil,
   nil,   nil,   nil,   nil,   nil,    76,    76,    78,    78,    78,
    78,    78,    78,    78,    78,    78,    78,    78,    78,   nil,
   nil,   nil,   nil,   nil,   nil,    78,    78,   122,   122,   122,
   122,   122,   122,   122,   122,   122,   122,   122,   122,   nil,
   nil,   nil,   nil,   nil,   nil,   122,   122,    75,    75,    75,
    75,    75,    75,    75,    75,    75,    75,    75,    75,   nil,
   nil,   nil,   nil,   nil,   nil,    75,    75,    73,    73,    73,
    73,    73,    73,    73,    73,    73,    73,    73,    73,   nil,
   nil,   nil,   nil,   nil,   nil,    73,    73,    74,    74,    74,
    74,    74,    74,    74,    74,    74,    74,    74,    74,   nil,
   nil,   nil,   nil,   nil,   nil,    74,    74,   103,   103,   103,
   103,   103,   103,   103,   103,   103,   103,   103,   103,    89,
   nil,   nil,   nil,   nil,   nil,   103,   nil,   nil,   nil,    89,
    89,    89,   nil,   nil,    89,    89,   100,   100,   100,   100,
   100,   100,   100,   100,   100,   100,   100,   100,   102,   102,
   102,   102,   102,   102,   102,   102,   102,   102,   102,   102,
    98,    98,    98,    98,    98,    98,    98,    98,    98,    98,
    98,    98,    97,    97,    97,    97,    97,    97,    97,    97,
    97,    97,    97,    97,    96,    96,    96,    96,    96,    96,
    96,    96,    96,    96,    96,    96,    95,    95,    95,    95,
    95,    95,    95,    95,    95,    95,    95,    95,    99,    99,
    99,    99,    99,    99,    99,    99,    99,    99,    99,    99,
   101,   101,   101,   101,   101,   101,   101,   101,   101,   101,
   101,   101 ]

racc_action_pointer = [
   nil,   138,   715,   133,    97,   nil,   nil,   nil,   nil,    29,
    91,   661,   101,    61,   nil,    46,   nil,   nil,    21,   102,
    66,    48,   nil,   nil,   nil,   825,   245,   nil,   263,   nil,
    -7,   nil,   nil,   nil,   299,   317,   nil,   nil,   335,   353,
   371,   389,   407,   425,   661,   nil,   461,   479,    51,    -7,
   nil,    -8,   nil,   551,   569,   587,   533,   515,   497,   443,
   227,   173,   137,   119,    11,    65,    83,   145,   630,   845,
   -21,    20,    -8,   945,   965,   925,   865,   805,   885,   nil,
   666,    16,    70,    12,    52,   nil,   659,    79,   nil,   971,
    10,   127,   nil,   nil,   nil,  1074,  1062,  1050,  1038,  1086,
  1014,  1098,  1026,   985,   nil,   nil,   281,   209,   nil,   191,
   694,   nil,   nil,   nil,   155,    30,    15,   nil,    43,   nil,
   nil,   785,   905,    -2,    77,    34,   nil,   nil,   nil,    47,
   nil,    88,   nil,   687,   616,   765,   nil,   nil,   nil,   722,
   nil ]

racc_action_default = [
    -2,   -74,    -1,   -74,    -3,    -5,    -6,    -7,    -8,   -74,
   -10,   -45,   -74,   -74,   -46,   -48,   -49,   -50,   -51,   -74,
   -74,   -74,   -73,   141,    -4,    -9,   -74,   -36,   -74,   -38,
   -39,   -40,   -41,   -42,   -64,   -55,   -45,   -47,   -74,   -74,
   -74,   -74,   -74,   -74,   -74,    -2,   -64,   -64,   -74,   -58,
    -2,   -69,   -71,   -74,   -74,   -74,   -74,   -74,   -74,   -74,
   -74,   -74,   -74,   -74,   -74,   -74,   -74,   -23,   -74,   -65,
   -74,   -74,   -74,   -11,   -12,   -13,   -14,   -15,   -16,    -2,
   -74,   -74,   -74,   -52,   -74,   -59,   -74,   -74,   -70,   -74,
   -21,   -22,   -24,   -25,   -26,   -27,   -28,   -29,   -30,   -31,
   -32,   -33,   -34,   -35,   -37,   -43,   -74,   -74,   -44,   -74,
   -74,   -20,   -62,   -61,   -64,   -74,   -74,   -54,   -74,   -68,
   -72,   -66,   -56,   -74,   -18,   -74,    -2,   -60,   -71,   -74,
   -17,   -74,   -63,   -74,   -74,   -57,    -2,   -53,   -67,   -74,
   -19 ]

racc_goto_table = [
    10,    11,    70,    19,    89,    72,    84,    87,     1,   120,
     2,   130,   nil,   nil,    81,    82,   nil,   nil,   nil,    25,
   nil,   nil,    44,    83,    85,   nil,    88,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    67,   nil,    68,   nil,
   nil,   nil,   nil,   nil,   nil,    71,   nil,   nil,    73,    74,
    75,    76,    77,    78,   120,    80,   nil,   nil,   nil,   nil,
    86,   nil,   nil,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,   101,   102,   103,   nil,    10,    11,
   134,    19,   125,   nil,    10,    11,   nil,    19,    11,   110,
    19,   127,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    10,    11,
   nil,    19,   nil,   nil,   nil,   nil,   121,   122,   nil,   123,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    10,    11,    11,    19,    19,   133,    10,    11,   135,
    19,   nil,   nil,   nil,   nil,   nil,   139 ]

racc_goto_check = [
     8,     9,    14,    13,    21,    15,    19,    20,     1,     4,
     2,    10,   nil,   nil,    14,    14,   nil,   nil,   nil,     7,
   nil,   nil,     7,    18,    18,   nil,    18,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     7,   nil,     7,   nil,
   nil,   nil,   nil,   nil,   nil,     7,   nil,   nil,     7,     7,
     7,     7,     7,     7,     4,     2,   nil,   nil,   nil,   nil,
     2,   nil,   nil,     7,     7,     7,     7,     7,     7,     7,
     7,     7,     7,     7,     7,     7,     7,   nil,     8,     9,
    21,    13,    14,   nil,     8,     9,   nil,    13,     9,     2,
    13,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     8,     9,
   nil,    13,   nil,   nil,   nil,   nil,     7,     7,   nil,     7,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     8,     9,     9,    13,    13,     2,     8,     9,     7,
    13,   nil,   nil,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,     8,    10,   nil,   -80,   nil,   nil,    10,    -2,    -1,
  -113,   nil,   nil,     1,   -32,   -30,   nil,   nil,   -25,   -43,
   -44,   -48 ]

racc_goto_default = [
   nil,   nil,   nil,     4,     5,     6,     7,    69,    37,    36,
   nil,    27,    29,    30,   nil,   nil,    15,    16,    18,   nil,
   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 46, :_reduce_none,
  0, 47, :_reduce_2,
  2, 47, :_reduce_3,
  3, 47, :_reduce_4,
  1, 48, :_reduce_none,
  1, 48, :_reduce_none,
  1, 48, :_reduce_none,
  1, 48, :_reduce_8,
  2, 48, :_reduce_9,
  1, 48, :_reduce_none,
  3, 49, :_reduce_11,
  3, 49, :_reduce_12,
  3, 49, :_reduce_13,
  3, 49, :_reduce_14,
  3, 49, :_reduce_15,
  3, 49, :_reduce_16,
  6, 50, :_reduce_17,
  0, 55, :_reduce_none,
  4, 55, :_reduce_19,
  4, 51, :_reduce_20,
  3, 52, :_reduce_21,
  3, 52, :_reduce_22,
  2, 52, :_reduce_23,
  3, 52, :_reduce_24,
  3, 52, :_reduce_25,
  3, 52, :_reduce_26,
  3, 52, :_reduce_27,
  3, 52, :_reduce_28,
  3, 52, :_reduce_29,
  3, 52, :_reduce_30,
  3, 52, :_reduce_31,
  3, 52, :_reduce_32,
  3, 52, :_reduce_33,
  3, 52, :_reduce_34,
  3, 52, :_reduce_35,
  1, 52, :_reduce_none,
  3, 56, :_reduce_37,
  1, 56, :_reduce_none,
  1, 56, :_reduce_none,
  1, 57, :_reduce_40,
  1, 57, :_reduce_41,
  1, 57, :_reduce_42,
  3, 57, :_reduce_43,
  3, 57, :_reduce_44,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_50,
  1, 54, :_reduce_51,
  3, 54, :_reduce_52,
  7, 61, :_reduce_53,
  4, 61, :_reduce_54,
  0, 60, :_reduce_55,
  3, 60, :_reduce_56,
  5, 60, :_reduce_57,
  0, 64, :_reduce_58,
  1, 64, :_reduce_59,
  3, 64, :_reduce_60,
  4, 53, :_reduce_61,
  4, 53, :_reduce_62,
  6, 53, :_reduce_63,
  0, 59, :_reduce_64,
  1, 59, :_reduce_65,
  3, 59, :_reduce_66,
  7, 62, :_reduce_67,
  4, 62, :_reduce_68,
  0, 65, :_reduce_69,
  1, 65, :_reduce_none,
  0, 66, :_reduce_71,
  2, 66, :_reduce_72,
  1, 63, :_reduce_73 ]

racc_reduce_n = 74

racc_shift_n = 141

racc_token_table = {
  false => 0,
  :error => 1,
  "*" => 2,
  "/" => 3,
  "%" => 4,
  "+" => 5,
  "-" => 6,
  "==" => 7,
  "!=" => 8,
  ">" => 9,
  ">=" => 10,
  "<" => 11,
  "<=" => 12,
  "<>" => 13,
  "=" => 14,
  "+=" => 15,
  "-=" => 16,
  "*=" => 17,
  "/=" => 18,
  "%=" => 19,
  "&&" => 20,
  "||" => 21,
  "." => 22,
  ";" => 23,
  :BREAK => 24,
  :RETURN => 25,
  :IF => 26,
  "{" => 27,
  "}" => 28,
  :ELSE => 29,
  :LOOP => 30,
  "(" => 31,
  ")" => 32,
  :NUMBER => 33,
  :STRING => 34,
  :BOOLEAN => 35,
  "[" => 36,
  "]" => 37,
  :instance => 38,
  :SELF => 39,
  :FUNCTION => 40,
  ":" => 41,
  "," => 42,
  :CLASS => 43,
  :IDENTIFIER => 44 }

racc_nt_base = 45

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\"==\"",
  "\"!=\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"<>\"",
  "\"=\"",
  "\"+=\"",
  "\"-=\"",
  "\"*=\"",
  "\"/=\"",
  "\"%=\"",
  "\"&&\"",
  "\"||\"",
  "\".\"",
  "\";\"",
  "BREAK",
  "RETURN",
  "IF",
  "\"{\"",
  "\"}\"",
  "ELSE",
  "LOOP",
  "\"(\"",
  "\")\"",
  "NUMBER",
  "STRING",
  "BOOLEAN",
  "\"[\"",
  "\"]\"",
  "instance",
  "SELF",
  "FUNCTION",
  "\":\"",
  "\",\"",
  "CLASS",
  "IDENTIFIER",
  "$start",
  "program",
  "stmts",
  "stmt",
  "var_assign",
  "if_stmt",
  "loop_stmt",
  "expr",
  "func_call",
  "variable",
  "else_stmt",
  "primary",
  "lit",
  "object",
  "args",
  "hash",
  "func_def",
  "class_def",
  "identifier",
  "params",
  "expands",
  "var_assigns" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 14)
  def _reduce_2(val, _values, result)
    result = [:STMTS, []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 15)
  def _reduce_3(val, _values, result)
    result[1] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 16)
  def _reduce_4(val, _values, result)
    result[1] << val[1]
    result
  end
.,.,

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 21)
  def _reduce_8(val, _values, result)
    result = [:BREAK]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 22)
  def _reduce_9(val, _values, result)
    result = [:RETURN, val[1]]
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 25)
  def _reduce_11(val, _values, result)
    result = ['=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 26)
  def _reduce_12(val, _values, result)
    result = ['+=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 27)
  def _reduce_13(val, _values, result)
    result = ['-=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 28)
  def _reduce_14(val, _values, result)
    result = ['*=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 29)
  def _reduce_15(val, _values, result)
    result = ['/=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 30)
  def _reduce_16(val, _values, result)
    result = ['%=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 32)
  def _reduce_17(val, _values, result)
    result = [:IF, val[1], val[3], val[5]]
    result
  end
.,.,

# reduce 18 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 35)
  def _reduce_19(val, _values, result)
    result = val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 37)
  def _reduce_20(val, _values, result)
    result = [:LOOP, val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 39)
  def _reduce_21(val, _values, result)
    result = ['+', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 40)
  def _reduce_22(val, _values, result)
    result = ['-', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 41)
  def _reduce_23(val, _values, result)
    result = ['-', [:INSTANCE, :NUMBER, {}, 0], val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 42)
  def _reduce_24(val, _values, result)
    result = ['*', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 43)
  def _reduce_25(val, _values, result)
    result = ['/', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 44)
  def _reduce_26(val, _values, result)
    result = ['%', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 46)
  def _reduce_27(val, _values, result)
    result = ['==', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 47)
  def _reduce_28(val, _values, result)
    result = ['!=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 48)
  def _reduce_29(val, _values, result)
    result = ['!=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 49)
  def _reduce_30(val, _values, result)
    result = ['>', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 50)
  def _reduce_31(val, _values, result)
    result = ['>=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 51)
  def _reduce_32(val, _values, result)
    result = ['<', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 52)
  def _reduce_33(val, _values, result)
    result = ['<=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 54)
  def _reduce_34(val, _values, result)
    result = ['&&', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 55)
  def _reduce_35(val, _values, result)
    result = ['||', val[0], val[2]]
    result
  end
.,.,

# reduce 36 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 59)
  def _reduce_37(val, _values, result)
    result = val[1]
    result
  end
.,.,

# reduce 38 omitted

# reduce 39 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 63)
  def _reduce_40(val, _values, result)
    result = [:INSTANCE, :NUMBER, {}, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 64)
  def _reduce_41(val, _values, result)
    result = [:INSTANCE, :STRING, {}, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 65)
  def _reduce_42(val, _values, result)
    result = [:INSTANCE, :BOOLEAN, {}, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 66)
  def _reduce_43(val, _values, result)
    result = [:INSTANCE, :LIST, {}, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 67)
  def _reduce_44(val, _values, result)
    result = [:INSTANCE, :HASH, {}, val[1]]
    result
  end
.,.,

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 75)
  def _reduce_50(val, _values, result)
    result = [:SELF]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 77)
  def _reduce_51(val, _values, result)
    result = [:VARIABLE, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 78)
  def _reduce_52(val, _values, result)
    result = [:VARIABLE, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 80)
  def _reduce_53(val, _values, result)
    result = [:FUNCTION, val[2], val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 81)
  def _reduce_54(val, _values, result)
    result = [:FUNCTION, [], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 83)
  def _reduce_55(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 84)
  def _reduce_56(val, _values, result)
    result = [val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 85)
  def _reduce_57(val, _values, result)
    result << [val[2], val[4]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 87)
  def _reduce_58(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 88)
  def _reduce_59(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 89)
  def _reduce_60(val, _values, result)
    result << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 91)
  def _reduce_61(val, _values, result)
    result = [:FUNC_CALL, nil, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 92)
  def _reduce_62(val, _values, result)
    result = [:FUNC_CALL, nil, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 93)
  def _reduce_63(val, _values, result)
    result = [:FUNC_CALL, val[0], val[2], val[4]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 95)
  def _reduce_64(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 96)
  def _reduce_65(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 97)
  def _reduce_66(val, _values, result)
    result << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 99)
  def _reduce_67(val, _values, result)
    result = [:CLASS, val[2], val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 100)
  def _reduce_68(val, _values, result)
    result = [:CLASS, nil, val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 102)
  def _reduce_69(val, _values, result)
    result = nil
    result
  end
.,.,

# reduce 70 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 105)
  def _reduce_71(val, _values, result)
    result = [:STMTS, []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 106)
  def _reduce_72(val, _values, result)
    result[1] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 108)
  def _reduce_73(val, _values, result)
    result = [:IDENTIFIER, val[0]]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class RadiusParser

if __FILE__ == $0
  parser = RadiusParser.new
  File.open("program.rlb", "r") do |f|
    res = parser.parse(f.read)
    puts ("Parse: #{res}")
  end
end
