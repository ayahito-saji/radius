#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'pp'
require 'strscan'

class RadiusParser < Racc::Parser

module_eval(<<'...end radius_parser.ry/module_eval...', 'radius_parser.ry', 113)

def parse(str)
  scanner = StringScanner.new(str)
  @q = []
  while !scanner.eos?
    scanner.scan(/[\s\n]+/)

    scanner.scan(/if/) ?                        @q << [:IF, "if"] :
    scanner.scan(/else/) ?                      @q << [:ELSE, "else"] :
    scanner.scan(/loop/) ?                      @q << [:LOOP, "loop"] :
    scanner.scan(/break/) ?                     @q << [:BREAK, "break"] :
    scanner.scan(/return/) ?                    @q << [:RETURN, "return"] :
    scanner.scan(/function/) ?                  @q << [:FUNCTION, "function"] :
    scanner.scan(/class/) ?                     @q << [:CLASS, "class"] :
    scanner.scan(/self/) ?                      @q << [:SELF, "self"] :
    scanner.scan(/true/) ?                      @q << [:BOOLEAN, true] :
    scanner.scan(/false/) ?                     @q << [:BOOLEAN, false] :

    scanner.scan(/\".*?\"/) ?                   @q << [:STRING, scanner.matched[1..-2]] :
    scanner.scan(/[a-zA-Z_][a-zA-Z0-9_]*/) ?    @q << [:IDENTIFIER, scanner.matched.to_sym] :
    scanner.scan(/([0-9]*\.[0-9]+)/) ?          @q << [:NUMBER, scanner.matched.to_f] :
    scanner.scan(/(0|[1-9][0-9]*)/) ?           @q << [:NUMBER, scanner.matched.to_i] :

    scanner.scan(/\+=/) ?                       @q << ["+=", "+="] :
    scanner.scan(/-=/) ?                        @q << ["-=", "-="] :
    scanner.scan(/\*=/) ?                       @q << ["*=", "*="] :
    scanner.scan(/\/=/) ?                       @q << ["/=", "/="] :

    scanner.scan(/==/) ?                        @q << ["==", "=="] :
    scanner.scan(/!=/) ?                        @q << ["!=", "!="] :
    scanner.scan(/>=/) ?                        @q << [">=", ">="] :
    scanner.scan(/<=/) ?                        @q << ["<=", "<="] :
    scanner.scan(/>/) ?                         @q << [">", ">"] :
    scanner.scan(/</) ?                         @q << ["<", "<"] :

    scanner.scan(/\&\&/) ?                      @q << ["&&", "&&"] :
    scanner.scan(/\|\|/) ?                      @q << ["||", "||"] :
    scanner.scan(/#.+/) ?                       nil :

    scanner.scan(/./) ?                         @q << [scanner.matched, scanner.matched] :
    (raise "scanner error")
  end
  puts ("Token: #{@q}")

  do_parse
end

def next_token
  @q.shift
end

...end radius_parser.ry/module_eval...
##### State transition tables begin ###

racc_action_table = [
    56,    57,    58,    54,    55,    59,    60,    61,    62,    63,
    64,    26,   107,   129,   115,    30,   114,    65,    66,   108,
   108,     8,     9,    12,    75,   110,    30,    13,    51,   131,
    14,    15,    16,    17,    20,    23,   108,    25,    26,    32,
    30,    14,    15,    16,    17,    20,    23,    48,    25,    26,
    32,    30,    14,    15,    16,    17,    20,    23,   109,    25,
    26,    51,    30,   105,    32,   108,    14,    15,    16,    17,
    20,    23,    48,    25,    26,    32,    30,    14,    15,    16,
    17,    20,    23,    47,    25,    26,    32,    30,    14,    15,
    16,    17,    20,    23,   111,    25,    26,    46,    30,   123,
    32,   112,    14,    15,    16,    17,    20,    23,    26,    25,
    26,    32,    30,    14,    15,    16,    17,    20,    23,    26,
    25,    26,    32,    30,    14,    15,    16,    17,    20,    23,
   126,    25,    26,    53,    30,   105,    32,    52,    14,    15,
    16,    17,    20,    23,   -47,    25,    26,    32,    30,    14,
    15,    16,    17,    20,    23,    26,    25,    26,    32,    30,
    14,    15,    16,    17,    20,    23,    26,    25,    26,    50,
    30,    28,    32,    49,    14,    15,    16,    17,    20,    23,
    27,    25,    26,    32,    30,    14,    15,    16,    17,    20,
    23,     3,    25,    26,    32,    30,    14,    15,    16,    17,
    20,    23,   nil,    25,    26,   nil,    30,   nil,    32,   nil,
    14,    15,    16,    17,    20,    23,   nil,    25,    26,    32,
    30,    14,    15,    16,    17,    20,    23,   nil,    25,    26,
    32,    30,    14,    15,    16,    17,    20,    23,   nil,    25,
    26,   nil,    30,   nil,    32,   nil,    14,    15,    16,    17,
    20,    23,   nil,    25,    26,    32,    30,    14,    15,    16,
    17,    20,    23,   nil,    25,    26,    32,    30,    14,    15,
    16,    17,    20,    23,   nil,    25,    26,   nil,    30,   nil,
    32,   nil,    14,    15,    16,    17,    20,    23,   nil,    25,
    26,    32,    30,    14,    15,    16,    17,    20,    23,   nil,
    25,    26,    32,    30,    14,    15,    16,    17,    20,    23,
   nil,    25,    26,   nil,    30,   nil,    32,   nil,    14,    15,
    16,    17,    20,    23,   nil,    25,    26,    32,    30,    14,
    15,    16,    17,    20,    23,   nil,    25,    26,    32,    30,
    14,    15,    16,    17,    20,    23,   nil,    25,    26,    56,
    57,    58,    32,   nil,    14,    15,    16,    17,    20,    23,
   nil,    25,    26,    32,   nil,    14,    15,    16,    17,    20,
    23,   nil,    25,    26,    56,    57,    58,    54,    55,    59,
    60,    61,    62,    63,    64,    56,    57,    58,   135,   nil,
   nil,    65,    66,    14,    15,    16,    17,    20,    23,   nil,
    25,    26,   nil,   102,    56,    57,    58,    54,    55,    59,
    60,    61,    62,    63,    64,    37,    38,    39,    40,    41,
    42,    65,    66,    56,    57,    58,    54,    55,    59,    60,
    61,    62,    63,    64,    56,    57,    58,   nil,   nil,   nil,
    65,    66,    56,    57,    58,    54,    55,    59,    60,    61,
    62,    63,    64,   nil,   nil,   nil,   nil,   nil,   nil,    65,
    66,    56,    57,    58,    54,    55,    59,    60,    61,    62,
    63,    64,   nil,   nil,   nil,   nil,   nil,   nil,    65,    66,
    56,    57,    58,    54,    55,    59,    60,    61,    62,    63,
    64,   nil,   nil,   nil,   nil,   nil,   nil,    65,    66,    56,
    57,    58,    54,    55,    59,    60,    61,    62,    63,    64,
   nil,   nil,   nil,   nil,   nil,   nil,    65,    66,    56,    57,
    58,    54,    55,    59,    60,    61,    62,    63,    64,   nil,
   nil,   nil,   nil,   nil,   nil,    65,    66,    56,    57,    58,
    54,    55,    59,    60,    61,    62,    63,    64,   nil,   nil,
   nil,   nil,   nil,   nil,    65,    66,    56,    57,    58,    54,
    55,    59,    60,    61,    62,    63,    64,   nil,   nil,   nil,
   nil,   nil,   nil,    65,    66,     8,     9,    12,   nil,   106,
   nil,    13,   nil,   nil,    14,    15,    16,    17,    20,    23,
   nil,    25,    26,    56,    57,    58,    54,    55,    59,    60,
    61,    62,    63,    64,   nil,     8,     9,    12,   nil,   118,
    65,    13,   nil,   nil,    14,    15,    16,    17,    20,    23,
   nil,    25,    26,     8,     9,    12,   119,   nil,   nil,    13,
   nil,   nil,    14,    15,    16,    17,    20,    23,   nil,    25,
    26,     8,     9,    12,    44,   nil,   nil,    13,   nil,   nil,
    14,    15,    16,    17,    20,    23,   nil,    25,    26,     8,
     9,    12,   nil,   133,   nil,    13,   nil,   nil,    14,    15,
    16,    17,    20,    23,   nil,    25,    26,     8,     9,    12,
   nil,   134,   nil,    13,   nil,   nil,    14,    15,    16,    17,
    20,    23,   nil,    25,    26,     8,     9,    12,   nil,   nil,
   nil,    13,   nil,   nil,    14,    15,    16,    17,    20,    23,
   nil,    25,    26,     8,     9,    12,   nil,   113,   nil,    13,
   nil,   nil,    14,    15,    16,    17,    20,    23,   116,    25,
    26,   nil,   nil,    14,    15,    16,    17,    20,    23,   nil,
    25,    26,    56,    57,    58,    54,    55,   -72,   -72,   -72,
   -72,   -72,   -72,    56,    57,    58,    54,    55,   -72,   -72,
   -72,   -72,   -72,   -72,    56,    57,    58,    54,    55,   -72,
   -72,   -72,   -72,   -72,   -72,    56,    57,    58,    54,    55,
   -72,   -72,   -72,   -72,   -72,   -72,    56,    57,    58,    54,
    55,   -72,   -72,   -72,   -72,   -72,   -72,    56,    57,    58,
    54,    55,    59,    60,    61,    62,    63,    64,    56,    57,
    58,    54,    55,   -72,   -72,   -72,   -72,   -72,   -72 ]

racc_action_check = [
    43,    43,    43,    43,    43,    43,    43,    43,    43,    43,
    43,    52,    79,   122,    86,   114,    85,    43,    43,    79,
   122,    43,    43,    43,    43,    81,    12,    43,    33,   125,
    43,    43,    43,    43,    43,    43,   125,    43,    43,   114,
    54,   114,   114,   114,   114,   114,   114,    34,   114,   114,
    12,    55,    12,    12,    12,    12,    12,    12,    80,    12,
    12,    24,    56,    76,    54,    80,    54,    54,    54,    54,
    54,    54,    22,    54,    54,    55,    57,    55,    55,    55,
    55,    55,    55,    21,    55,    55,    56,    58,    56,    56,
    56,    56,    56,    56,    82,    56,    56,    18,    64,   111,
    57,    82,    57,    57,    57,    57,    57,    57,   112,    57,
    57,    58,   110,    58,    58,    58,    58,    58,    58,    48,
    58,    58,    64,   108,    64,    64,    64,    64,    64,    64,
   115,    64,    64,    25,    63,   118,   110,    25,   110,   110,
   110,   110,   110,   110,    10,   110,   110,   108,    62,   108,
   108,   108,   108,   108,   108,    49,   108,   108,    63,    61,
    63,    63,    63,    63,    63,    63,    51,    63,    63,    23,
    60,     4,    62,    23,    62,    62,    62,    62,    62,    62,
     3,    62,    62,    61,    66,    61,    61,    61,    61,    61,
    61,     1,    61,    61,    60,    30,    60,    60,    60,    60,
    60,    60,   nil,    60,    60,   nil,    32,   nil,    66,   nil,
    66,    66,    66,    66,    66,    66,   nil,    66,    66,    30,
    65,    30,    30,    30,    30,    30,    30,   nil,    30,    30,
    32,    59,    32,    32,    32,    32,    32,    32,   nil,    32,
    32,   nil,    37,   nil,    65,   nil,    65,    65,    65,    65,
    65,    65,   nil,    65,    65,    59,    38,    59,    59,    59,
    59,    59,    59,   nil,    59,    59,    37,    39,    37,    37,
    37,    37,    37,    37,   nil,    37,    37,   nil,    40,   nil,
    38,   nil,    38,    38,    38,    38,    38,    38,   nil,    38,
    38,    39,    41,    39,    39,    39,    39,    39,    39,   nil,
    39,    39,    40,    42,    40,    40,    40,    40,    40,    40,
   nil,    40,    40,   nil,    46,   nil,    41,   nil,    41,    41,
    41,    41,    41,    41,   nil,    41,    41,    42,    47,    42,
    42,    42,    42,    42,    42,   nil,    42,    42,    46,     9,
    46,    46,    46,    46,    46,    46,   nil,    46,    46,    67,
    67,    67,    47,   nil,    47,    47,    47,    47,    47,    47,
   nil,    47,    47,     9,   nil,     9,     9,     9,     9,     9,
     9,   nil,     9,     9,    68,    68,    68,    68,    68,    68,
    68,    68,    68,    68,    68,    89,    89,    89,   132,   nil,
   nil,    68,    68,   132,   132,   132,   132,   132,   132,   nil,
   132,   132,   nil,    68,    73,    73,    73,    73,    73,    73,
    73,    73,    73,    73,    73,    11,    11,    11,    11,    11,
    11,    73,    73,   121,   121,   121,   121,   121,   121,   121,
   121,   121,   121,   121,    90,    90,    90,   nil,   nil,   nil,
   121,   121,    29,    29,    29,    29,    29,    29,    29,    29,
    29,    29,    29,   nil,   nil,   nil,   nil,   nil,   nil,    29,
    29,    78,    78,    78,    78,    78,    78,    78,    78,    78,
    78,    78,   nil,   nil,   nil,   nil,   nil,   nil,    78,    78,
    74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
    74,   nil,   nil,   nil,   nil,   nil,   nil,    74,    74,    69,
    69,    69,    69,    69,    69,    69,    69,    69,    69,    69,
   nil,   nil,   nil,   nil,   nil,   nil,    69,    69,    72,    72,
    72,    72,    72,    72,    72,    72,    72,    72,    72,   nil,
   nil,   nil,   nil,   nil,   nil,    72,    72,    71,    71,    71,
    71,    71,    71,    71,    71,    71,    71,    71,   nil,   nil,
   nil,   nil,   nil,   nil,    71,    71,    70,    70,    70,    70,
    70,    70,    70,    70,    70,    70,    70,   nil,   nil,   nil,
   nil,   nil,   nil,    70,    70,    77,    77,    77,   nil,    77,
   nil,    77,   nil,   nil,    77,    77,    77,    77,    77,    77,
   nil,    77,    77,   101,   101,   101,   101,   101,   101,   101,
   101,   101,   101,   101,   nil,   103,   103,   103,   nil,   103,
   101,   103,   nil,   nil,   103,   103,   103,   103,   103,   103,
   nil,   103,   103,   105,   105,   105,   105,   nil,   nil,   105,
   nil,   nil,   105,   105,   105,   105,   105,   105,   nil,   105,
   105,    13,    13,    13,    13,   nil,   nil,    13,   nil,   nil,
    13,    13,    13,    13,    13,    13,   nil,    13,    13,   128,
   128,   128,   nil,   128,   nil,   128,   nil,   nil,   128,   128,
   128,   128,   128,   128,   nil,   128,   128,   130,   130,   130,
   nil,   130,   nil,   130,   nil,   nil,   130,   130,   130,   130,
   130,   130,   nil,   130,   130,     2,     2,     2,   nil,   nil,
   nil,     2,   nil,   nil,     2,     2,     2,     2,     2,     2,
   nil,     2,     2,    84,    84,    84,   nil,    84,   nil,    84,
   nil,   nil,    84,    84,    84,    84,    84,    84,    88,    84,
    84,   nil,   nil,    88,    88,    88,    88,    88,    88,   nil,
    88,    88,    96,    96,    96,    96,    96,    96,    96,    96,
    96,    96,    96,    95,    95,    95,    95,    95,    95,    95,
    95,    95,    95,    95,    98,    98,    98,    98,    98,    98,
    98,    98,    98,    98,    98,    94,    94,    94,    94,    94,
    94,    94,    94,    94,    94,    94,    97,    97,    97,    97,
    97,    97,    97,    97,    97,    97,    97,   100,   100,   100,
   100,   100,   100,   100,   100,   100,   100,   100,    99,    99,
    99,    99,    99,    99,    99,    99,    99,    99,    99 ]

racc_action_pointer = [
   nil,   191,   672,   180,   149,   nil,   nil,   nil,   nil,   333,
   123,   402,    20,   618,   nil,   nil,   nil,   nil,    67,   nil,
   nil,    53,    51,   143,    40,   107,   nil,   nil,   nil,   440,
   189,   nil,   200,     7,    26,   nil,   nil,   236,   250,   261,
   272,   286,   297,    -2,   nil,   nil,   308,   322,    79,   115,
   nil,   126,   -29,   nil,    34,    45,    56,    70,    81,   225,
   164,   153,   142,   128,    92,   214,   178,   347,   372,   497,
   554,   535,   516,   402,   478,   nil,    35,   552,   459,   -19,
    27,    -5,    63,   nil,   690,   -14,   -17,   nil,   701,   383,
   432,   nil,   nil,   nil,   773,   751,   740,   784,   762,   806,
   795,   591,   nil,   582,   nil,   600,   nil,   nil,   117,   nil,
   106,    73,    68,   nil,     9,   104,   nil,   nil,   107,   nil,
   nil,   421,   -18,   nil,   nil,    -2,   nil,   nil,   636,   nil,
   654,   nil,   361,   nil,   nil,   nil ]

racc_action_default = [
    -2,   -72,    -1,   -72,    -3,    -5,    -6,    -7,    -8,   -72,
   -10,   -45,   -72,   -72,   -42,   -43,   -44,   -46,   -48,   -49,
   -50,   -51,   -72,   -72,   -72,   -72,   -71,   136,    -4,    -9,
   -72,   -38,   -72,   -40,   -41,   -45,   -47,   -72,   -72,   -72,
   -72,   -72,   -72,   -72,    -2,   -23,   -62,   -62,   -72,   -55,
    -2,   -72,   -67,   -69,   -72,   -72,   -72,   -72,   -72,   -72,
   -72,   -72,   -72,   -72,   -72,   -72,   -72,   -26,   -72,   -11,
   -12,   -13,   -14,   -15,   -16,    -2,   -19,   -72,   -63,   -72,
   -72,   -52,   -72,   -56,   -72,   -72,   -72,   -68,   -72,   -24,
   -25,   -27,   -28,   -29,   -30,   -31,   -32,   -33,   -34,   -35,
   -36,   -37,   -39,   -72,   -18,   -72,   -22,   -59,   -72,   -58,
   -62,   -72,   -72,   -54,   -62,   -72,   -66,   -70,   -19,    -2,
   -21,   -64,   -72,    -2,   -57,   -72,   -69,   -17,   -72,   -60,
   -72,   -61,   -72,   -20,   -53,   -65 ]

racc_goto_table = [
    11,    22,     2,    45,   117,    88,    24,   104,    82,    10,
    86,    11,    22,     1,   nil,    81,    83,    24,    85,    87,
    10,    79,    80,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    76,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    11,    22,   nil,   nil,   nil,    77,    24,   117,   127,
    10,   nil,    84,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    11,    22,   103,   132,   124,
   nil,    24,    11,    22,    10,   122,    11,    22,    24,   125,
   nil,    10,    24,   nil,   nil,   120,   nil,   nil,   nil,   nil,
   nil,    11,    22,    11,    22,   nil,   nil,    24,   nil,    24,
    10,   nil,    10,   nil,   nil,   nil,   nil,    29,   nil,   nil,
    43,   128,   nil,   nil,   nil,   130,    11,    22,    11,    22,
    11,    22,    24,   nil,    24,    10,    24,    10,    67,   nil,
    68,   nil,   nil,   nil,   nil,    69,    70,    71,    72,    73,
    74,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,   101,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   121 ]

racc_goto_check = [
     9,    13,     2,     3,     4,    20,    12,    10,    17,     8,
    19,     9,    13,     1,   nil,    16,    16,    12,    16,    16,
     8,    18,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     9,    13,   nil,   nil,   nil,     2,    12,     4,    10,
     8,   nil,     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     9,    13,     2,    20,    16,
   nil,    12,     9,    13,     8,    18,     9,    13,    12,    18,
   nil,     8,    12,   nil,   nil,     3,   nil,   nil,   nil,   nil,
   nil,     9,    13,     9,    13,   nil,   nil,    12,   nil,    12,
     8,   nil,     8,   nil,   nil,   nil,   nil,     7,   nil,   nil,
     7,     2,   nil,   nil,   nil,     2,     9,    13,     9,    13,
     9,    13,    12,   nil,    12,     8,    12,     8,     7,   nil,
     7,   nil,   nil,   nil,   nil,     7,     7,     7,     7,     7,
     7,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     7,     7,     7,     7,     7,     7,     7,     7,
     7,     7,     7,     7,     7,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     7 ]

racc_goto_pointer = [
   nil,    13,     2,   -10,   -84,   nil,   nil,   108,     7,    -2,
   -69,   nil,     4,    -1,   nil,   nil,   -33,   -41,   -25,   -42,
   -48 ]

racc_goto_default = [
   nil,   nil,   nil,     4,     5,     6,     7,    78,    36,    35,
   nil,    31,    33,    34,    18,    19,    21,   nil,   nil,   nil,
   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 42, :_reduce_none,
  0, 43, :_reduce_2,
  2, 43, :_reduce_3,
  3, 43, :_reduce_4,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_8,
  2, 44, :_reduce_9,
  1, 44, :_reduce_none,
  3, 45, :_reduce_11,
  3, 45, :_reduce_12,
  3, 45, :_reduce_13,
  3, 45, :_reduce_14,
  3, 45, :_reduce_15,
  3, 45, :_reduce_16,
  6, 46, :_reduce_17,
  4, 46, :_reduce_18,
  0, 51, :_reduce_none,
  4, 51, :_reduce_20,
  2, 51, :_reduce_21,
  4, 47, :_reduce_22,
  2, 47, :_reduce_23,
  3, 48, :_reduce_24,
  3, 48, :_reduce_25,
  2, 48, :_reduce_26,
  3, 48, :_reduce_27,
  3, 48, :_reduce_28,
  3, 48, :_reduce_29,
  3, 48, :_reduce_30,
  3, 48, :_reduce_31,
  3, 48, :_reduce_32,
  3, 48, :_reduce_33,
  3, 48, :_reduce_34,
  3, 48, :_reduce_35,
  3, 48, :_reduce_36,
  3, 48, :_reduce_37,
  1, 48, :_reduce_none,
  3, 52, :_reduce_39,
  1, 52, :_reduce_none,
  1, 52, :_reduce_none,
  1, 53, :_reduce_42,
  1, 53, :_reduce_43,
  1, 53, :_reduce_44,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_50,
  1, 50, :_reduce_51,
  3, 50, :_reduce_52,
  7, 55, :_reduce_53,
  4, 55, :_reduce_54,
  0, 58, :_reduce_55,
  1, 58, :_reduce_56,
  3, 58, :_reduce_57,
  4, 49, :_reduce_58,
  4, 49, :_reduce_59,
  6, 49, :_reduce_60,
  6, 49, :_reduce_61,
  0, 59, :_reduce_62,
  1, 59, :_reduce_63,
  3, 59, :_reduce_64,
  7, 56, :_reduce_65,
  4, 56, :_reduce_66,
  0, 60, :_reduce_67,
  1, 60, :_reduce_none,
  0, 61, :_reduce_69,
  2, 61, :_reduce_70,
  1, 57, :_reduce_71 ]

racc_reduce_n = 72

racc_shift_n = 136

racc_token_table = {
  false => 0,
  :error => 1,
  "*" => 2,
  "/" => 3,
  "%" => 4,
  "+" => 5,
  "-" => 6,
  "==" => 7,
  "!=" => 8,
  ">" => 9,
  ">=" => 10,
  "<" => 11,
  "<=" => 12,
  "=" => 13,
  "+=" => 14,
  "-=" => 15,
  "*=" => 16,
  "/=" => 17,
  "%=" => 18,
  "&&" => 19,
  "||" => 20,
  "." => 21,
  ";" => 22,
  :BREAK => 23,
  :RETURN => 24,
  :IF => 25,
  "{" => 26,
  "}" => 27,
  :ELSE => 28,
  :LOOP => 29,
  "(" => 30,
  ")" => 31,
  :NUMBER => 32,
  :STRING => 33,
  :BOOLEAN => 34,
  :instance => 35,
  :SELF => 36,
  :FUNCTION => 37,
  "," => 38,
  :CLASS => 39,
  :IDENTIFIER => 40 }

racc_nt_base = 41

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\"==\"",
  "\"!=\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"=\"",
  "\"+=\"",
  "\"-=\"",
  "\"*=\"",
  "\"/=\"",
  "\"%=\"",
  "\"&&\"",
  "\"||\"",
  "\".\"",
  "\";\"",
  "BREAK",
  "RETURN",
  "IF",
  "\"{\"",
  "\"}\"",
  "ELSE",
  "LOOP",
  "\"(\"",
  "\")\"",
  "NUMBER",
  "STRING",
  "BOOLEAN",
  "instance",
  "SELF",
  "FUNCTION",
  "\",\"",
  "CLASS",
  "IDENTIFIER",
  "$start",
  "program",
  "stmts",
  "stmt",
  "var_assign",
  "if_stmt",
  "loop_stmt",
  "expr",
  "func_call",
  "variable",
  "else_stmt",
  "primary",
  "lit",
  "object",
  "func_def",
  "class_def",
  "identifier",
  "params",
  "args",
  "expands",
  "var_assigns" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 14)
  def _reduce_2(val, _values, result)
    result = [:STMTS, []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 15)
  def _reduce_3(val, _values, result)
    result[1] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 16)
  def _reduce_4(val, _values, result)
    result[1] << val[1]
    result
  end
.,.,

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 21)
  def _reduce_8(val, _values, result)
    result = [:BREAK]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 22)
  def _reduce_9(val, _values, result)
    result = [:RETURN, val[1]]
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 25)
  def _reduce_11(val, _values, result)
    result = ['=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 26)
  def _reduce_12(val, _values, result)
    result = ['+=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 27)
  def _reduce_13(val, _values, result)
    result = ['-=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 28)
  def _reduce_14(val, _values, result)
    result = ['*=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 29)
  def _reduce_15(val, _values, result)
    result = ['/=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 30)
  def _reduce_16(val, _values, result)
    result = ['%=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 32)
  def _reduce_17(val, _values, result)
    result = [:IF, val[1], val[3], val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 33)
  def _reduce_18(val, _values, result)
    result = [:IF, val[1], val[2], val[3]]
    result
  end
.,.,

# reduce 19 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 36)
  def _reduce_20(val, _values, result)
    result = val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 37)
  def _reduce_21(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 39)
  def _reduce_22(val, _values, result)
    result = [:LOOP, val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 40)
  def _reduce_23(val, _values, result)
    result = [:LOOP, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 42)
  def _reduce_24(val, _values, result)
    result = ['+', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 43)
  def _reduce_25(val, _values, result)
    result = ['-', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 44)
  def _reduce_26(val, _values, result)
    result = ['-', [:INSTANCE, :NUMBER, {}, 0], val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 45)
  def _reduce_27(val, _values, result)
    result = ['*', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 46)
  def _reduce_28(val, _values, result)
    result = ['/', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 47)
  def _reduce_29(val, _values, result)
    result = ['%', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 49)
  def _reduce_30(val, _values, result)
    result = ['==', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 50)
  def _reduce_31(val, _values, result)
    result = ['!=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 51)
  def _reduce_32(val, _values, result)
    result = ['>', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 52)
  def _reduce_33(val, _values, result)
    result = ['>=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 53)
  def _reduce_34(val, _values, result)
    result = ['<', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 54)
  def _reduce_35(val, _values, result)
    result = ['<=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 56)
  def _reduce_36(val, _values, result)
    result = ['&&', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 57)
  def _reduce_37(val, _values, result)
    result = ['||', val[0], val[2]]
    result
  end
.,.,

# reduce 38 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 61)
  def _reduce_39(val, _values, result)
    result = val[1]
    result
  end
.,.,

# reduce 40 omitted

# reduce 41 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 65)
  def _reduce_42(val, _values, result)
    result = [:INSTANCE, :NUMBER, {}, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 66)
  def _reduce_43(val, _values, result)
    result = [:INSTANCE, :STRING, {}, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 67)
  def _reduce_44(val, _values, result)
    result = [:INSTANCE, :BOOLEAN, {}, val[0]]
    result
  end
.,.,

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 74)
  def _reduce_50(val, _values, result)
    result = [:SELF]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 76)
  def _reduce_51(val, _values, result)
    result = [:VARIABLE, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 77)
  def _reduce_52(val, _values, result)
    result = [:VARIABLE, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 79)
  def _reduce_53(val, _values, result)
    result = [:FUNCTION, val[2], val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 80)
  def _reduce_54(val, _values, result)
    result = [:FUNCTION, [], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 82)
  def _reduce_55(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 83)
  def _reduce_56(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 84)
  def _reduce_57(val, _values, result)
    result << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 86)
  def _reduce_58(val, _values, result)
    result = [:FUNC_CALL, nil, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 87)
  def _reduce_59(val, _values, result)
    result = [:FUNC_CALL, nil, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 88)
  def _reduce_60(val, _values, result)
    result = [:FUNC_CALL, val[0], val[2], val[4]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 89)
  def _reduce_61(val, _values, result)
    result = [:FUNC_CALL, val[0], val[2], val[4]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 91)
  def _reduce_62(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 92)
  def _reduce_63(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 93)
  def _reduce_64(val, _values, result)
    result << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 95)
  def _reduce_65(val, _values, result)
    result = [:CLASS, val[2], val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 96)
  def _reduce_66(val, _values, result)
    result = [:CLASS, nil, val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 98)
  def _reduce_67(val, _values, result)
    result = nil
    result
  end
.,.,

# reduce 68 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 101)
  def _reduce_69(val, _values, result)
    result = [:STMTS, []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 102)
  def _reduce_70(val, _values, result)
    result[1] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 104)
  def _reduce_71(val, _values, result)
    result = [:IDENTIFIER, val[0]]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class RadiusParser

if __FILE__ == $0
  parser = RadiusParser.new
  File.open("program.rlb", "r") do |f|
    res = parser.parse(f.read)
    puts ("Parse: #{res}")
  end
end
