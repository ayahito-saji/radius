#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'pp'
require 'strscan'

class RadiusParser < Racc::Parser

module_eval(<<'...end radius_parser.ry/module_eval...', 'radius_parser.ry', 135)

def parse(str)
  scanner = StringScanner.new(str)
  @q = []
  while !scanner.eos?
    scanner.scan(/[\s\n]+/)

    scanner.scan(/if/) ?                        @q << [:IF, "if"] :
    scanner.scan(/(elif|elsif)/) ?              @q << [:ELSEIF, "elseif"] :
    scanner.scan(/else/) ?                      @q << [:ELSE, "else"] :
    scanner.scan(/loop/) ?                      @q << [:LOOP, "loop"] :
    scanner.scan(/break/) ?                     @q << [:BREAK, "break"] :
    scanner.scan(/return/) ?                    @q << [:RETURN, "return"] :
    scanner.scan(/function/) ?                  @q << [:FUNCTION, "function"] :
    scanner.scan(/class/) ?                     @q << [:CLASS, "class"] :
    scanner.scan(/self/) ?                      @q << [:SELF, "self"] :
    scanner.scan(/true/) ?                      @q << [:BOOLEAN, true] :
    scanner.scan(/false/) ?                     @q << [:BOOLEAN, false] :
    scanner.scan(/private/) ?                   @q << [:PRIVATE, "private"] :
    scanner.scan(/public/) ?                    @q << [:PUBLIC, "pubic"] :
    scanner.scan(/const/) ?                     @q << [:CONST, "const"] :
    scanner.scan(/static/) ?                    @q << [:STATIC, "static"] :
    scanner.scan(/null/) ?                      @q << [:NULL, "null"] :
    scanner.scan(/new/) ?                       @q << [:NEW, "new"] :


    scanner.scan(/\".*?\"/) ?                   @q << [:STRING, scanner.matched[1..-2]] :
    scanner.scan(/[a-zA-Z_][a-zA-Z0-9_]*/) ?    @q << [:IDENTIFIER, scanner.matched.to_s] :
    scanner.scan(/([0-9]*\.[0-9]+)/) ?          @q << [:NUMBER, scanner.matched.to_f] :
    scanner.scan(/(0|[1-9][0-9]*)/) ?           @q << [:NUMBER, scanner.matched.to_i] :

    scanner.scan(/<-/) ?                        @q << ["=", "="] :

    scanner.scan(/\+=/) ?                       @q << ["+=", "+="] :
    scanner.scan(/-=/) ?                        @q << ["-=", "-="] :
    scanner.scan(/\*=/) ?                       @q << ["*=", "*="] :
    scanner.scan(/\/=/) ?                       @q << ["/=", "/="] :

    scanner.scan(/==/) ?                        @q << ["==", "=="] :
    scanner.scan(/!=/) ?                        @q << ["!=", "!="] :
    scanner.scan(/<>/) ?                        @q << ["<>", "<>"] :
    scanner.scan(/>=/) ?                        @q << [">=", ">="] :
    scanner.scan(/<=/) ?                        @q << ["<=", "<="] :
    scanner.scan(/>/) ?                         @q << [">", ">"] :
    scanner.scan(/</) ?                         @q << ["<", "<"] :

    scanner.scan(/\&\&/) ?                      @q << ["&&", "&&"] :
    scanner.scan(/\|\|/) ?                      @q << ["||", "||"] :
    scanner.scan(/#.*/) ?                       nil :
    scanner.scan(/\/\/.*/) ?                    nil :

    scanner.scan(/./) ?                         @q << [scanner.matched, scanner.matched] :
    (raise "scanner error")
  end
  puts ("Token: #{@q}")

  do_parse
end

def next_token
  @q.shift
end

...end radius_parser.ry/module_eval...
##### State transition tables begin ###

clist = [
'-1,108,111,20,76,121,78,149,19,148,135,124,125,3,109,75,109,77,109,136',
'38,97,112,113,20,9,10,12,30,19,100,101,13,29,151,17,18,138,38,22,-25',
'26,27,28,31,34,35,36,20,30,37,38,96,19,29,-24,65,64,57,62,22,40,26,27',
'28,31,34,35,36,20,105,37,38,30,19,39,-23,38,29,146,38,38,,,22,,26,27',
'28,31,34,35,36,20,30,37,38,,19,29,,,,,,22,,26,27,28,31,34,35,36,20,',
'37,38,30,19,,,,29,,,,,,22,,26,27,28,31,34,35,36,20,30,37,38,,19,29,',
',,,,22,,26,27,28,31,34,35,36,20,,37,38,30,19,,,,29,,,,,,22,,26,27,28',
'31,34,35,36,20,30,37,38,,19,29,,,,,,22,,26,27,28,31,34,35,36,20,,37',
'38,30,19,,,,29,,,,,,22,,26,27,28,31,34,35,36,20,30,37,38,,19,29,,,,',
',22,,26,27,28,31,34,35,36,20,,37,38,30,19,,,,29,,,,,,22,,26,27,28,31',
'34,35,36,20,30,37,38,,19,29,,,,,,22,,26,27,28,31,34,35,36,20,,37,38',
'30,19,,,,29,,,,,,22,,26,27,28,31,34,35,36,20,30,37,38,,19,29,,,,,,22',
',26,27,28,31,34,35,36,20,,37,38,30,19,,,,29,,,,,,22,,26,27,28,31,34',
'35,36,20,30,37,38,,19,29,,,,,,22,,26,27,28,31,34,35,36,20,,37,38,30',
'19,,,,29,,,,,,22,,26,27,28,31,34,35,36,20,30,37,38,,19,29,,,,,,22,,26',
'27,28,31,34,35,36,20,,37,38,30,19,,,,29,,,,,,22,,26,27,28,31,34,35,36',
'20,30,37,38,,19,29,,,,,,22,,26,27,28,31,34,35,36,20,,37,38,30,19,,,',
'29,,,,,,22,,26,27,28,31,34,35,36,20,30,37,38,,19,29,,,,,,22,,26,27,28',
'31,34,35,36,20,,37,38,30,19,,,,29,,,,,,22,,26,27,28,31,34,35,36,20,30',
'37,38,,19,29,,,,,,22,,26,27,28,31,34,35,36,20,,37,38,30,19,,,,29,,,',
',,22,,26,27,28,31,34,35,36,20,30,37,38,,19,29,,,,,,22,,26,27,28,31,34',
'35,36,20,,37,38,30,19,,,,29,,,,,,22,,26,27,28,31,34,35,36,,30,37,38',
'20,,29,,,19,,,22,,26,27,28,31,34,35,36,,97,37,38,97,9,10,12,30,128,',
'97,13,29,,17,18,,,22,,26,27,28,31,34,35,36,20,,37,38,96,19,,96,,,57',
',,57,96,,,,,,57,20,,,,30,19,,,,29,,,,,,22,,26,27,28,31,34,35,36,20,30',
'37,38,,19,29,,,,,,22,,26,27,28,31,34,35,36,20,,37,38,30,19,,,,29,,,',
',,22,,26,27,28,31,34,35,36,20,30,37,38,,19,29,,,,,,22,,26,27,28,31,34',
'35,36,,,37,38,30,,20,,,29,,19,,,,22,,26,27,28,31,34,35,36,,,37,38,9',
'10,12,30,137,,,13,29,,17,18,,,22,,26,27,28,31,34,35,36,20,,37,38,,19',
',,,,,,,,,97,,45,46,47,,,,,20,30,139,,,19,29,,17,18,,,22,,26,27,28,31',
'34,35,36,,96,37,38,30,,20,57,,29,,19,,,,22,,26,27,28,31,34,35,36,,,37',
'38,9,10,12,30,145,,,13,29,,17,18,,,22,,26,27,28,31,34,35,36,20,,37,38',
',19,,,,,,,,,,97,,45,46,47,,,9,10,12,30,153,,,13,29,,17,18,,,22,,26,27',
'28,31,34,35,36,20,96,37,38,,19,,57,,,,,,,,,,,,,,20,,,,30,19,,,,29,,',
',,,22,,26,27,28,31,34,35,36,,30,37,38,20,,29,,,19,,,22,,26,27,28,31',
'34,35,36,,,37,38,,9,10,12,30,160,,,13,29,,17,18,,,22,,26,27,28,31,34',
'35,36,20,,37,38,,19,,,,,,,,,,97,,45,46,47,,,9,10,12,30,161,,,13,29,',
'17,18,,,22,,26,27,28,31,34,35,36,20,96,37,38,,19,,57,,,,,,,,,,,,,,,',
',,30,162,,,20,29,,17,18,19,,22,,26,27,28,31,34,35,36,,,37,38,,,9,10',
'12,30,163,,,13,29,,17,18,,,22,,26,27,28,31,34,35,36,,,37,38,97,,45,46',
'47,43,44,48,49,51,52,53,54,50,55,56,,,,,,,,,,,,,,,,96,,,,,,57,,,,,,',
',97,147,45,46,47,43,44,48,49,51,52,53,54,50,55,56,,,,,,,,,,,,,,,,96',
',,,,,57,,,,,,,,97,110,45,46,47,43,44,48,49,51,52,53,54,50,55,56,,,,',
',,,,,,,,,,,96,,,,,,57,107,97,,45,46,47,43,44,48,49,51,52,53,54,50,55',
'56,97,,45,46,47,43,44,-86,-86,-86,-86,-86,-86,-86,,96,120,,,,,57,,,',
',,,,,,96,,,,,97,57,45,46,47,43,44,-86,-86,-86,-86,-86,-86,-86,97,,45',
'46,47,43,44,-86,-86,-86,-86,-86,-86,-86,,,,96,,,,,,57,,,,,,,,96,,,,',
'97,57,45,46,47,43,44,-86,-86,-86,-86,-86,-86,-86,97,,45,46,47,43,44',
'-86,-86,-86,-86,-86,-86,-86,,,,96,,,,,,57,,,,,,,,96,,,,,97,57,45,46',
'47,43,44,-86,-86,-86,-86,-86,-86,-86,97,,45,46,47,43,44,48,49,51,52',
'53,54,50,55,56,,96,,,,,,57,,,,,,,,96,,,,,97,57,45,46,47,43,44,48,49',
'51,52,53,54,50,55,56,,,,,,,,,,,102,,,,,96,,,,,41,57,45,46,47,43,44,48',
'49,51,52,53,54,50,55,56,97,,45,46,47,43,44,-86,-86,-86,-86,-86,-86,-86',
',42,,,,,,57,,,,,,,,,,96,,,,,97,57,45,46,47,43,44,48,49,51,52,53,54,50',
'97,,45,46,47,43,44,48,49,51,52,53,54,50,55,56,,96,,,,,,57,,,,,,,,96',
',,,,97,57,45,46,47,43,44,48,49,51,52,53,54,50,55,56,,,,,,,,,,,144,,',
',,96,,,,,97,57,45,46,47,43,44,48,49,51,52,53,54,50,55,56,,,,,,,,,,,',
',,,,96,,,,,97,57,45,46,47,43,44,48,49,51,52,53,54,50,55,56,97,,45,46',
'47,43,44,48,49,51,52,53,54,50,55,96,141,,,,,57,,,,,,,,,,96,,,,,97,57',
'45,46,47,43,44,48,49,51,52,53,54,50,55,56,,,,,,,,,,,152,,,,,96,,,,,41',
'57,45,46,47,43,44,48,49,51,52,53,54,50,55,56,,,,,,,,,,,,,,,,42,,,,,97',
'57,45,46,47,43,44,48,49,51,52,53,54,50,55,56,,,,,,,,,,,,,,,,96,,,,,97',
'57,45,46,47,43,44,48,49,51,52,53,54,50,55,56,,,,,,,,,,,,,,,,96,,,,,97',
'57,45,46,47,43,44,48,49,51,52,53,54,50,55,56,,,,,,,,,,,,,,,,96,,,,,97',
'57,45,46,47,43,44,48,49,51,52,53,54,50,55,56,,,,,,,,,,,,,,,,96,,,,,97',
'57,45,46,47,43,44,48,49,51,52,53,54,50,55,56,,,,,,,,,,,,,,,,96,,,,,',
'57' ]
        racc_action_table = arr = ::Array.new(2049, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'2,70,72,2,36,95,37,135,2,134,114,100,100,1,95,36,70,37,134,114,136,67',
'72,74,48,2,2,2,2,48,60,60,2,2,138,2,2,117,41,2,120,2,2,2,2,2,2,2,10',
'48,2,2,67,10,48,16,15,14,67,13,48,4,48,48,48,48,48,48,48,12,63,48,48',
'10,12,3,79,77,10,129,97,75,,,10,,10,10,10,10,10,10,10,19,12,10,10,,19',
'12,,,,,,12,,12,12,12,12,12,12,12,20,,12,12,19,20,,,,19,,,,,,19,,19,19',
'19,19,19,19,19,22,20,19,19,,22,20,,,,,,20,,20,20,20,20,20,20,20,29,',
'20,20,22,29,,,,22,,,,,,22,,22,22,22,22,22,22,22,30,29,22,22,,30,29,',
',,,,29,,29,29,29,29,29,29,29,35,,29,29,30,35,,,,30,,,,,,30,,30,30,30',
'30,30,30,30,42,35,30,30,,42,35,,,,,,35,,35,35,35,35,35,35,35,43,,35',
'35,42,43,,,,42,,,,,,42,,42,42,42,42,42,42,42,44,43,42,42,,44,43,,,,',
',43,,43,43,43,43,43,43,43,45,,43,43,44,45,,,,44,,,,,,44,,44,44,44,44',
'44,44,44,46,45,44,44,,46,45,,,,,,45,,45,45,45,45,45,45,45,47,,45,45',
'46,47,,,,46,,,,,,46,,46,46,46,46,46,46,46,49,47,46,46,,49,47,,,,,,47',
',47,47,47,47,47,47,47,50,,47,47,49,50,,,,49,,,,,,49,,49,49,49,49,49',
'49,49,51,50,49,49,,51,50,,,,,,50,,50,50,50,50,50,50,50,52,,50,50,51',
'52,,,,51,,,,,,51,,51,51,51,51,51,51,51,53,52,51,51,,53,52,,,,,,52,,52',
'52,52,52,52,52,52,54,,52,52,53,54,,,,53,,,,,,53,,53,53,53,53,53,53,53',
'55,54,53,53,,55,54,,,,,,54,,54,54,54,54,54,54,54,56,,54,54,55,56,,,',
'55,,,,,,55,,55,55,55,55,55,55,55,57,56,55,55,,57,56,,,,,,56,,56,56,56',
'56,56,56,56,65,,56,56,57,65,,,,57,,,,,,57,,57,57,57,57,57,57,57,96,65',
'57,57,,96,65,,,,,,65,,65,65,65,65,65,65,65,101,,65,65,96,101,,,,96,',
',,,,96,,96,96,96,96,96,96,96,,101,96,96,103,,101,,,103,,,101,,101,101',
'101,101,101,101,101,,83,101,101,84,103,103,103,103,103,,85,103,103,',
'103,103,,,103,,103,103,103,103,103,103,103,104,,103,103,83,104,,84,',
',83,,,84,85,,,,,,85,109,,,,104,109,,,,104,,,,,,104,,104,104,104,104',
'104,104,104,110,109,104,104,,110,109,,,,,,109,,109,109,109,109,109,109',
'109,112,,109,109,110,112,,,,110,,,,,,110,,110,110,110,110,110,110,110',
'113,112,110,110,,113,112,,,,,,112,,112,112,112,112,112,112,112,,,112',
'112,113,,116,,,113,,116,,,,113,,113,113,113,113,113,113,113,,,113,113',
'116,116,116,116,116,,,116,116,,116,116,,,116,,116,116,116,116,116,116',
'116,119,,116,116,,119,,,,,,,,,,66,,66,66,66,,,,,124,119,119,,,124,119',
',119,119,,,119,,119,119,119,119,119,119,119,,66,119,119,124,,127,66',
',124,,127,,,,124,,124,124,124,124,124,124,124,,,124,124,127,127,127',
'127,127,,,127,127,,127,127,,,127,,127,127,127,127,127,127,127,143,,127',
'127,,143,,,,,,,,,,81,,81,81,81,,,143,143,143,143,143,,,143,143,,143',
'143,,,143,,143,143,143,143,143,143,143,146,81,143,143,,146,,81,,,,,',
',,,,,,,,147,,,,146,147,,,,146,,,,,,146,,146,146,146,146,146,146,146',
',147,146,146,154,,147,,,154,,,147,,147,147,147,147,147,147,147,,,147',
'147,,154,154,154,154,154,,,154,154,,154,154,,,154,,154,154,154,154,154',
'154,154,157,,154,154,,157,,,,,,,,,,82,,82,82,82,,,157,157,157,157,157',
',,157,157,,157,157,,,157,,157,157,157,157,157,157,157,158,82,157,157',
',158,,82,,,,,,,,,,,,,,,,,,158,158,,,159,158,,158,158,159,,158,,158,158',
'158,158,158,158,158,,,158,158,,,159,159,159,159,159,,,159,159,,159,159',
',,159,,159,159,159,159,159,159,159,,,159,159,133,,133,133,133,133,133',
'133,133,133,133,133,133,133,133,133,,,,,,,,,,,,,,,,133,,,,,,133,,,,',
',,,71,133,71,71,71,71,71,71,71,71,71,71,71,71,71,71,,,,,,,,,,,,,,,,71',
',,,,,71,,,,,,,,68,71,68,68,68,68,68,68,68,68,68,68,68,68,68,68,,,,,',
',,,,,,,,,,68,,,,,,68,68,80,,80,80,80,80,80,80,80,80,80,80,80,80,80,80',
'86,,86,86,86,86,86,86,86,86,86,86,86,86,,80,80,,,,,80,,,,,,,,,,86,,',
',,87,86,87,87,87,87,87,87,87,87,87,87,87,87,88,,88,88,88,88,88,88,88',
'88,88,88,88,88,,,,87,,,,,,87,,,,,,,,88,,,,,89,88,89,89,89,89,89,89,89',
'89,89,89,89,89,90,,90,90,90,90,90,90,90,90,90,90,90,90,,,,89,,,,,,89',
',,,,,,,90,,,,,91,90,91,91,91,91,91,91,91,91,91,91,91,91,156,,156,156',
'156,156,156,156,156,156,156,156,156,156,156,156,,91,,,,,,91,,,,,,,,156',
',,,,61,156,61,61,61,61,61,61,61,61,61,61,61,61,61,61,,,,,,,,,,,61,,',
',,61,,,,,5,61,5,5,5,5,5,5,5,5,5,5,5,5,5,5,92,,92,92,92,92,92,92,92,92',
'92,92,92,92,,5,,,,,,5,,,,,,,,,,92,,,,,93,92,93,93,93,93,93,93,93,93',
'93,93,93,93,58,,58,58,58,58,58,58,58,58,58,58,58,58,58,58,,93,,,,,,93',
',,,,,,,58,,,,,126,58,126,126,126,126,126,126,126,126,126,126,126,126',
'126,126,,,,,,,,,,,126,,,,,126,,,,,155,126,155,155,155,155,155,155,155',
'155,155,155,155,155,155,155,,,,,,,,,,,,,,,,155,,,,,122,155,122,122,122',
'122,122,122,122,122,122,122,122,122,122,122,94,,94,94,94,94,94,94,94',
'94,94,94,94,94,94,122,122,,,,,122,,,,,,,,,,94,,,,,142,94,142,142,142',
'142,142,142,142,142,142,142,142,142,142,142,,,,,,,,,,,142,,,,,142,,',
',,130,142,130,130,130,130,130,130,130,130,130,130,130,130,130,130,,',
',,,,,,,,,,,,,130,,,,,73,130,73,73,73,73,73,73,73,73,73,73,73,73,73,73',
',,,,,,,,,,,,,,,73,,,,,69,73,69,69,69,69,69,69,69,69,69,69,69,69,69,69',
',,,,,,,,,,,,,,,69,,,,,131,69,131,131,131,131,131,131,131,131,131,131',
'131,131,131,131,,,,,,,,,,,,,,,,131,,,,,106,131,106,106,106,106,106,106',
'106,106,106,106,106,106,106,106,,,,,,,,,,,,,,,,106,,,,,132,106,132,132',
'132,132,132,132,132,132,132,132,132,132,132,132,,,,,,,,,,,,,,,,132,',
',,,,132' ]
        racc_action_check = arr = ::Array.new(2049, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
   nil,    13,     0,    75,    37,  1567,   nil,   nil,   nil,   nil,
    45,   nil,    66,    31,    20,    38,    37,   nil,   nil,    90,
   111,   nil,   135,   nil,   nil,   nil,   nil,   nil,   nil,   156,
   180,   nil,   nil,   nil,   nil,   201,   -24,   -22,   nil,   nil,
   nil,   -13,   225,   246,   270,   291,   315,   336,    21,   360,
   381,   405,   426,   450,   471,   495,   516,   540,  1633,   nil,
     0,  1531,   nil,    32,   nil,   561,   857,    19,  1290,  1901,
   -33,  1245,   -27,  1865,   -16,    30,   nil,    26,   nil,    58,
  1329,   953,  1092,   653,   656,   663,  1345,  1381,  1395,  1431,
  1445,  1481,  1583,  1619,  1757,   -35,   585,    29,   nil,   nil,
   -16,   606,   nil,   634,   679,   nil,  1973,   nil,   nil,   700,
   724,   nil,   745,   769,   -30,   nil,   796,    -3,   nil,   841,
    22,   nil,  1741,   nil,   865,   nil,  1669,   892,   nil,    61,
  1829,  1937,  2009,  1200,   -31,   -21,   -31,   nil,     6,   nil,
   nil,   nil,  1793,   937,   nil,   nil,   982,  1003,   nil,   nil,
   nil,   nil,   nil,   nil,  1031,  1705,  1495,  1076,  1121,  1150,
   nil,   nil,   nil,   nil ]

racc_action_default = [
    -2,   -86,   -26,   -86,    -3,    -5,    -6,    -7,    -8,    -9,
   -10,   -14,   -86,   -86,   -29,   -86,   -53,   -27,   -28,   -86,
   -86,   -51,   -86,   -55,   -56,   -57,   -58,   -59,   -60,   -76,
   -70,   -63,   -64,   -65,   -66,   -86,   -86,   -86,   -85,   164,
    -4,   -86,   -86,   -86,   -86,   -86,   -86,   -86,   -86,   -86,
   -86,   -86,   -86,   -86,   -86,   -86,   -86,   -76,   -11,   -53,
   -18,   -86,    -2,   -31,   -30,   -86,   -35,   -50,   -86,   -77,
   -86,   -86,   -86,   -86,   -57,   -73,    -2,   -81,   -83,   -52,
   -86,   -33,   -34,   -36,   -37,   -38,   -39,   -40,   -41,   -42,
   -43,   -44,   -45,   -46,   -47,   -86,   -86,   -86,   -12,   -15,
   -86,   -86,    -2,   -26,   -86,   -32,   -22,   -54,   -61,   -86,
   -86,   -62,   -86,   -76,   -86,   -74,   -26,   -86,   -82,   -26,
   -49,   -48,   -86,   -52,   -86,    -2,   -86,   -26,   -20,   -86,
   -86,   -78,   -71,   -86,   -86,   -86,   -86,   -69,   -86,   -80,
   -84,   -49,   -86,   -26,    -2,   -13,   -86,   -86,   -67,    -2,
   -75,   -83,    -2,   -19,   -26,   -21,   -72,   -26,   -26,   -26,
   -17,   -68,   -79,   -16 ]

racc_goto_table = [
    16,     2,    70,   119,   140,   129,    74,    72,   114,   117,
   104,    60,    98,    99,    63,     1,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    95,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    79,
   nil,   nil,   nil,   140,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   103,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   115,   nil,   118,   158,   116,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   134,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   123,   nil,   nil,   nil,   nil,
   nil,    16,    16,   127,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    16,   nil,   nil,    16,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16,   143,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   150,   nil,   nil,   nil,   nil,   nil,
   nil,    16,   nil,   nil,   nil,   154,   nil,   nil,   nil,    58,
   157,    61,    16,   159,   nil,    16,    16,    16,    66,    67,
   nil,    68,   nil,   nil,   nil,   nil,   nil,   nil,    69,    71,
   nil,   nil,   nil,   nil,    73,   nil,   nil,   nil,   nil,   nil,
   nil,    80,    81,    82,    83,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    69,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   106,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   122,   nil,   nil,   nil,   nil,
   126,   nil,   nil,   130,   nil,   nil,   nil,   nil,   131,   132,
   nil,   133,    69,   nil,   nil,   nil,   nil,   nil,   130,   nil,
   nil,   nil,   nil,   142,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   155,   156,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   130 ]

racc_goto_check = [
    16,     2,    17,    27,     5,    15,    19,    22,    25,    26,
    14,     9,    10,    11,    13,     1,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    17,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,
   nil,   nil,   nil,     5,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    16,   nil,    16,    27,     2,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    17,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,
   nil,    16,    16,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    16,   nil,   nil,    16,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16,     2,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,
   nil,    16,   nil,   nil,   nil,     2,   nil,   nil,   nil,     4,
     2,     4,    16,     2,   nil,    16,    16,    16,     4,     4,
   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,     4,     4,
   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,
   nil,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,
     4,   nil,   nil,     4,   nil,   nil,   nil,   nil,     4,     4,
   nil,     4,     4,   nil,   nil,   nil,   nil,   nil,     4,   nil,
   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     4,     4,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,    15,     1,   nil,   139,  -115,   nil,   nil,   nil,     0,
   -48,   -47,   nil,     0,   -53,   -99,    -2,   -27,   nil,   -29,
   nil,   nil,   -23,   nil,   nil,   -67,   -68,   -75 ]

racc_goto_default = [
   nil,   nil,   nil,     4,     5,     6,     7,     8,    11,   nil,
   nil,   nil,    14,   nil,   nil,    15,    59,   nil,    21,    25,
    23,    24,   nil,    32,    33,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 53, :_reduce_none,
  0, 54, :_reduce_2,
  2, 54, :_reduce_3,
  3, 54, :_reduce_4,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_9,
  1, 55, :_reduce_10,
  2, 55, :_reduce_11,
  3, 58, :_reduce_12,
  5, 60, :_reduce_13,
  0, 61, :_reduce_14,
  2, 61, :_reduce_15,
  6, 63, :_reduce_16,
  5, 63, :_reduce_17,
  0, 62, :_reduce_none,
  4, 62, :_reduce_19,
  4, 59, :_reduce_20,
  6, 57, :_reduce_21,
  3, 57, :_reduce_22,
  3, 67, :_reduce_23,
  1, 67, :_reduce_24,
  4, 67, :_reduce_25,
  0, 64, :_reduce_26,
  1, 64, :_reduce_27,
  1, 64, :_reduce_28,
  0, 65, :_reduce_29,
  1, 65, :_reduce_30,
  0, 66, :_reduce_31,
  1, 66, :_reduce_32,
  3, 56, :_reduce_33,
  3, 56, :_reduce_34,
  2, 56, :_reduce_35,
  3, 56, :_reduce_36,
  3, 56, :_reduce_37,
  3, 56, :_reduce_38,
  3, 56, :_reduce_39,
  3, 56, :_reduce_40,
  3, 56, :_reduce_41,
  3, 56, :_reduce_42,
  3, 56, :_reduce_43,
  3, 56, :_reduce_44,
  3, 56, :_reduce_45,
  3, 56, :_reduce_46,
  3, 56, :_reduce_47,
  4, 56, :_reduce_48,
  4, 56, :_reduce_49,
  2, 56, :_reduce_50,
  1, 56, :_reduce_none,
  3, 71, :_reduce_52,
  1, 71, :_reduce_53,
  3, 70, :_reduce_54,
  1, 70, :_reduce_none,
  1, 70, :_reduce_none,
  1, 70, :_reduce_none,
  1, 72, :_reduce_58,
  1, 72, :_reduce_59,
  1, 72, :_reduce_60,
  3, 72, :_reduce_61,
  3, 72, :_reduce_62,
  1, 72, :_reduce_63,
  1, 73, :_reduce_none,
  1, 73, :_reduce_none,
  1, 73, :_reduce_66,
  5, 73, :_reduce_67,
  7, 75, :_reduce_68,
  4, 75, :_reduce_69,
  0, 74, :_reduce_70,
  3, 74, :_reduce_71,
  5, 74, :_reduce_72,
  0, 77, :_reduce_73,
  1, 77, :_reduce_74,
  3, 77, :_reduce_75,
  0, 69, :_reduce_76,
  1, 69, :_reduce_77,
  3, 69, :_reduce_78,
  7, 76, :_reduce_79,
  4, 76, :_reduce_80,
  0, 78, :_reduce_81,
  1, 78, :_reduce_82,
  0, 79, :_reduce_83,
  2, 79, :_reduce_84,
  1, 68, :_reduce_85 ]

racc_reduce_n = 86

racc_shift_n = 164

racc_token_table = {
  false => 0,
  :error => 1,
  "." => 2,
  "!" => 3,
  "*" => 4,
  "/" => 5,
  "%" => 6,
  "+" => 7,
  "-" => 8,
  "==" => 9,
  "!=" => 10,
  ">" => 11,
  ">=" => 12,
  "<" => 13,
  "<=" => 14,
  "<>" => 15,
  "&&" => 16,
  "||" => 17,
  "=" => 18,
  "+=" => 19,
  "-=" => 20,
  "*=" => 21,
  "/=" => 22,
  "%=" => 23,
  ";" => 24,
  :BREAK => 25,
  :RETURN => 26,
  :IF => 27,
  "{" => 28,
  "}" => 29,
  :ELSE => 30,
  :ELSEIF => 31,
  :LOOP => 32,
  "[" => 33,
  "]" => 34,
  :PRIVATE => 35,
  :PUBLIC => 36,
  :STATIC => 37,
  :CONST => 38,
  "(" => 39,
  ")" => 40,
  :NUMBER => 41,
  :STRING => 42,
  :BOOLEAN => 43,
  :NULL => 44,
  :SELF => 45,
  :NEW => 46,
  :FUNCTION => 47,
  ":" => 48,
  "," => 49,
  :CLASS => 50,
  :IDENTIFIER => 51 }

racc_nt_base = 52

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\"==\"",
  "\"!=\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"<>\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\"+=\"",
  "\"-=\"",
  "\"*=\"",
  "\"/=\"",
  "\"%=\"",
  "\";\"",
  "BREAK",
  "RETURN",
  "IF",
  "\"{\"",
  "\"}\"",
  "ELSE",
  "ELSEIF",
  "LOOP",
  "\"[\"",
  "\"]\"",
  "PRIVATE",
  "PUBLIC",
  "STATIC",
  "CONST",
  "\"(\"",
  "\")\"",
  "NUMBER",
  "STRING",
  "BOOLEAN",
  "NULL",
  "SELF",
  "NEW",
  "FUNCTION",
  "\":\"",
  "\",\"",
  "CLASS",
  "IDENTIFIER",
  "$start",
  "program",
  "statements",
  "statement",
  "expr",
  "var_assign",
  "if_els_stmt",
  "loop_stmt",
  "if_stmt",
  "elif_stmts",
  "els_stmt",
  "elif_stmt",
  "access_md",
  "static_md",
  "const_md",
  "var_def",
  "identifier",
  "args",
  "primary",
  "variable",
  "lit",
  "object",
  "hash",
  "func_def",
  "class_def",
  "params",
  "expands",
  "var_assigns" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 15)
  def _reduce_2(val, _values, result)
    result = [:STATEMENTS, []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 16)
  def _reduce_3(val, _values, result)
    result[1] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 17)
  def _reduce_4(val, _values, result)
    result[1] << val[1]
    result
  end
.,.,

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 23)
  def _reduce_9(val, _values, result)
    result = [:BREAK]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 24)
  def _reduce_10(val, _values, result)
    result = [:RETURN, [:INSTANCE, :NULL, nil]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 25)
  def _reduce_11(val, _values, result)
    result = [:RETURN, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 27)
  def _reduce_12(val, _values, result)
    result = [:IF] + [([val[0]] + val[1] + [val[2]])]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 29)
  def _reduce_13(val, _values, result)
    result = [val[1], val[3]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 31)
  def _reduce_14(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 32)
  def _reduce_15(val, _values, result)
    result << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 33)
  def _reduce_16(val, _values, result)
    result = [val[2], val[4]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 34)
  def _reduce_17(val, _values, result)
    result = [val[1], val[3]]
    result
  end
.,.,

# reduce 18 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 37)
  def _reduce_19(val, _values, result)
    result = [[:INSTANCE, :BOOLEAN, nil, true], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 39)
  def _reduce_20(val, _values, result)
    result = [:LOOP, val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 41)
  def _reduce_21(val, _values, result)
    result = ['=', val[0], val[1], val[2], val[3], val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 42)
  def _reduce_22(val, _values, result)
    result = ['=', nil, nil, nil, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 44)
  def _reduce_23(val, _values, result)
    result = [:VARIABLE, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 45)
  def _reduce_24(val, _values, result)
    result = [:VARIABLE, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 46)
  def _reduce_25(val, _values, result)
    result = [:INDEX, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 48)
  def _reduce_26(val, _values, result)
    result = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 49)
  def _reduce_27(val, _values, result)
    result = :PRIVATE
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 50)
  def _reduce_28(val, _values, result)
    result = :PUBLIC
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 52)
  def _reduce_29(val, _values, result)
    result = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 53)
  def _reduce_30(val, _values, result)
    result = :STATIC
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 55)
  def _reduce_31(val, _values, result)
    result = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 56)
  def _reduce_32(val, _values, result)
    result = :CONSTANT
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 58)
  def _reduce_33(val, _values, result)
    result = ['+', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 59)
  def _reduce_34(val, _values, result)
    result = ['-', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 60)
  def _reduce_35(val, _values, result)
    result = ['-', [:INSTANCE, :NUMBER, nil, 0], val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 61)
  def _reduce_36(val, _values, result)
    result = ['*', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 62)
  def _reduce_37(val, _values, result)
    result = ['/', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 63)
  def _reduce_38(val, _values, result)
    result = ['%', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 65)
  def _reduce_39(val, _values, result)
    result = ['==', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 66)
  def _reduce_40(val, _values, result)
    result = ['!=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 67)
  def _reduce_41(val, _values, result)
    result = ['!=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 68)
  def _reduce_42(val, _values, result)
    result = ['>', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 69)
  def _reduce_43(val, _values, result)
    result = ['>=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 70)
  def _reduce_44(val, _values, result)
    result = ['<', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 71)
  def _reduce_45(val, _values, result)
    result = ['<=', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 73)
  def _reduce_46(val, _values, result)
    result = ['&&', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 74)
  def _reduce_47(val, _values, result)
    result = ['||', val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 75)
  def _reduce_48(val, _values, result)
    result = [:FUNC_CALL, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 76)
  def _reduce_49(val, _values, result)
    result = [:INDEX, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 78)
  def _reduce_50(val, _values, result)
    result = ['!', val[1]]
    result
  end
.,.,

# reduce 51 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 82)
  def _reduce_52(val, _values, result)
    result = [:VARIABLE, val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 83)
  def _reduce_53(val, _values, result)
    result = [:VARIABLE, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 85)
  def _reduce_54(val, _values, result)
    result = val[1]
    result
  end
.,.,

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 90)
  def _reduce_58(val, _values, result)
    result = [:INSTANCE, :NUMBER, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 91)
  def _reduce_59(val, _values, result)
    result = [:INSTANCE, :STRING, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 92)
  def _reduce_60(val, _values, result)
    result = [:INSTANCE, :BOOLEAN, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 93)
  def _reduce_61(val, _values, result)
    result = [:LIST_NEW, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 94)
  def _reduce_62(val, _values, result)
    result = [:HASH_NEW, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 95)
  def _reduce_63(val, _values, result)
    result = [:INSTANCE, :NULL, nil]
    result
  end
.,.,

# reduce 64 omitted

# reduce 65 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 99)
  def _reduce_66(val, _values, result)
    result = [:SELF]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 100)
  def _reduce_67(val, _values, result)
    result = [:NEW, val[1], val[3]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 102)
  def _reduce_68(val, _values, result)
    result = [:FUNCTION, val[2], val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 103)
  def _reduce_69(val, _values, result)
    result = [:FUNCTION, [], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 105)
  def _reduce_70(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 106)
  def _reduce_71(val, _values, result)
    result = [[val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 107)
  def _reduce_72(val, _values, result)
    result << [val[2], val[4]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 109)
  def _reduce_73(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 110)
  def _reduce_74(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 111)
  def _reduce_75(val, _values, result)
    result << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 113)
  def _reduce_76(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 114)
  def _reduce_77(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 115)
  def _reduce_78(val, _values, result)
    result << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 117)
  def _reduce_79(val, _values, result)
    result = [:CLASS_NEW, val[2], val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 118)
  def _reduce_80(val, _values, result)
    result = [:CLASS_NEW, nil, val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 120)
  def _reduce_81(val, _values, result)
    result = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 121)
  def _reduce_82(val, _values, result)
    result = [:VARIABLE, nil, val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 123)
  def _reduce_83(val, _values, result)
    result = [:STATEMENTS, []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 124)
  def _reduce_84(val, _values, result)
    result[1] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 126)
  def _reduce_85(val, _values, result)
    result = [:IDENTIFIER, val[0]]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class RadiusParser

if __FILE__ == $0
  parser = RadiusParser.new
  File.open("program.rlb", "r") do |f|
    res = parser.parse(f.read.chomp)
    p (res)
  end
end
