state 5 contains 2 shift/reduce conflicts
state 10 contains 13 shift/reduce conflicts
state 14 contains 1 shift/reduce conflicts
state 27 contains 1 shift/reduce conflicts
state 51 contains 2 shift/reduce conflicts
state 52 contains 1 shift/reduce conflicts
state 57 contains 1 shift/reduce conflicts
state 58 contains 1 shift/reduce conflicts
state 69 contains 1 shift/reduce conflicts
state 71 contains 1 shift/reduce conflicts
state 72 contains 1 shift/reduce conflicts
state 73 contains 1 shift/reduce conflicts
state 74 contains 1 shift/reduce conflicts
state 75 contains 1 shift/reduce conflicts
state 76 contains 1 shift/reduce conflicts
state 77 contains 1 shift/reduce conflicts
state 78 contains 1 shift/reduce conflicts
state 79 contains 1 shift/reduce conflicts
state 80 contains 1 shift/reduce conflicts
state 81 contains 1 shift/reduce conflicts
state 82 contains 1 shift/reduce conflicts
state 83 contains 1 shift/reduce conflicts
state 84 contains 1 shift/reduce conflicts
state 89 contains 1 shift/reduce conflicts
state 106 contains 1 shift/reduce conflicts


-------- Grammar --------

rule 1 program: statements
rule 2 statements: 
rule 3 statements: statements statement
rule 4 statements: statements statement ";"
rule 5 statement: expr
rule 6 statement: var_assign
rule 7 statement: if_stmt
rule 8 statement: loop_stmt
rule 9 statement: BREAK
rule 10 statement: RETURN
rule 11 statement: RETURN expr
rule 12 if_stmt: IF expr "{" statements "}" else_stmt
rule 13 else_stmt: 
rule 14 else_stmt: ELSE "{" statements "}"
rule 15 loop_stmt: LOOP "{" statements "}"
rule 16 var_assign: var_def "=" expr
rule 17 var_def: expr "." identifier
rule 18 var_def: identifier
rule 19 var_def: expr "[" expr "]"
rule 20 expr: expr "+" expr
rule 21 expr: expr "-" expr
rule 22 expr: "-" expr
rule 23 expr: expr "*" expr
rule 24 expr: expr "/" expr
rule 25 expr: expr "%" expr
rule 26 expr: expr "==" expr
rule 27 expr: expr "!=" expr
rule 28 expr: expr "<>" expr
rule 29 expr: expr ">" expr
rule 30 expr: expr ">=" expr
rule 31 expr: expr "<" expr
rule 32 expr: expr "<=" expr
rule 33 expr: expr "&&" expr
rule 34 expr: expr "||" expr
rule 35 expr: expr "." identifier
rule 36 expr: expr "." identifier "(" args ")"
rule 37 expr: identifier
rule 38 expr: identifier "(" args ")"
rule 39 expr: expr "[" expr "]"
rule 40 expr: "!" expr
rule 41 expr: primary
rule 42 primary: "(" expr ")"
rule 43 primary: lit
rule 44 primary: object
rule 45 lit: NUMBER
rule 46 lit: STRING
rule 47 lit: BOOLEAN
rule 48 lit: "[" args "]"
rule 49 lit: "{" hash "}"
rule 50 lit: NULL
rule 51 object: func_def
rule 52 object: func_def "(" args ")"
rule 53 object: class_def
rule 54 object: SELF
rule 55 func_def: FUNCTION "(" params ")" "{" statements "}"
rule 56 func_def: FUNCTION "{" statements "}"
rule 57 hash: 
rule 58 hash: expr ":" expr
rule 59 hash: hash "," expr ":" expr
rule 60 params: 
rule 61 params: identifier
rule 62 params: params "," identifier
rule 63 args: 
rule 64 args: expr
rule 65 args: args "," expr
rule 66 class_def: CLASS "(" expands ")" "{" var_assigns "}"
rule 67 class_def: CLASS "{" var_assigns "}"
rule 68 expands: 
rule 69 expands: identifier
rule 70 var_assigns: 
rule 71 var_assigns: var_assigns var_assign
rule 72 identifier: IDENTIFIER

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (46)
    on right: 
    on left : 
  program (47)
    on right: 
    on left : 1
  statements (48)
    on right: 1 3 4 12 14 15 55 56
    on left : 2 3 4
  statement (49)
    on right: 3 4
    on left : 5 6 7 8 9 10 11
  expr (50)
    on right: 5 11 12 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 39 40 42 58 59 64 65
    on left : 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
  var_assign (51)
    on right: 6 71
    on left : 16
  if_stmt (52)
    on right: 7
    on left : 12
  loop_stmt (53)
    on right: 8
    on left : 15
  else_stmt (54)
    on right: 12
    on left : 13 14
  var_def (55)
    on right: 16
    on left : 17 18 19
  identifier (56)
    on right: 17 18 35 36 37 38 61 62 69
    on left : 72
  args (57)
    on right: 36 38 48 52 65
    on left : 63 64 65
  primary (58)
    on right: 41
    on left : 42 43 44
  lit (59)
    on right: 43
    on left : 45 46 47 48 49 50
  object (60)
    on right: 44
    on left : 51 52 53 54
  hash (61)
    on right: 49 59
    on left : 57 58 59
  func_def (62)
    on right: 51 52
    on left : 55 56
  class_def (63)
    on right: 53
    on left : 66 67
  params (64)
    on right: 55 62
    on left : 60 61 62
  expands (65)
    on right: 66
    on left : 68 69
  var_assigns (66)
    on right: 66 67 71
    on left : 70 71

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  "!" (2) 40
  "." (3) 17 35 36
  "*" (4) 23
  "/" (5) 24
  "%" (6) 25
  "+" (7) 20
  "-" (8) 21 22
  "==" (9) 26
  "!=" (10) 27
  ">" (11) 29
  ">=" (12) 30
  "<" (13) 31
  "<=" (14) 32
  "<>" (15) 28
  "&&" (16) 33
  "||" (17) 34
  "=" (18) 16
  "+=" (19) 
  "-=" (20) 
  "*=" (21) 
  "/=" (22) 
  "%=" (23) 
  ";" (24) 4
  BREAK (25) 9
  RETURN (26) 10 11
  IF (27) 12
  "{" (28) 12 14 15 49 55 56 66 67
  "}" (29) 12 14 15 49 55 56 66 67
  ELSE (30) 14
  LOOP (31) 15
  "[" (32) 19 39 48
  "]" (33) 19 39 48
  "(" (34) 36 38 42 52 55 66
  ")" (35) 36 38 42 52 55 66
  NUMBER (36) 45
  STRING (37) 46
  BOOLEAN (38) 47
  NULL (39) 50
  SELF (40) 54
  FUNCTION (41) 55 56
  ":" (42) 58 59
  "," (43) 59 62 65
  CLASS (44) 66 67
  IDENTIFIER (45) 72

--------- State ---------

state 0


  $default      reduce using rule 2 (statements)

  program       go to state 1
  statements    go to state 2

state 1


  $end          shift, and go to state 3


state 2

   1) program : statements _
   3) statements : statements _ statement
   4) statements : statements _ statement ";"

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  BREAK         shift, and go to state 9
  RETURN        shift, and go to state 10
  IF            shift, and go to state 11
  "{"           shift, and go to state 25
  LOOP          shift, and go to state 12
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  $default      reduce using rule 1 (program)

  statement     go to state 4
  expr          go to state 5
  var_assign    go to state 6
  if_stmt       go to state 7
  loop_stmt     go to state 8
  var_def       go to state 13
  identifier    go to state 14
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 3


  $end          shift, and go to state 33


state 4

   3) statements : statements statement _
   4) statements : statements statement _ ";"

  ";"           shift, and go to state 34
  $default      reduce using rule 3 (statements)


state 5

   5) statement : expr _
  17) var_def : expr _ "." identifier
  19) var_def : expr _ "[" expr "]"
  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 35
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "-"           [reduce using rule 5 (statement)]
  "=="          shift, and go to state 42
  "!="          shift, and go to state 43
  ">"           shift, and go to state 45
  ">="          shift, and go to state 46
  "<"           shift, and go to state 47
  "<="          shift, and go to state 48
  "<>"          shift, and go to state 44
  "&&"          shift, and go to state 49
  "||"          shift, and go to state 50
  "["           shift, and go to state 36
  "["           [reduce using rule 5 (statement)]
  $default      reduce using rule 5 (statement)


state 6

   6) statement : var_assign _

  $default      reduce using rule 6 (statement)


state 7

   7) statement : if_stmt _

  $default      reduce using rule 7 (statement)


state 8

   8) statement : loop_stmt _

  $default      reduce using rule 8 (statement)


state 9

   9) statement : BREAK _

  $default      reduce using rule 9 (statement)


state 10

  10) statement : RETURN _
  11) statement : RETURN _ expr

  "!"           shift, and go to state 16
  "!"           [reduce using rule 10 (statement)]
  "-"           shift, and go to state 15
  "-"           [reduce using rule 10 (statement)]
  "{"           shift, and go to state 25
  "{"           [reduce using rule 10 (statement)]
  "["           shift, and go to state 24
  "["           [reduce using rule 10 (statement)]
  "("           shift, and go to state 18
  "("           [reduce using rule 10 (statement)]
  NUMBER        shift, and go to state 21
  NUMBER        [reduce using rule 10 (statement)]
  STRING        shift, and go to state 22
  STRING        [reduce using rule 10 (statement)]
  BOOLEAN       shift, and go to state 23
  BOOLEAN       [reduce using rule 10 (statement)]
  NULL          shift, and go to state 26
  NULL          [reduce using rule 10 (statement)]
  SELF          shift, and go to state 29
  SELF          [reduce using rule 10 (statement)]
  FUNCTION      shift, and go to state 30
  FUNCTION      [reduce using rule 10 (statement)]
  CLASS         shift, and go to state 31
  CLASS         [reduce using rule 10 (statement)]
  IDENTIFIER    shift, and go to state 32
  IDENTIFIER    [reduce using rule 10 (statement)]
  $default      reduce using rule 10 (statement)

  expr          go to state 51
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 11

  12) if_stmt : IF _ expr "{" statements "}" else_stmt

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 53
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 12

  15) loop_stmt : LOOP _ "{" statements "}"

  "{"           shift, and go to state 54


state 13

  16) var_assign : var_def _ "=" expr

  "="           shift, and go to state 55


state 14

  18) var_def : identifier _
  37) expr : identifier _
  38) expr : identifier _ "(" args ")"

  "("           shift, and go to state 56
  "("           [reduce using rule 37 (expr)]
  "="           reduce using rule 18 (var_def)
  $default      reduce using rule 37 (expr)


state 15

  22) expr : "-" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 57
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 16

  40) expr : "!" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 58
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 17

  41) expr : primary _

  $default      reduce using rule 41 (expr)


state 18

  42) primary : "(" _ expr ")"

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 59
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 19

  43) primary : lit _

  $default      reduce using rule 43 (primary)


state 20

  44) primary : object _

  $default      reduce using rule 44 (primary)


state 21

  45) lit : NUMBER _

  $default      reduce using rule 45 (lit)


state 22

  46) lit : STRING _

  $default      reduce using rule 46 (lit)


state 23

  47) lit : BOOLEAN _

  $default      reduce using rule 47 (lit)


state 24

  48) lit : "[" _ args "]"

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  $default      reduce using rule 63 (args)

  expr          go to state 60
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  args          go to state 61
  func_def      go to state 27
  class_def     go to state 28

state 25

  49) lit : "{" _ hash "}"

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  $default      reduce using rule 57 (hash)

  expr          go to state 62
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  hash          go to state 63
  func_def      go to state 27
  class_def     go to state 28

state 26

  50) lit : NULL _

  $default      reduce using rule 50 (lit)


state 27

  51) object : func_def _
  52) object : func_def _ "(" args ")"

  "("           shift, and go to state 64
  "("           [reduce using rule 51 (object)]
  $default      reduce using rule 51 (object)


state 28

  53) object : class_def _

  $default      reduce using rule 53 (object)


state 29

  54) object : SELF _

  $default      reduce using rule 54 (object)


state 30

  55) func_def : FUNCTION _ "(" params ")" "{" statements "}"
  56) func_def : FUNCTION _ "{" statements "}"

  "{"           shift, and go to state 66
  "("           shift, and go to state 65


state 31

  66) class_def : CLASS _ "(" expands ")" "{" var_assigns "}"
  67) class_def : CLASS _ "{" var_assigns "}"

  "{"           shift, and go to state 68
  "("           shift, and go to state 67


state 32

  72) identifier : IDENTIFIER _

  $default      reduce using rule 72 (identifier)


state 33


  $default      accept


state 34

   4) statements : statements statement ";" _

  $default      reduce using rule 4 (statements)


state 35

  17) var_def : expr "." _ identifier
  35) expr : expr "." _ identifier
  36) expr : expr "." _ identifier "(" args ")"

  IDENTIFIER    shift, and go to state 32

  identifier    go to state 69

state 36

  19) var_def : expr "[" _ expr "]"
  39) expr : expr "[" _ expr "]"

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 70
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 37

  20) expr : expr "+" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 71
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 38

  21) expr : expr "-" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 72
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 39

  23) expr : expr "*" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 73
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 40

  24) expr : expr "/" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 74
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 41

  25) expr : expr "%" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 75
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 42

  26) expr : expr "==" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 76
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 43

  27) expr : expr "!=" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 77
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 44

  28) expr : expr "<>" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 78
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 45

  29) expr : expr ">" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 79
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 46

  30) expr : expr ">=" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 80
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 47

  31) expr : expr "<" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 81
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 48

  32) expr : expr "<=" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 82
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 49

  33) expr : expr "&&" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 83
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 50

  34) expr : expr "||" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 84
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 51

  11) statement : RETURN expr _
  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "-"           [reduce using rule 11 (statement)]
  "=="          shift, and go to state 42
  "!="          shift, and go to state 43
  ">"           shift, and go to state 45
  ">="          shift, and go to state 46
  "<"           shift, and go to state 47
  "<="          shift, and go to state 48
  "<>"          shift, and go to state 44
  "&&"          shift, and go to state 49
  "||"          shift, and go to state 50
  "["           shift, and go to state 86
  "["           [reduce using rule 11 (statement)]
  $default      reduce using rule 11 (statement)


state 52

  37) expr : identifier _
  38) expr : identifier _ "(" args ")"

  "("           shift, and go to state 56
  "("           [reduce using rule 37 (expr)]
  $default      reduce using rule 37 (expr)


state 53

  12) if_stmt : IF expr _ "{" statements "}" else_stmt
  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "=="          shift, and go to state 42
  "!="          shift, and go to state 43
  ">"           shift, and go to state 45
  ">="          shift, and go to state 46
  "<"           shift, and go to state 47
  "<="          shift, and go to state 48
  "<>"          shift, and go to state 44
  "&&"          shift, and go to state 49
  "||"          shift, and go to state 50
  "{"           shift, and go to state 87
  "["           shift, and go to state 86


state 54

  15) loop_stmt : LOOP "{" _ statements "}"

  $default      reduce using rule 2 (statements)

  statements    go to state 88

state 55

  16) var_assign : var_def "=" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 89
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 56

  38) expr : identifier "(" _ args ")"

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  $default      reduce using rule 63 (args)

  expr          go to state 60
  identifier    go to state 52
  args          go to state 90
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 57

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  22) expr : "-" expr _
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "["           shift, and go to state 86
  "["           [reduce using rule 22 (expr)]
  $default      reduce using rule 22 (expr)


state 58

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"
  40) expr : "!" expr _

  "["           shift, and go to state 86
  "["           [reduce using rule 40 (expr)]
  $default      reduce using rule 40 (expr)


state 59

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"
  42) primary : "(" expr _ ")"

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "=="          shift, and go to state 42
  "!="          shift, and go to state 43
  ">"           shift, and go to state 45
  ">="          shift, and go to state 46
  "<"           shift, and go to state 47
  "<="          shift, and go to state 48
  "<>"          shift, and go to state 44
  "&&"          shift, and go to state 49
  "||"          shift, and go to state 50
  "["           shift, and go to state 86
  ")"           shift, and go to state 91


state 60

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"
  64) args : expr _

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "=="          shift, and go to state 42
  "!="          shift, and go to state 43
  ">"           shift, and go to state 45
  ">="          shift, and go to state 46
  "<"           shift, and go to state 47
  "<="          shift, and go to state 48
  "<>"          shift, and go to state 44
  "&&"          shift, and go to state 49
  "||"          shift, and go to state 50
  "["           shift, and go to state 86
  $default      reduce using rule 64 (args)


state 61

  48) lit : "[" args _ "]"
  65) args : args _ "," expr

  "]"           shift, and go to state 92
  ","           shift, and go to state 93


state 62

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"
  58) hash : expr _ ":" expr

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "=="          shift, and go to state 42
  "!="          shift, and go to state 43
  ">"           shift, and go to state 45
  ">="          shift, and go to state 46
  "<"           shift, and go to state 47
  "<="          shift, and go to state 48
  "<>"          shift, and go to state 44
  "&&"          shift, and go to state 49
  "||"          shift, and go to state 50
  "["           shift, and go to state 86
  ":"           shift, and go to state 94


state 63

  49) lit : "{" hash _ "}"
  59) hash : hash _ "," expr ":" expr

  "}"           shift, and go to state 95
  ","           shift, and go to state 96


state 64

  52) object : func_def "(" _ args ")"

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  $default      reduce using rule 63 (args)

  expr          go to state 60
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  args          go to state 97
  class_def     go to state 28

state 65

  55) func_def : FUNCTION "(" _ params ")" "{" statements "}"

  IDENTIFIER    shift, and go to state 32
  $default      reduce using rule 60 (params)

  params        go to state 98
  identifier    go to state 99

state 66

  56) func_def : FUNCTION "{" _ statements "}"

  $default      reduce using rule 2 (statements)

  statements    go to state 100

state 67

  66) class_def : CLASS "(" _ expands ")" "{" var_assigns "}"

  IDENTIFIER    shift, and go to state 32
  $default      reduce using rule 68 (expands)

  expands       go to state 101
  identifier    go to state 102

state 68

  67) class_def : CLASS "{" _ var_assigns "}"

  $default      reduce using rule 70 (var_assigns)

  var_assigns   go to state 103

state 69

  17) var_def : expr "." identifier _
  35) expr : expr "." identifier _
  36) expr : expr "." identifier _ "(" args ")"

  "("           shift, and go to state 104
  "("           [reduce using rule 35 (expr)]
  "="           reduce using rule 17 (var_def)
  $default      reduce using rule 35 (expr)


state 70

  19) var_def : expr "[" expr _ "]"
  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"
  39) expr : expr "[" expr _ "]"

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "=="          shift, and go to state 42
  "!="          shift, and go to state 43
  ">"           shift, and go to state 45
  ">="          shift, and go to state 46
  "<"           shift, and go to state 47
  "<="          shift, and go to state 48
  "<>"          shift, and go to state 44
  "&&"          shift, and go to state 49
  "||"          shift, and go to state 50
  "["           shift, and go to state 86
  "]"           shift, and go to state 105


state 71

  20) expr : expr _ "+" expr
  20) expr : expr "+" expr _
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "["           shift, and go to state 86
  "["           [reduce using rule 20 (expr)]
  $default      reduce using rule 20 (expr)


state 72

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  21) expr : expr "-" expr _
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "["           shift, and go to state 86
  "["           [reduce using rule 21 (expr)]
  $default      reduce using rule 21 (expr)


state 73

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  23) expr : expr "*" expr _
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 85
  "["           shift, and go to state 86
  "["           [reduce using rule 23 (expr)]
  $default      reduce using rule 23 (expr)


state 74

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  24) expr : expr "/" expr _
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 85
  "["           shift, and go to state 86
  "["           [reduce using rule 24 (expr)]
  $default      reduce using rule 24 (expr)


state 75

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  25) expr : expr "%" expr _
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 85
  "["           shift, and go to state 86
  "["           [reduce using rule 25 (expr)]
  $default      reduce using rule 25 (expr)


state 76

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  26) expr : expr "==" expr _
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "["           shift, and go to state 86
  "["           [reduce using rule 26 (expr)]
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 26 (expr)


state 77

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  27) expr : expr "!=" expr _
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "["           shift, and go to state 86
  "["           [reduce using rule 27 (expr)]
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 27 (expr)


state 78

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  28) expr : expr "<>" expr _
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "["           shift, and go to state 86
  "["           [reduce using rule 28 (expr)]
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 28 (expr)


state 79

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  29) expr : expr ">" expr _
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "["           shift, and go to state 86
  "["           [reduce using rule 29 (expr)]
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 29 (expr)


state 80

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  30) expr : expr ">=" expr _
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "["           shift, and go to state 86
  "["           [reduce using rule 30 (expr)]
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 30 (expr)


state 81

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  31) expr : expr "<" expr _
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "["           shift, and go to state 86
  "["           [reduce using rule 31 (expr)]
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 31 (expr)


state 82

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  32) expr : expr "<=" expr _
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "["           shift, and go to state 86
  "["           [reduce using rule 32 (expr)]
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 32 (expr)


state 83

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  33) expr : expr "&&" expr _
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "=="          shift, and go to state 42
  "!="          shift, and go to state 43
  ">"           shift, and go to state 45
  ">="          shift, and go to state 46
  "<"           shift, and go to state 47
  "<="          shift, and go to state 48
  "<>"          shift, and go to state 44
  "["           shift, and go to state 86
  "["           [reduce using rule 33 (expr)]
  $default      reduce using rule 33 (expr)


state 84

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  34) expr : expr "||" expr _
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "=="          shift, and go to state 42
  "!="          shift, and go to state 43
  ">"           shift, and go to state 45
  ">="          shift, and go to state 46
  "<"           shift, and go to state 47
  "<="          shift, and go to state 48
  "<>"          shift, and go to state 44
  "&&"          shift, and go to state 49
  "["           shift, and go to state 86
  "["           [reduce using rule 34 (expr)]
  $default      reduce using rule 34 (expr)


state 85

  35) expr : expr "." _ identifier
  36) expr : expr "." _ identifier "(" args ")"

  IDENTIFIER    shift, and go to state 32

  identifier    go to state 106

state 86

  39) expr : expr "[" _ expr "]"

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 107
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 87

  12) if_stmt : IF expr "{" _ statements "}" else_stmt

  $default      reduce using rule 2 (statements)

  statements    go to state 108

state 88

   3) statements : statements _ statement
   4) statements : statements _ statement ";"
  15) loop_stmt : LOOP "{" statements _ "}"

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  BREAK         shift, and go to state 9
  RETURN        shift, and go to state 10
  IF            shift, and go to state 11
  "{"           shift, and go to state 25
  "}"           shift, and go to state 109
  LOOP          shift, and go to state 12
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  statement     go to state 4
  expr          go to state 5
  var_assign    go to state 6
  if_stmt       go to state 7
  loop_stmt     go to state 8
  var_def       go to state 13
  identifier    go to state 14
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 89

  16) var_assign : var_def "=" expr _
  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "=="          shift, and go to state 42
  "!="          shift, and go to state 43
  ">"           shift, and go to state 45
  ">="          shift, and go to state 46
  "<"           shift, and go to state 47
  "<="          shift, and go to state 48
  "<>"          shift, and go to state 44
  "&&"          shift, and go to state 49
  "||"          shift, and go to state 50
  "["           shift, and go to state 86
  "["           [reduce using rule 16 (var_assign)]
  $default      reduce using rule 16 (var_assign)


state 90

  38) expr : identifier "(" args _ ")"
  65) args : args _ "," expr

  ")"           shift, and go to state 110
  ","           shift, and go to state 93


state 91

  42) primary : "(" expr ")" _

  $default      reduce using rule 42 (primary)


state 92

  48) lit : "[" args "]" _

  $default      reduce using rule 48 (lit)


state 93

  65) args : args "," _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 111
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 94

  58) hash : expr ":" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 112
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 95

  49) lit : "{" hash "}" _

  $default      reduce using rule 49 (lit)


state 96

  59) hash : hash "," _ expr ":" expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 113
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 97

  52) object : func_def "(" args _ ")"
  65) args : args _ "," expr

  ")"           shift, and go to state 114
  ","           shift, and go to state 93


state 98

  55) func_def : FUNCTION "(" params _ ")" "{" statements "}"
  62) params : params _ "," identifier

  ")"           shift, and go to state 115
  ","           shift, and go to state 116


state 99

  61) params : identifier _

  $default      reduce using rule 61 (params)


state 100

   3) statements : statements _ statement
   4) statements : statements _ statement ";"
  56) func_def : FUNCTION "{" statements _ "}"

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  BREAK         shift, and go to state 9
  RETURN        shift, and go to state 10
  IF            shift, and go to state 11
  "{"           shift, and go to state 25
  "}"           shift, and go to state 117
  LOOP          shift, and go to state 12
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  statement     go to state 4
  expr          go to state 5
  var_assign    go to state 6
  if_stmt       go to state 7
  loop_stmt     go to state 8
  var_def       go to state 13
  identifier    go to state 14
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 101

  66) class_def : CLASS "(" expands _ ")" "{" var_assigns "}"

  ")"           shift, and go to state 118


state 102

  69) expands : identifier _

  $default      reduce using rule 69 (expands)


state 103

  67) class_def : CLASS "{" var_assigns _ "}"
  71) var_assigns : var_assigns _ var_assign

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "}"           shift, and go to state 120
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  var_def       go to state 13
  expr          go to state 119
  identifier    go to state 14
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28
  var_assign    go to state 121

state 104

  36) expr : expr "." identifier "(" _ args ")"

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32
  $default      reduce using rule 63 (args)

  expr          go to state 60
  args          go to state 122
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 105

  19) var_def : expr "[" expr "]" _
  39) expr : expr "[" expr "]" _

  "="           reduce using rule 19 (var_def)
  $default      reduce using rule 39 (expr)


state 106

  35) expr : expr "." identifier _
  36) expr : expr "." identifier _ "(" args ")"

  "("           shift, and go to state 104
  "("           [reduce using rule 35 (expr)]
  $default      reduce using rule 35 (expr)


state 107

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"
  39) expr : expr "[" expr _ "]"

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "=="          shift, and go to state 42
  "!="          shift, and go to state 43
  ">"           shift, and go to state 45
  ">="          shift, and go to state 46
  "<"           shift, and go to state 47
  "<="          shift, and go to state 48
  "<>"          shift, and go to state 44
  "&&"          shift, and go to state 49
  "||"          shift, and go to state 50
  "["           shift, and go to state 86
  "]"           shift, and go to state 123


state 108

   3) statements : statements _ statement
   4) statements : statements _ statement ";"
  12) if_stmt : IF expr "{" statements _ "}" else_stmt

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  BREAK         shift, and go to state 9
  RETURN        shift, and go to state 10
  IF            shift, and go to state 11
  "{"           shift, and go to state 25
  "}"           shift, and go to state 124
  LOOP          shift, and go to state 12
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  statement     go to state 4
  expr          go to state 5
  var_assign    go to state 6
  if_stmt       go to state 7
  loop_stmt     go to state 8
  var_def       go to state 13
  identifier    go to state 14
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 109

  15) loop_stmt : LOOP "{" statements "}" _

  $default      reduce using rule 15 (loop_stmt)


state 110

  38) expr : identifier "(" args ")" _

  $default      reduce using rule 38 (expr)


state 111

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"
  65) args : args "," expr _

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "=="          shift, and go to state 42
  "!="          shift, and go to state 43
  ">"           shift, and go to state 45
  ">="          shift, and go to state 46
  "<"           shift, and go to state 47
  "<="          shift, and go to state 48
  "<>"          shift, and go to state 44
  "&&"          shift, and go to state 49
  "||"          shift, and go to state 50
  "["           shift, and go to state 86
  $default      reduce using rule 65 (args)


state 112

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"
  58) hash : expr ":" expr _

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "=="          shift, and go to state 42
  "!="          shift, and go to state 43
  ">"           shift, and go to state 45
  ">="          shift, and go to state 46
  "<"           shift, and go to state 47
  "<="          shift, and go to state 48
  "<>"          shift, and go to state 44
  "&&"          shift, and go to state 49
  "||"          shift, and go to state 50
  "["           shift, and go to state 86
  $default      reduce using rule 58 (hash)


state 113

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"
  59) hash : hash "," expr _ ":" expr

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "=="          shift, and go to state 42
  "!="          shift, and go to state 43
  ">"           shift, and go to state 45
  ">="          shift, and go to state 46
  "<"           shift, and go to state 47
  "<="          shift, and go to state 48
  "<>"          shift, and go to state 44
  "&&"          shift, and go to state 49
  "||"          shift, and go to state 50
  "["           shift, and go to state 86
  ":"           shift, and go to state 125


state 114

  52) object : func_def "(" args ")" _

  $default      reduce using rule 52 (object)


state 115

  55) func_def : FUNCTION "(" params ")" _ "{" statements "}"

  "{"           shift, and go to state 126


state 116

  62) params : params "," _ identifier

  IDENTIFIER    shift, and go to state 32

  identifier    go to state 127

state 117

  56) func_def : FUNCTION "{" statements "}" _

  $default      reduce using rule 56 (func_def)


state 118

  66) class_def : CLASS "(" expands ")" _ "{" var_assigns "}"

  "{"           shift, and go to state 128


state 119

  17) var_def : expr _ "." identifier
  19) var_def : expr _ "[" expr "]"
  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"

  "."           shift, and go to state 35
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "=="          shift, and go to state 42
  "!="          shift, and go to state 43
  ">"           shift, and go to state 45
  ">="          shift, and go to state 46
  "<"           shift, and go to state 47
  "<="          shift, and go to state 48
  "<>"          shift, and go to state 44
  "&&"          shift, and go to state 49
  "||"          shift, and go to state 50
  "["           shift, and go to state 36


state 120

  67) class_def : CLASS "{" var_assigns "}" _

  $default      reduce using rule 67 (class_def)


state 121

  71) var_assigns : var_assigns var_assign _

  $default      reduce using rule 71 (var_assigns)


state 122

  36) expr : expr "." identifier "(" args _ ")"
  65) args : args _ "," expr

  ")"           shift, and go to state 129
  ","           shift, and go to state 93


state 123

  39) expr : expr "[" expr "]" _

  $default      reduce using rule 39 (expr)


state 124

  12) if_stmt : IF expr "{" statements "}" _ else_stmt

  ELSE          shift, and go to state 131
  $default      reduce using rule 13 (else_stmt)

  else_stmt     go to state 130

state 125

  59) hash : hash "," expr ":" _ expr

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  expr          go to state 132
  identifier    go to state 52
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 126

  55) func_def : FUNCTION "(" params ")" "{" _ statements "}"

  $default      reduce using rule 2 (statements)

  statements    go to state 133

state 127

  62) params : params "," identifier _

  $default      reduce using rule 62 (params)


state 128

  66) class_def : CLASS "(" expands ")" "{" _ var_assigns "}"

  $default      reduce using rule 70 (var_assigns)

  var_assigns   go to state 134

state 129

  36) expr : expr "." identifier "(" args ")" _

  $default      reduce using rule 36 (expr)


state 130

  12) if_stmt : IF expr "{" statements "}" else_stmt _

  $default      reduce using rule 12 (if_stmt)


state 131

  14) else_stmt : ELSE _ "{" statements "}"

  "{"           shift, and go to state 135


state 132

  20) expr : expr _ "+" expr
  21) expr : expr _ "-" expr
  23) expr : expr _ "*" expr
  24) expr : expr _ "/" expr
  25) expr : expr _ "%" expr
  26) expr : expr _ "==" expr
  27) expr : expr _ "!=" expr
  28) expr : expr _ "<>" expr
  29) expr : expr _ ">" expr
  30) expr : expr _ ">=" expr
  31) expr : expr _ "<" expr
  32) expr : expr _ "<=" expr
  33) expr : expr _ "&&" expr
  34) expr : expr _ "||" expr
  35) expr : expr _ "." identifier
  36) expr : expr _ "." identifier "(" args ")"
  39) expr : expr _ "[" expr "]"
  59) hash : hash "," expr ":" expr _

  "."           shift, and go to state 85
  "*"           shift, and go to state 39
  "/"           shift, and go to state 40
  "%"           shift, and go to state 41
  "+"           shift, and go to state 37
  "-"           shift, and go to state 38
  "=="          shift, and go to state 42
  "!="          shift, and go to state 43
  ">"           shift, and go to state 45
  ">="          shift, and go to state 46
  "<"           shift, and go to state 47
  "<="          shift, and go to state 48
  "<>"          shift, and go to state 44
  "&&"          shift, and go to state 49
  "||"          shift, and go to state 50
  "["           shift, and go to state 86
  $default      reduce using rule 59 (hash)


state 133

   3) statements : statements _ statement
   4) statements : statements _ statement ";"
  55) func_def : FUNCTION "(" params ")" "{" statements _ "}"

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  BREAK         shift, and go to state 9
  RETURN        shift, and go to state 10
  IF            shift, and go to state 11
  "{"           shift, and go to state 25
  "}"           shift, and go to state 136
  LOOP          shift, and go to state 12
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  statement     go to state 4
  expr          go to state 5
  var_assign    go to state 6
  if_stmt       go to state 7
  loop_stmt     go to state 8
  var_def       go to state 13
  identifier    go to state 14
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 134

  66) class_def : CLASS "(" expands ")" "{" var_assigns _ "}"
  71) var_assigns : var_assigns _ var_assign

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  "{"           shift, and go to state 25
  "}"           shift, and go to state 137
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  var_def       go to state 13
  expr          go to state 119
  identifier    go to state 14
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28
  var_assign    go to state 121

state 135

  14) else_stmt : ELSE "{" _ statements "}"

  $default      reduce using rule 2 (statements)

  statements    go to state 138

state 136

  55) func_def : FUNCTION "(" params ")" "{" statements "}" _

  $default      reduce using rule 55 (func_def)


state 137

  66) class_def : CLASS "(" expands ")" "{" var_assigns "}" _

  $default      reduce using rule 66 (class_def)


state 138

   3) statements : statements _ statement
   4) statements : statements _ statement ";"
  14) else_stmt : ELSE "{" statements _ "}"

  "!"           shift, and go to state 16
  "-"           shift, and go to state 15
  BREAK         shift, and go to state 9
  RETURN        shift, and go to state 10
  IF            shift, and go to state 11
  "{"           shift, and go to state 25
  "}"           shift, and go to state 139
  LOOP          shift, and go to state 12
  "["           shift, and go to state 24
  "("           shift, and go to state 18
  NUMBER        shift, and go to state 21
  STRING        shift, and go to state 22
  BOOLEAN       shift, and go to state 23
  NULL          shift, and go to state 26
  SELF          shift, and go to state 29
  FUNCTION      shift, and go to state 30
  CLASS         shift, and go to state 31
  IDENTIFIER    shift, and go to state 32

  statement     go to state 4
  expr          go to state 5
  var_assign    go to state 6
  if_stmt       go to state 7
  loop_stmt     go to state 8
  var_def       go to state 13
  identifier    go to state 14
  primary       go to state 17
  lit           go to state 19
  object        go to state 20
  func_def      go to state 27
  class_def     go to state 28

state 139

  14) else_stmt : ELSE "{" statements "}" _

  $default      reduce using rule 14 (else_stmt)

