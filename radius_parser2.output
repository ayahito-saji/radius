state 2 contains 13 shift/reduce conflicts
state 5 contains 3 shift/reduce conflicts
state 10 contains 13 shift/reduce conflicts
state 30 contains 1 shift/reduce conflicts
state 55 contains 3 shift/reduce conflicts
state 62 contains 2 shift/reduce conflicts
state 63 contains 2 shift/reduce conflicts
state 76 contains 2 shift/reduce conflicts
state 77 contains 2 shift/reduce conflicts
state 78 contains 2 shift/reduce conflicts
state 79 contains 2 shift/reduce conflicts
state 80 contains 2 shift/reduce conflicts
state 81 contains 2 shift/reduce conflicts
state 82 contains 2 shift/reduce conflicts
state 83 contains 2 shift/reduce conflicts
state 84 contains 2 shift/reduce conflicts
state 85 contains 2 shift/reduce conflicts
state 86 contains 2 shift/reduce conflicts
state 87 contains 2 shift/reduce conflicts
state 88 contains 2 shift/reduce conflicts
state 89 contains 2 shift/reduce conflicts
state 94 contains 13 shift/reduce conflicts
state 97 contains 2 shift/reduce conflicts
state 107 contains 13 shift/reduce conflicts
state 110 contains 13 shift/reduce conflicts
state 115 contains 13 shift/reduce conflicts
state 138 contains 2 shift/reduce conflicts
state 140 contains 13 shift/reduce conflicts
state 141 contains 13 shift/reduce conflicts
state 145 contains 13 shift/reduce conflicts


-------- Grammar --------

rule 1 program: statements
rule 2 statements: 
rule 3 statements: statements statement
rule 4 statements: statements statement ";"
rule 5 statement: expr
rule 6 statement: var_assign
rule 7 statement: if_stmt
rule 8 statement: loop_stmt
rule 9 statement: BREAK
rule 10 statement: RETURN
rule 11 statement: RETURN expr
rule 12 if_stmt: IF expr "{" statements "}" else_stmt
rule 13 else_stmt: 
rule 14 else_stmt: ELSE "{" statements "}"
rule 15 loop_stmt: LOOP "{" statements "}"
rule 16 var_assign: access_md static_md const_md var_def "=" expr
rule 17 var_assign: var_def "=" expr
rule 18 var_def: expr "." identifier
rule 19 var_def: identifier
rule 20 var_def: expr "[" expr "]"
rule 21 access_md: 
rule 22 access_md: PRIVATE
rule 23 access_md: PUBLIC
rule 24 static_md: 
rule 25 static_md: STATIC
rule 26 const_md: 
rule 27 const_md: CONST
rule 28 expr: expr "+" expr
rule 29 expr: expr "-" expr
rule 30 expr: "-" expr
rule 31 expr: expr "*" expr
rule 32 expr: expr "/" expr
rule 33 expr: expr "%" expr
rule 34 expr: expr "==" expr
rule 35 expr: expr "!=" expr
rule 36 expr: expr "<>" expr
rule 37 expr: expr ">" expr
rule 38 expr: expr ">=" expr
rule 39 expr: expr "<" expr
rule 40 expr: expr "<=" expr
rule 41 expr: expr "&&" expr
rule 42 expr: expr "||" expr
rule 43 expr: expr "." identifier
rule 44 expr: expr "(" args ")"
rule 45 expr: identifier
rule 46 expr: expr "[" expr "]"
rule 47 expr: "!" expr
rule 48 expr: primary
rule 49 primary: "(" expr ")"
rule 50 primary: lit
rule 51 primary: object
rule 52 lit: NUMBER
rule 53 lit: STRING
rule 54 lit: BOOLEAN
rule 55 lit: "[" args "]"
rule 56 lit: "{" hash "}"
rule 57 lit: NULL
rule 58 object: func_def
rule 59 object: func_def "(" args ")"
rule 60 object: class_def
rule 61 object: SELF
rule 62 func_def: FUNCTION "(" params ")" "{" statements "}"
rule 63 func_def: FUNCTION "{" statements "}"
rule 64 hash: 
rule 65 hash: expr ":" expr
rule 66 hash: hash "," expr ":" expr
rule 67 params: 
rule 68 params: identifier
rule 69 params: params "," identifier
rule 70 args: 
rule 71 args: expr
rule 72 args: args "," expr
rule 73 class_def: CLASS "(" expands ")" "{" var_assigns "}"
rule 74 class_def: CLASS "{" var_assigns "}"
rule 75 expands: 
rule 76 expands: identifier
rule 77 var_assigns: 
rule 78 var_assigns: var_assigns var_assign
rule 79 identifier: IDENTIFIER

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (50)
    on right: 
    on left : 
  program (51)
    on right: 
    on left : 1
  statements (52)
    on right: 1 3 4 12 14 15 62 63
    on left : 2 3 4
  statement (53)
    on right: 3 4
    on left : 5 6 7 8 9 10 11
  expr (54)
    on right: 5 11 12 16 17 18 20 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 47 49 65 66 71 72
    on left : 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
  var_assign (55)
    on right: 6 78
    on left : 16 17
  if_stmt (56)
    on right: 7
    on left : 12
  loop_stmt (57)
    on right: 8
    on left : 15
  else_stmt (58)
    on right: 12
    on left : 13 14
  access_md (59)
    on right: 16
    on left : 21 22 23
  static_md (60)
    on right: 16
    on left : 24 25
  const_md (61)
    on right: 16
    on left : 26 27
  var_def (62)
    on right: 16 17
    on left : 18 19 20
  identifier (63)
    on right: 18 19 43 45 68 69 76
    on left : 79
  args (64)
    on right: 44 55 59 72
    on left : 70 71 72
  primary (65)
    on right: 48
    on left : 49 50 51
  lit (66)
    on right: 50
    on left : 52 53 54 55 56 57
  object (67)
    on right: 51
    on left : 58 59 60 61
  hash (68)
    on right: 56 66
    on left : 64 65 66
  func_def (69)
    on right: 58 59
    on left : 62 63
  class_def (70)
    on right: 60
    on left : 73 74
  params (71)
    on right: 62 69
    on left : 67 68 69
  expands (72)
    on right: 73
    on left : 75 76
  var_assigns (73)
    on right: 73 74 78
    on left : 77 78

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  "." (2) 18 43
  "!" (3) 47
  "*" (4) 31
  "/" (5) 32
  "%" (6) 33
  "+" (7) 28
  "-" (8) 29 30
  "==" (9) 34
  "!=" (10) 35
  ">" (11) 37
  ">=" (12) 38
  "<" (13) 39
  "<=" (14) 40
  "<>" (15) 36
  "&&" (16) 41
  "||" (17) 42
  "=" (18) 16 17
  "+=" (19) 
  "-=" (20) 
  "*=" (21) 
  "/=" (22) 
  "%=" (23) 
  ";" (24) 4
  BREAK (25) 9
  RETURN (26) 10 11
  IF (27) 12
  "{" (28) 12 14 15 56 62 63 73 74
  "}" (29) 12 14 15 56 62 63 73 74
  ELSE (30) 14
  LOOP (31) 15
  "[" (32) 20 46 55
  "]" (33) 20 46 55
  PRIVATE (34) 22
  PUBLIC (35) 23
  STATIC (36) 25
  CONST (37) 27
  "(" (38) 44 49 59 62 73
  ")" (39) 44 49 59 62 73
  NUMBER (40) 52
  STRING (41) 53
  BOOLEAN (42) 54
  NULL (43) 57
  SELF (44) 61
  FUNCTION (45) 62 63
  ":" (46) 65 66
  "," (47) 66 69 72
  CLASS (48) 73 74
  IDENTIFIER (49) 79

--------- State ---------

state 0


  $default      reduce using rule 2 (statements)

  program       go to state 1
  statements    go to state 2

state 1


  $end          shift, and go to state 3


state 2

   1) program : statements _
   3) statements : statements _ statement
   4) statements : statements _ statement ";"

  "!"           shift, and go to state 19
  "!"           [reduce using rule 21 (access_md)]
  "-"           shift, and go to state 18
  "-"           [reduce using rule 21 (access_md)]
  BREAK         shift, and go to state 9
  RETURN        shift, and go to state 10
  IF            shift, and go to state 11
  "{"           shift, and go to state 28
  "{"           [reduce using rule 21 (access_md)]
  LOOP          shift, and go to state 12
  "["           shift, and go to state 27
  "["           [reduce using rule 21 (access_md)]
  PRIVATE       shift, and go to state 16
  PUBLIC        shift, and go to state 17
  "("           shift, and go to state 21
  "("           [reduce using rule 21 (access_md)]
  NUMBER        shift, and go to state 24
  NUMBER        [reduce using rule 21 (access_md)]
  STRING        shift, and go to state 25
  STRING        [reduce using rule 21 (access_md)]
  BOOLEAN       shift, and go to state 26
  BOOLEAN       [reduce using rule 21 (access_md)]
  NULL          shift, and go to state 29
  NULL          [reduce using rule 21 (access_md)]
  SELF          shift, and go to state 32
  SELF          [reduce using rule 21 (access_md)]
  FUNCTION      shift, and go to state 33
  FUNCTION      [reduce using rule 21 (access_md)]
  CLASS         shift, and go to state 34
  CLASS         [reduce using rule 21 (access_md)]
  IDENTIFIER    shift, and go to state 35
  IDENTIFIER    [reduce using rule 21 (access_md)]
  $end          reduce using rule 1 (program)
  $default      reduce using rule 21 (access_md)

  statement     go to state 4
  expr          go to state 5
  var_assign    go to state 6
  if_stmt       go to state 7
  loop_stmt     go to state 8
  access_md     go to state 13
  var_def       go to state 14
  identifier    go to state 15
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 3


  $end          shift, and go to state 36


state 4

   3) statements : statements statement _
   4) statements : statements statement _ ";"

  ";"           shift, and go to state 37
  $default      reduce using rule 3 (statements)


state 5

   5) statement : expr _
  18) var_def : expr _ "." identifier
  20) var_def : expr _ "[" expr "]"
  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 38
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "-"           [reduce using rule 5 (statement)]
  "=="          shift, and go to state 45
  "!="          shift, and go to state 46
  ">"           shift, and go to state 48
  ">="          shift, and go to state 49
  "<"           shift, and go to state 50
  "<="          shift, and go to state 51
  "<>"          shift, and go to state 47
  "&&"          shift, and go to state 52
  "||"          shift, and go to state 53
  "["           shift, and go to state 39
  "["           [reduce using rule 5 (statement)]
  "("           shift, and go to state 54
  "("           [reduce using rule 5 (statement)]
  $default      reduce using rule 5 (statement)


state 6

   6) statement : var_assign _

  $default      reduce using rule 6 (statement)


state 7

   7) statement : if_stmt _

  $default      reduce using rule 7 (statement)


state 8

   8) statement : loop_stmt _

  $default      reduce using rule 8 (statement)


state 9

   9) statement : BREAK _

  $default      reduce using rule 9 (statement)


state 10

  10) statement : RETURN _
  11) statement : RETURN _ expr

  "!"           shift, and go to state 19
  "!"           [reduce using rule 10 (statement)]
  "-"           shift, and go to state 18
  "-"           [reduce using rule 10 (statement)]
  "{"           shift, and go to state 28
  "{"           [reduce using rule 10 (statement)]
  "["           shift, and go to state 27
  "["           [reduce using rule 10 (statement)]
  "("           shift, and go to state 21
  "("           [reduce using rule 10 (statement)]
  NUMBER        shift, and go to state 24
  NUMBER        [reduce using rule 10 (statement)]
  STRING        shift, and go to state 25
  STRING        [reduce using rule 10 (statement)]
  BOOLEAN       shift, and go to state 26
  BOOLEAN       [reduce using rule 10 (statement)]
  NULL          shift, and go to state 29
  NULL          [reduce using rule 10 (statement)]
  SELF          shift, and go to state 32
  SELF          [reduce using rule 10 (statement)]
  FUNCTION      shift, and go to state 33
  FUNCTION      [reduce using rule 10 (statement)]
  CLASS         shift, and go to state 34
  CLASS         [reduce using rule 10 (statement)]
  IDENTIFIER    shift, and go to state 35
  IDENTIFIER    [reduce using rule 10 (statement)]
  $default      reduce using rule 10 (statement)

  expr          go to state 55
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 11

  12) if_stmt : IF _ expr "{" statements "}" else_stmt

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 57
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 12

  15) loop_stmt : LOOP _ "{" statements "}"

  "{"           shift, and go to state 58


state 13

  16) var_assign : access_md _ static_md const_md var_def "=" expr

  STATIC        shift, and go to state 60
  $default      reduce using rule 24 (static_md)

  static_md     go to state 59

state 14

  17) var_assign : var_def _ "=" expr

  "="           shift, and go to state 61


state 15

  19) var_def : identifier _
  45) expr : identifier _

  "="           reduce using rule 19 (var_def)
  $default      reduce using rule 45 (expr)


state 16

  22) access_md : PRIVATE _

  $default      reduce using rule 22 (access_md)


state 17

  23) access_md : PUBLIC _

  $default      reduce using rule 23 (access_md)


state 18

  30) expr : "-" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 62
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 19

  47) expr : "!" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 63
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 20

  48) expr : primary _

  $default      reduce using rule 48 (expr)


state 21

  49) primary : "(" _ expr ")"

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 64
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 22

  50) primary : lit _

  $default      reduce using rule 50 (primary)


state 23

  51) primary : object _

  $default      reduce using rule 51 (primary)


state 24

  52) lit : NUMBER _

  $default      reduce using rule 52 (lit)


state 25

  53) lit : STRING _

  $default      reduce using rule 53 (lit)


state 26

  54) lit : BOOLEAN _

  $default      reduce using rule 54 (lit)


state 27

  55) lit : "[" _ args "]"

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35
  $default      reduce using rule 70 (args)

  expr          go to state 65
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  args          go to state 66
  func_def      go to state 30
  class_def     go to state 31

state 28

  56) lit : "{" _ hash "}"

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35
  $default      reduce using rule 64 (hash)

  expr          go to state 67
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  hash          go to state 68
  func_def      go to state 30
  class_def     go to state 31

state 29

  57) lit : NULL _

  $default      reduce using rule 57 (lit)


state 30

  58) object : func_def _
  59) object : func_def _ "(" args ")"

  "("           shift, and go to state 69
  "("           [reduce using rule 58 (object)]
  $default      reduce using rule 58 (object)


state 31

  60) object : class_def _

  $default      reduce using rule 60 (object)


state 32

  61) object : SELF _

  $default      reduce using rule 61 (object)


state 33

  62) func_def : FUNCTION _ "(" params ")" "{" statements "}"
  63) func_def : FUNCTION _ "{" statements "}"

  "{"           shift, and go to state 71
  "("           shift, and go to state 70


state 34

  73) class_def : CLASS _ "(" expands ")" "{" var_assigns "}"
  74) class_def : CLASS _ "{" var_assigns "}"

  "{"           shift, and go to state 73
  "("           shift, and go to state 72


state 35

  79) identifier : IDENTIFIER _

  $default      reduce using rule 79 (identifier)


state 36


  $default      accept


state 37

   4) statements : statements statement ";" _

  $default      reduce using rule 4 (statements)


state 38

  18) var_def : expr "." _ identifier
  43) expr : expr "." _ identifier

  IDENTIFIER    shift, and go to state 35

  identifier    go to state 74

state 39

  20) var_def : expr "[" _ expr "]"
  46) expr : expr "[" _ expr "]"

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 75
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 40

  28) expr : expr "+" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 76
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 41

  29) expr : expr "-" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 77
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 42

  31) expr : expr "*" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 78
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 43

  32) expr : expr "/" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 79
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 44

  33) expr : expr "%" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 80
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 45

  34) expr : expr "==" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 81
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 46

  35) expr : expr "!=" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 82
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 47

  36) expr : expr "<>" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 83
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 48

  37) expr : expr ">" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 84
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 49

  38) expr : expr ">=" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 85
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 50

  39) expr : expr "<" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 86
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 51

  40) expr : expr "<=" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 87
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 52

  41) expr : expr "&&" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 88
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 53

  42) expr : expr "||" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 89
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 54

  44) expr : expr "(" _ args ")"

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35
  $default      reduce using rule 70 (args)

  expr          go to state 65
  args          go to state 90
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 55

  11) statement : RETURN expr _
  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "-"           [reduce using rule 11 (statement)]
  "=="          shift, and go to state 45
  "!="          shift, and go to state 46
  ">"           shift, and go to state 48
  ">="          shift, and go to state 49
  "<"           shift, and go to state 50
  "<="          shift, and go to state 51
  "<>"          shift, and go to state 47
  "&&"          shift, and go to state 52
  "||"          shift, and go to state 53
  "["           shift, and go to state 92
  "["           [reduce using rule 11 (statement)]
  "("           shift, and go to state 54
  "("           [reduce using rule 11 (statement)]
  $default      reduce using rule 11 (statement)


state 56

  45) expr : identifier _

  $default      reduce using rule 45 (expr)


state 57

  12) if_stmt : IF expr _ "{" statements "}" else_stmt
  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "=="          shift, and go to state 45
  "!="          shift, and go to state 46
  ">"           shift, and go to state 48
  ">="          shift, and go to state 49
  "<"           shift, and go to state 50
  "<="          shift, and go to state 51
  "<>"          shift, and go to state 47
  "&&"          shift, and go to state 52
  "||"          shift, and go to state 53
  "{"           shift, and go to state 93
  "["           shift, and go to state 92
  "("           shift, and go to state 54


state 58

  15) loop_stmt : LOOP "{" _ statements "}"

  $default      reduce using rule 2 (statements)

  statements    go to state 94

state 59

  16) var_assign : access_md static_md _ const_md var_def "=" expr

  CONST         shift, and go to state 96
  $default      reduce using rule 26 (const_md)

  const_md      go to state 95

state 60

  25) static_md : STATIC _

  $default      reduce using rule 25 (static_md)


state 61

  17) var_assign : var_def "=" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 97
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 62

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  30) expr : "-" expr _
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "["           shift, and go to state 92
  "["           [reduce using rule 30 (expr)]
  "("           shift, and go to state 54
  "("           [reduce using rule 30 (expr)]
  $default      reduce using rule 30 (expr)


state 63

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"
  47) expr : "!" expr _

  "."           shift, and go to state 91
  "["           shift, and go to state 92
  "["           [reduce using rule 47 (expr)]
  "("           shift, and go to state 54
  "("           [reduce using rule 47 (expr)]
  $default      reduce using rule 47 (expr)


state 64

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"
  49) primary : "(" expr _ ")"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "=="          shift, and go to state 45
  "!="          shift, and go to state 46
  ">"           shift, and go to state 48
  ">="          shift, and go to state 49
  "<"           shift, and go to state 50
  "<="          shift, and go to state 51
  "<>"          shift, and go to state 47
  "&&"          shift, and go to state 52
  "||"          shift, and go to state 53
  "["           shift, and go to state 92
  "("           shift, and go to state 54
  ")"           shift, and go to state 98


state 65

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"
  71) args : expr _

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "=="          shift, and go to state 45
  "!="          shift, and go to state 46
  ">"           shift, and go to state 48
  ">="          shift, and go to state 49
  "<"           shift, and go to state 50
  "<="          shift, and go to state 51
  "<>"          shift, and go to state 47
  "&&"          shift, and go to state 52
  "||"          shift, and go to state 53
  "["           shift, and go to state 92
  "("           shift, and go to state 54
  $default      reduce using rule 71 (args)


state 66

  55) lit : "[" args _ "]"
  72) args : args _ "," expr

  "]"           shift, and go to state 99
  ","           shift, and go to state 100


state 67

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"
  65) hash : expr _ ":" expr

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "=="          shift, and go to state 45
  "!="          shift, and go to state 46
  ">"           shift, and go to state 48
  ">="          shift, and go to state 49
  "<"           shift, and go to state 50
  "<="          shift, and go to state 51
  "<>"          shift, and go to state 47
  "&&"          shift, and go to state 52
  "||"          shift, and go to state 53
  "["           shift, and go to state 92
  "("           shift, and go to state 54
  ":"           shift, and go to state 101


state 68

  56) lit : "{" hash _ "}"
  66) hash : hash _ "," expr ":" expr

  "}"           shift, and go to state 102
  ","           shift, and go to state 103


state 69

  59) object : func_def "(" _ args ")"

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35
  $default      reduce using rule 70 (args)

  expr          go to state 65
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  args          go to state 104
  class_def     go to state 31

state 70

  62) func_def : FUNCTION "(" _ params ")" "{" statements "}"

  IDENTIFIER    shift, and go to state 35
  $default      reduce using rule 67 (params)

  params        go to state 105
  identifier    go to state 106

state 71

  63) func_def : FUNCTION "{" _ statements "}"

  $default      reduce using rule 2 (statements)

  statements    go to state 107

state 72

  73) class_def : CLASS "(" _ expands ")" "{" var_assigns "}"

  IDENTIFIER    shift, and go to state 35
  $default      reduce using rule 75 (expands)

  expands       go to state 108
  identifier    go to state 109

state 73

  74) class_def : CLASS "{" _ var_assigns "}"

  $default      reduce using rule 77 (var_assigns)

  var_assigns   go to state 110

state 74

  18) var_def : expr "." identifier _
  43) expr : expr "." identifier _

  "="           reduce using rule 18 (var_def)
  $default      reduce using rule 43 (expr)


state 75

  20) var_def : expr "[" expr _ "]"
  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"
  46) expr : expr "[" expr _ "]"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "=="          shift, and go to state 45
  "!="          shift, and go to state 46
  ">"           shift, and go to state 48
  ">="          shift, and go to state 49
  "<"           shift, and go to state 50
  "<="          shift, and go to state 51
  "<>"          shift, and go to state 47
  "&&"          shift, and go to state 52
  "||"          shift, and go to state 53
  "["           shift, and go to state 92
  "]"           shift, and go to state 111
  "("           shift, and go to state 54


state 76

  28) expr : expr _ "+" expr
  28) expr : expr "+" expr _
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "["           shift, and go to state 92
  "["           [reduce using rule 28 (expr)]
  "("           shift, and go to state 54
  "("           [reduce using rule 28 (expr)]
  $default      reduce using rule 28 (expr)


state 77

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  29) expr : expr "-" expr _
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "["           shift, and go to state 92
  "["           [reduce using rule 29 (expr)]
  "("           shift, and go to state 54
  "("           [reduce using rule 29 (expr)]
  $default      reduce using rule 29 (expr)


state 78

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  31) expr : expr "*" expr _
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "["           shift, and go to state 92
  "["           [reduce using rule 31 (expr)]
  "("           shift, and go to state 54
  "("           [reduce using rule 31 (expr)]
  $default      reduce using rule 31 (expr)


state 79

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  32) expr : expr "/" expr _
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "["           shift, and go to state 92
  "["           [reduce using rule 32 (expr)]
  "("           shift, and go to state 54
  "("           [reduce using rule 32 (expr)]
  $default      reduce using rule 32 (expr)


state 80

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  33) expr : expr "%" expr _
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "["           shift, and go to state 92
  "["           [reduce using rule 33 (expr)]
  "("           shift, and go to state 54
  "("           [reduce using rule 33 (expr)]
  $default      reduce using rule 33 (expr)


state 81

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  34) expr : expr "==" expr _
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "["           shift, and go to state 92
  "["           [reduce using rule 34 (expr)]
  "("           shift, and go to state 54
  "("           [reduce using rule 34 (expr)]
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 34 (expr)


state 82

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  35) expr : expr "!=" expr _
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "["           shift, and go to state 92
  "["           [reduce using rule 35 (expr)]
  "("           shift, and go to state 54
  "("           [reduce using rule 35 (expr)]
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 35 (expr)


state 83

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  36) expr : expr "<>" expr _
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "["           shift, and go to state 92
  "["           [reduce using rule 36 (expr)]
  "("           shift, and go to state 54
  "("           [reduce using rule 36 (expr)]
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 36 (expr)


state 84

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  37) expr : expr ">" expr _
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "["           shift, and go to state 92
  "["           [reduce using rule 37 (expr)]
  "("           shift, and go to state 54
  "("           [reduce using rule 37 (expr)]
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 37 (expr)


state 85

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  38) expr : expr ">=" expr _
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "["           shift, and go to state 92
  "["           [reduce using rule 38 (expr)]
  "("           shift, and go to state 54
  "("           [reduce using rule 38 (expr)]
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 38 (expr)


state 86

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  39) expr : expr "<" expr _
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "["           shift, and go to state 92
  "["           [reduce using rule 39 (expr)]
  "("           shift, and go to state 54
  "("           [reduce using rule 39 (expr)]
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 39 (expr)


state 87

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  40) expr : expr "<=" expr _
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "["           shift, and go to state 92
  "["           [reduce using rule 40 (expr)]
  "("           shift, and go to state 54
  "("           [reduce using rule 40 (expr)]
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 40 (expr)


state 88

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  41) expr : expr "&&" expr _
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "=="          shift, and go to state 45
  "!="          shift, and go to state 46
  ">"           shift, and go to state 48
  ">="          shift, and go to state 49
  "<"           shift, and go to state 50
  "<="          shift, and go to state 51
  "<>"          shift, and go to state 47
  "["           shift, and go to state 92
  "["           [reduce using rule 41 (expr)]
  "("           shift, and go to state 54
  "("           [reduce using rule 41 (expr)]
  $default      reduce using rule 41 (expr)


state 89

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  42) expr : expr "||" expr _
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "=="          shift, and go to state 45
  "!="          shift, and go to state 46
  ">"           shift, and go to state 48
  ">="          shift, and go to state 49
  "<"           shift, and go to state 50
  "<="          shift, and go to state 51
  "<>"          shift, and go to state 47
  "&&"          shift, and go to state 52
  "["           shift, and go to state 92
  "["           [reduce using rule 42 (expr)]
  "("           shift, and go to state 54
  "("           [reduce using rule 42 (expr)]
  $default      reduce using rule 42 (expr)


state 90

  44) expr : expr "(" args _ ")"
  72) args : args _ "," expr

  ")"           shift, and go to state 112
  ","           shift, and go to state 100


state 91

  43) expr : expr "." _ identifier

  IDENTIFIER    shift, and go to state 35

  identifier    go to state 113

state 92

  46) expr : expr "[" _ expr "]"

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 114
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 93

  12) if_stmt : IF expr "{" _ statements "}" else_stmt

  $default      reduce using rule 2 (statements)

  statements    go to state 115

state 94

   3) statements : statements _ statement
   4) statements : statements _ statement ";"
  15) loop_stmt : LOOP "{" statements _ "}"

  "!"           shift, and go to state 19
  "!"           [reduce using rule 21 (access_md)]
  "-"           shift, and go to state 18
  "-"           [reduce using rule 21 (access_md)]
  BREAK         shift, and go to state 9
  RETURN        shift, and go to state 10
  IF            shift, and go to state 11
  "{"           shift, and go to state 28
  "{"           [reduce using rule 21 (access_md)]
  "}"           shift, and go to state 116
  LOOP          shift, and go to state 12
  "["           shift, and go to state 27
  "["           [reduce using rule 21 (access_md)]
  PRIVATE       shift, and go to state 16
  PUBLIC        shift, and go to state 17
  "("           shift, and go to state 21
  "("           [reduce using rule 21 (access_md)]
  NUMBER        shift, and go to state 24
  NUMBER        [reduce using rule 21 (access_md)]
  STRING        shift, and go to state 25
  STRING        [reduce using rule 21 (access_md)]
  BOOLEAN       shift, and go to state 26
  BOOLEAN       [reduce using rule 21 (access_md)]
  NULL          shift, and go to state 29
  NULL          [reduce using rule 21 (access_md)]
  SELF          shift, and go to state 32
  SELF          [reduce using rule 21 (access_md)]
  FUNCTION      shift, and go to state 33
  FUNCTION      [reduce using rule 21 (access_md)]
  CLASS         shift, and go to state 34
  CLASS         [reduce using rule 21 (access_md)]
  IDENTIFIER    shift, and go to state 35
  IDENTIFIER    [reduce using rule 21 (access_md)]
  $default      reduce using rule 21 (access_md)

  statement     go to state 4
  expr          go to state 5
  var_assign    go to state 6
  if_stmt       go to state 7
  loop_stmt     go to state 8
  access_md     go to state 13
  var_def       go to state 14
  identifier    go to state 15
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 95

  16) var_assign : access_md static_md const_md _ var_def "=" expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  var_def       go to state 117
  expr          go to state 118
  identifier    go to state 15
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 96

  27) const_md : CONST _

  $default      reduce using rule 27 (const_md)


state 97

  17) var_assign : var_def "=" expr _
  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "=="          shift, and go to state 45
  "!="          shift, and go to state 46
  ">"           shift, and go to state 48
  ">="          shift, and go to state 49
  "<"           shift, and go to state 50
  "<="          shift, and go to state 51
  "<>"          shift, and go to state 47
  "&&"          shift, and go to state 52
  "||"          shift, and go to state 53
  "["           shift, and go to state 92
  "["           [reduce using rule 17 (var_assign)]
  "("           shift, and go to state 54
  "("           [reduce using rule 17 (var_assign)]
  $default      reduce using rule 17 (var_assign)


state 98

  49) primary : "(" expr ")" _

  $default      reduce using rule 49 (primary)


state 99

  55) lit : "[" args "]" _

  $default      reduce using rule 55 (lit)


state 100

  72) args : args "," _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 119
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 101

  65) hash : expr ":" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 120
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 102

  56) lit : "{" hash "}" _

  $default      reduce using rule 56 (lit)


state 103

  66) hash : hash "," _ expr ":" expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 121
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 104

  59) object : func_def "(" args _ ")"
  72) args : args _ "," expr

  ")"           shift, and go to state 122
  ","           shift, and go to state 100


state 105

  62) func_def : FUNCTION "(" params _ ")" "{" statements "}"
  69) params : params _ "," identifier

  ")"           shift, and go to state 123
  ","           shift, and go to state 124


state 106

  68) params : identifier _

  $default      reduce using rule 68 (params)


state 107

   3) statements : statements _ statement
   4) statements : statements _ statement ";"
  63) func_def : FUNCTION "{" statements _ "}"

  "!"           shift, and go to state 19
  "!"           [reduce using rule 21 (access_md)]
  "-"           shift, and go to state 18
  "-"           [reduce using rule 21 (access_md)]
  BREAK         shift, and go to state 9
  RETURN        shift, and go to state 10
  IF            shift, and go to state 11
  "{"           shift, and go to state 28
  "{"           [reduce using rule 21 (access_md)]
  "}"           shift, and go to state 125
  LOOP          shift, and go to state 12
  "["           shift, and go to state 27
  "["           [reduce using rule 21 (access_md)]
  PRIVATE       shift, and go to state 16
  PUBLIC        shift, and go to state 17
  "("           shift, and go to state 21
  "("           [reduce using rule 21 (access_md)]
  NUMBER        shift, and go to state 24
  NUMBER        [reduce using rule 21 (access_md)]
  STRING        shift, and go to state 25
  STRING        [reduce using rule 21 (access_md)]
  BOOLEAN       shift, and go to state 26
  BOOLEAN       [reduce using rule 21 (access_md)]
  NULL          shift, and go to state 29
  NULL          [reduce using rule 21 (access_md)]
  SELF          shift, and go to state 32
  SELF          [reduce using rule 21 (access_md)]
  FUNCTION      shift, and go to state 33
  FUNCTION      [reduce using rule 21 (access_md)]
  CLASS         shift, and go to state 34
  CLASS         [reduce using rule 21 (access_md)]
  IDENTIFIER    shift, and go to state 35
  IDENTIFIER    [reduce using rule 21 (access_md)]
  $default      reduce using rule 21 (access_md)

  statement     go to state 4
  expr          go to state 5
  var_assign    go to state 6
  if_stmt       go to state 7
  loop_stmt     go to state 8
  access_md     go to state 13
  var_def       go to state 14
  identifier    go to state 15
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 108

  73) class_def : CLASS "(" expands _ ")" "{" var_assigns "}"

  ")"           shift, and go to state 126


state 109

  76) expands : identifier _

  $default      reduce using rule 76 (expands)


state 110

  74) class_def : CLASS "{" var_assigns _ "}"
  78) var_assigns : var_assigns _ var_assign

  "!"           shift, and go to state 19
  "!"           [reduce using rule 21 (access_md)]
  "-"           shift, and go to state 18
  "-"           [reduce using rule 21 (access_md)]
  "{"           shift, and go to state 28
  "{"           [reduce using rule 21 (access_md)]
  "}"           shift, and go to state 127
  "["           shift, and go to state 27
  "["           [reduce using rule 21 (access_md)]
  PRIVATE       shift, and go to state 16
  PUBLIC        shift, and go to state 17
  "("           shift, and go to state 21
  "("           [reduce using rule 21 (access_md)]
  NUMBER        shift, and go to state 24
  NUMBER        [reduce using rule 21 (access_md)]
  STRING        shift, and go to state 25
  STRING        [reduce using rule 21 (access_md)]
  BOOLEAN       shift, and go to state 26
  BOOLEAN       [reduce using rule 21 (access_md)]
  NULL          shift, and go to state 29
  NULL          [reduce using rule 21 (access_md)]
  SELF          shift, and go to state 32
  SELF          [reduce using rule 21 (access_md)]
  FUNCTION      shift, and go to state 33
  FUNCTION      [reduce using rule 21 (access_md)]
  CLASS         shift, and go to state 34
  CLASS         [reduce using rule 21 (access_md)]
  IDENTIFIER    shift, and go to state 35
  IDENTIFIER    [reduce using rule 21 (access_md)]
  $default      reduce using rule 21 (access_md)

  access_md     go to state 13
  var_def       go to state 14
  expr          go to state 118
  identifier    go to state 15
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31
  var_assign    go to state 128

state 111

  20) var_def : expr "[" expr "]" _
  46) expr : expr "[" expr "]" _

  "="           reduce using rule 20 (var_def)
  $default      reduce using rule 46 (expr)


state 112

  44) expr : expr "(" args ")" _

  $default      reduce using rule 44 (expr)


state 113

  43) expr : expr "." identifier _

  $default      reduce using rule 43 (expr)


state 114

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"
  46) expr : expr "[" expr _ "]"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "=="          shift, and go to state 45
  "!="          shift, and go to state 46
  ">"           shift, and go to state 48
  ">="          shift, and go to state 49
  "<"           shift, and go to state 50
  "<="          shift, and go to state 51
  "<>"          shift, and go to state 47
  "&&"          shift, and go to state 52
  "||"          shift, and go to state 53
  "["           shift, and go to state 92
  "]"           shift, and go to state 129
  "("           shift, and go to state 54


state 115

   3) statements : statements _ statement
   4) statements : statements _ statement ";"
  12) if_stmt : IF expr "{" statements _ "}" else_stmt

  "!"           shift, and go to state 19
  "!"           [reduce using rule 21 (access_md)]
  "-"           shift, and go to state 18
  "-"           [reduce using rule 21 (access_md)]
  BREAK         shift, and go to state 9
  RETURN        shift, and go to state 10
  IF            shift, and go to state 11
  "{"           shift, and go to state 28
  "{"           [reduce using rule 21 (access_md)]
  "}"           shift, and go to state 130
  LOOP          shift, and go to state 12
  "["           shift, and go to state 27
  "["           [reduce using rule 21 (access_md)]
  PRIVATE       shift, and go to state 16
  PUBLIC        shift, and go to state 17
  "("           shift, and go to state 21
  "("           [reduce using rule 21 (access_md)]
  NUMBER        shift, and go to state 24
  NUMBER        [reduce using rule 21 (access_md)]
  STRING        shift, and go to state 25
  STRING        [reduce using rule 21 (access_md)]
  BOOLEAN       shift, and go to state 26
  BOOLEAN       [reduce using rule 21 (access_md)]
  NULL          shift, and go to state 29
  NULL          [reduce using rule 21 (access_md)]
  SELF          shift, and go to state 32
  SELF          [reduce using rule 21 (access_md)]
  FUNCTION      shift, and go to state 33
  FUNCTION      [reduce using rule 21 (access_md)]
  CLASS         shift, and go to state 34
  CLASS         [reduce using rule 21 (access_md)]
  IDENTIFIER    shift, and go to state 35
  IDENTIFIER    [reduce using rule 21 (access_md)]
  $default      reduce using rule 21 (access_md)

  statement     go to state 4
  expr          go to state 5
  var_assign    go to state 6
  if_stmt       go to state 7
  loop_stmt     go to state 8
  access_md     go to state 13
  var_def       go to state 14
  identifier    go to state 15
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 116

  15) loop_stmt : LOOP "{" statements "}" _

  $default      reduce using rule 15 (loop_stmt)


state 117

  16) var_assign : access_md static_md const_md var_def _ "=" expr

  "="           shift, and go to state 131


state 118

  18) var_def : expr _ "." identifier
  20) var_def : expr _ "[" expr "]"
  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 38
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "=="          shift, and go to state 45
  "!="          shift, and go to state 46
  ">"           shift, and go to state 48
  ">="          shift, and go to state 49
  "<"           shift, and go to state 50
  "<="          shift, and go to state 51
  "<>"          shift, and go to state 47
  "&&"          shift, and go to state 52
  "||"          shift, and go to state 53
  "["           shift, and go to state 39
  "("           shift, and go to state 54


state 119

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"
  72) args : args "," expr _

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "=="          shift, and go to state 45
  "!="          shift, and go to state 46
  ">"           shift, and go to state 48
  ">="          shift, and go to state 49
  "<"           shift, and go to state 50
  "<="          shift, and go to state 51
  "<>"          shift, and go to state 47
  "&&"          shift, and go to state 52
  "||"          shift, and go to state 53
  "["           shift, and go to state 92
  "("           shift, and go to state 54
  $default      reduce using rule 72 (args)


state 120

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"
  65) hash : expr ":" expr _

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "=="          shift, and go to state 45
  "!="          shift, and go to state 46
  ">"           shift, and go to state 48
  ">="          shift, and go to state 49
  "<"           shift, and go to state 50
  "<="          shift, and go to state 51
  "<>"          shift, and go to state 47
  "&&"          shift, and go to state 52
  "||"          shift, and go to state 53
  "["           shift, and go to state 92
  "("           shift, and go to state 54
  $default      reduce using rule 65 (hash)


state 121

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"
  66) hash : hash "," expr _ ":" expr

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "=="          shift, and go to state 45
  "!="          shift, and go to state 46
  ">"           shift, and go to state 48
  ">="          shift, and go to state 49
  "<"           shift, and go to state 50
  "<="          shift, and go to state 51
  "<>"          shift, and go to state 47
  "&&"          shift, and go to state 52
  "||"          shift, and go to state 53
  "["           shift, and go to state 92
  "("           shift, and go to state 54
  ":"           shift, and go to state 132


state 122

  59) object : func_def "(" args ")" _

  $default      reduce using rule 59 (object)


state 123

  62) func_def : FUNCTION "(" params ")" _ "{" statements "}"

  "{"           shift, and go to state 133


state 124

  69) params : params "," _ identifier

  IDENTIFIER    shift, and go to state 35

  identifier    go to state 134

state 125

  63) func_def : FUNCTION "{" statements "}" _

  $default      reduce using rule 63 (func_def)


state 126

  73) class_def : CLASS "(" expands ")" _ "{" var_assigns "}"

  "{"           shift, and go to state 135


state 127

  74) class_def : CLASS "{" var_assigns "}" _

  $default      reduce using rule 74 (class_def)


state 128

  78) var_assigns : var_assigns var_assign _

  $default      reduce using rule 78 (var_assigns)


state 129

  46) expr : expr "[" expr "]" _

  $default      reduce using rule 46 (expr)


state 130

  12) if_stmt : IF expr "{" statements "}" _ else_stmt

  ELSE          shift, and go to state 137
  $default      reduce using rule 13 (else_stmt)

  else_stmt     go to state 136

state 131

  16) var_assign : access_md static_md const_md var_def "=" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 138
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 132

  66) hash : hash "," expr ":" _ expr

  "!"           shift, and go to state 19
  "-"           shift, and go to state 18
  "{"           shift, and go to state 28
  "["           shift, and go to state 27
  "("           shift, and go to state 21
  NUMBER        shift, and go to state 24
  STRING        shift, and go to state 25
  BOOLEAN       shift, and go to state 26
  NULL          shift, and go to state 29
  SELF          shift, and go to state 32
  FUNCTION      shift, and go to state 33
  CLASS         shift, and go to state 34
  IDENTIFIER    shift, and go to state 35

  expr          go to state 139
  identifier    go to state 56
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 133

  62) func_def : FUNCTION "(" params ")" "{" _ statements "}"

  $default      reduce using rule 2 (statements)

  statements    go to state 140

state 134

  69) params : params "," identifier _

  $default      reduce using rule 69 (params)


state 135

  73) class_def : CLASS "(" expands ")" "{" _ var_assigns "}"

  $default      reduce using rule 77 (var_assigns)

  var_assigns   go to state 141

state 136

  12) if_stmt : IF expr "{" statements "}" else_stmt _

  $default      reduce using rule 12 (if_stmt)


state 137

  14) else_stmt : ELSE _ "{" statements "}"

  "{"           shift, and go to state 142


state 138

  16) var_assign : access_md static_md const_md var_def "=" expr _
  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "=="          shift, and go to state 45
  "!="          shift, and go to state 46
  ">"           shift, and go to state 48
  ">="          shift, and go to state 49
  "<"           shift, and go to state 50
  "<="          shift, and go to state 51
  "<>"          shift, and go to state 47
  "&&"          shift, and go to state 52
  "||"          shift, and go to state 53
  "["           shift, and go to state 92
  "["           [reduce using rule 16 (var_assign)]
  "("           shift, and go to state 54
  "("           [reduce using rule 16 (var_assign)]
  $default      reduce using rule 16 (var_assign)


state 139

  28) expr : expr _ "+" expr
  29) expr : expr _ "-" expr
  31) expr : expr _ "*" expr
  32) expr : expr _ "/" expr
  33) expr : expr _ "%" expr
  34) expr : expr _ "==" expr
  35) expr : expr _ "!=" expr
  36) expr : expr _ "<>" expr
  37) expr : expr _ ">" expr
  38) expr : expr _ ">=" expr
  39) expr : expr _ "<" expr
  40) expr : expr _ "<=" expr
  41) expr : expr _ "&&" expr
  42) expr : expr _ "||" expr
  43) expr : expr _ "." identifier
  44) expr : expr _ "(" args ")"
  46) expr : expr _ "[" expr "]"
  66) hash : hash "," expr ":" expr _

  "."           shift, and go to state 91
  "*"           shift, and go to state 42
  "/"           shift, and go to state 43
  "%"           shift, and go to state 44
  "+"           shift, and go to state 40
  "-"           shift, and go to state 41
  "=="          shift, and go to state 45
  "!="          shift, and go to state 46
  ">"           shift, and go to state 48
  ">="          shift, and go to state 49
  "<"           shift, and go to state 50
  "<="          shift, and go to state 51
  "<>"          shift, and go to state 47
  "&&"          shift, and go to state 52
  "||"          shift, and go to state 53
  "["           shift, and go to state 92
  "("           shift, and go to state 54
  $default      reduce using rule 66 (hash)


state 140

   3) statements : statements _ statement
   4) statements : statements _ statement ";"
  62) func_def : FUNCTION "(" params ")" "{" statements _ "}"

  "!"           shift, and go to state 19
  "!"           [reduce using rule 21 (access_md)]
  "-"           shift, and go to state 18
  "-"           [reduce using rule 21 (access_md)]
  BREAK         shift, and go to state 9
  RETURN        shift, and go to state 10
  IF            shift, and go to state 11
  "{"           shift, and go to state 28
  "{"           [reduce using rule 21 (access_md)]
  "}"           shift, and go to state 143
  LOOP          shift, and go to state 12
  "["           shift, and go to state 27
  "["           [reduce using rule 21 (access_md)]
  PRIVATE       shift, and go to state 16
  PUBLIC        shift, and go to state 17
  "("           shift, and go to state 21
  "("           [reduce using rule 21 (access_md)]
  NUMBER        shift, and go to state 24
  NUMBER        [reduce using rule 21 (access_md)]
  STRING        shift, and go to state 25
  STRING        [reduce using rule 21 (access_md)]
  BOOLEAN       shift, and go to state 26
  BOOLEAN       [reduce using rule 21 (access_md)]
  NULL          shift, and go to state 29
  NULL          [reduce using rule 21 (access_md)]
  SELF          shift, and go to state 32
  SELF          [reduce using rule 21 (access_md)]
  FUNCTION      shift, and go to state 33
  FUNCTION      [reduce using rule 21 (access_md)]
  CLASS         shift, and go to state 34
  CLASS         [reduce using rule 21 (access_md)]
  IDENTIFIER    shift, and go to state 35
  IDENTIFIER    [reduce using rule 21 (access_md)]
  $default      reduce using rule 21 (access_md)

  statement     go to state 4
  expr          go to state 5
  var_assign    go to state 6
  if_stmt       go to state 7
  loop_stmt     go to state 8
  access_md     go to state 13
  var_def       go to state 14
  identifier    go to state 15
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 141

  73) class_def : CLASS "(" expands ")" "{" var_assigns _ "}"
  78) var_assigns : var_assigns _ var_assign

  "!"           shift, and go to state 19
  "!"           [reduce using rule 21 (access_md)]
  "-"           shift, and go to state 18
  "-"           [reduce using rule 21 (access_md)]
  "{"           shift, and go to state 28
  "{"           [reduce using rule 21 (access_md)]
  "}"           shift, and go to state 144
  "["           shift, and go to state 27
  "["           [reduce using rule 21 (access_md)]
  PRIVATE       shift, and go to state 16
  PUBLIC        shift, and go to state 17
  "("           shift, and go to state 21
  "("           [reduce using rule 21 (access_md)]
  NUMBER        shift, and go to state 24
  NUMBER        [reduce using rule 21 (access_md)]
  STRING        shift, and go to state 25
  STRING        [reduce using rule 21 (access_md)]
  BOOLEAN       shift, and go to state 26
  BOOLEAN       [reduce using rule 21 (access_md)]
  NULL          shift, and go to state 29
  NULL          [reduce using rule 21 (access_md)]
  SELF          shift, and go to state 32
  SELF          [reduce using rule 21 (access_md)]
  FUNCTION      shift, and go to state 33
  FUNCTION      [reduce using rule 21 (access_md)]
  CLASS         shift, and go to state 34
  CLASS         [reduce using rule 21 (access_md)]
  IDENTIFIER    shift, and go to state 35
  IDENTIFIER    [reduce using rule 21 (access_md)]
  $default      reduce using rule 21 (access_md)

  access_md     go to state 13
  var_def       go to state 14
  expr          go to state 118
  identifier    go to state 15
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31
  var_assign    go to state 128

state 142

  14) else_stmt : ELSE "{" _ statements "}"

  $default      reduce using rule 2 (statements)

  statements    go to state 145

state 143

  62) func_def : FUNCTION "(" params ")" "{" statements "}" _

  $default      reduce using rule 62 (func_def)


state 144

  73) class_def : CLASS "(" expands ")" "{" var_assigns "}" _

  $default      reduce using rule 73 (class_def)


state 145

   3) statements : statements _ statement
   4) statements : statements _ statement ";"
  14) else_stmt : ELSE "{" statements _ "}"

  "!"           shift, and go to state 19
  "!"           [reduce using rule 21 (access_md)]
  "-"           shift, and go to state 18
  "-"           [reduce using rule 21 (access_md)]
  BREAK         shift, and go to state 9
  RETURN        shift, and go to state 10
  IF            shift, and go to state 11
  "{"           shift, and go to state 28
  "{"           [reduce using rule 21 (access_md)]
  "}"           shift, and go to state 146
  LOOP          shift, and go to state 12
  "["           shift, and go to state 27
  "["           [reduce using rule 21 (access_md)]
  PRIVATE       shift, and go to state 16
  PUBLIC        shift, and go to state 17
  "("           shift, and go to state 21
  "("           [reduce using rule 21 (access_md)]
  NUMBER        shift, and go to state 24
  NUMBER        [reduce using rule 21 (access_md)]
  STRING        shift, and go to state 25
  STRING        [reduce using rule 21 (access_md)]
  BOOLEAN       shift, and go to state 26
  BOOLEAN       [reduce using rule 21 (access_md)]
  NULL          shift, and go to state 29
  NULL          [reduce using rule 21 (access_md)]
  SELF          shift, and go to state 32
  SELF          [reduce using rule 21 (access_md)]
  FUNCTION      shift, and go to state 33
  FUNCTION      [reduce using rule 21 (access_md)]
  CLASS         shift, and go to state 34
  CLASS         [reduce using rule 21 (access_md)]
  IDENTIFIER    shift, and go to state 35
  IDENTIFIER    [reduce using rule 21 (access_md)]
  $default      reduce using rule 21 (access_md)

  statement     go to state 4
  expr          go to state 5
  var_assign    go to state 6
  if_stmt       go to state 7
  loop_stmt     go to state 8
  access_md     go to state 13
  var_def       go to state 14
  identifier    go to state 15
  primary       go to state 20
  lit           go to state 22
  object        go to state 23
  func_def      go to state 30
  class_def     go to state 31

state 146

  14) else_stmt : ELSE "{" statements "}" _

  $default      reduce using rule 14 (else_stmt)

