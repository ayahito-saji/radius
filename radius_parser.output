

-------- Grammar --------

rule 1 program: stmts
rule 2 stmts: 
rule 3 stmts: stmts stmt
rule 4 stmts: stmts stmt ";"
rule 5 stmt: var_assign
rule 6 stmt: if_stmt
rule 7 stmt: loop_stmt
rule 8 stmt: BREAK
rule 9 stmt: RETURN expr
rule 10 stmt: func_call
rule 11 var_assign: variable "=" expr
rule 12 var_assign: variable "+=" expr
rule 13 var_assign: variable "-=" expr
rule 14 var_assign: variable "*=" expr
rule 15 var_assign: variable "/=" expr
rule 16 var_assign: variable "%=" expr
rule 17 if_stmt: IF expr "{" stmts "}" else_stmt
rule 18 else_stmt: 
rule 19 else_stmt: ELSE "{" stmts "}"
rule 20 loop_stmt: LOOP "{" stmts "}"
rule 21 expr: expr "+" expr
rule 22 expr: expr "-" expr
rule 23 expr: "-" expr
rule 24 expr: expr "*" expr
rule 25 expr: expr "/" expr
rule 26 expr: expr "%" expr
rule 27 expr: expr "==" expr
rule 28 expr: expr "!=" expr
rule 29 expr: expr "<>" expr
rule 30 expr: expr ">" expr
rule 31 expr: expr ">=" expr
rule 32 expr: expr "<" expr
rule 33 expr: expr "<=" expr
rule 34 expr: expr "&&" expr
rule 35 expr: expr "||" expr
rule 36 expr: primary
rule 37 primary: "(" expr ")"
rule 38 primary: lit
rule 39 primary: object
rule 40 lit: NUMBER
rule 41 lit: STRING
rule 42 lit: BOOLEAN
rule 43 lit: "[" args "]"
rule 44 lit: "{" hash "}"
rule 45 object: variable
rule 46 object: instance
rule 47 object: func_call
rule 48 object: func_def
rule 49 object: class_def
rule 50 object: SELF
rule 51 variable: identifier
rule 52 variable: object "." identifier
rule 53 func_def: FUNCTION "(" params ")" "{" stmts "}"
rule 54 func_def: FUNCTION "{" stmts "}"
rule 55 hash: 
rule 56 hash: expr ":" expr
rule 57 hash: hash "," expr ":" expr
rule 58 params: 
rule 59 params: identifier
rule 60 params: params "," identifier
rule 61 func_call: identifier "(" args ")"
rule 62 func_call: func_def "(" args ")"
rule 63 func_call: object "." identifier "(" args ")"
rule 64 args: 
rule 65 args: expr
rule 66 args: args "," expr
rule 67 class_def: CLASS "(" expands ")" "{" var_assigns "}"
rule 68 class_def: CLASS "{" var_assigns "}"
rule 69 expands: 
rule 70 expands: identifier
rule 71 var_assigns: 
rule 72 var_assigns: var_assigns var_assign
rule 73 identifier: IDENTIFIER

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (45)
    on right: 
    on left : 
  program (46)
    on right: 
    on left : 1
  stmts (47)
    on right: 1 3 4 17 19 20 53 54
    on left : 2 3 4
  stmt (48)
    on right: 3 4
    on left : 5 6 7 8 9 10
  var_assign (49)
    on right: 5 72
    on left : 11 12 13 14 15 16
  if_stmt (50)
    on right: 6
    on left : 17
  loop_stmt (51)
    on right: 7
    on left : 20
  expr (52)
    on right: 9 11 12 13 14 15 16 17 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 56 57 65 66
    on left : 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
  func_call (53)
    on right: 10 47
    on left : 61 62 63
  variable (54)
    on right: 11 12 13 14 15 16 45
    on left : 51 52
  else_stmt (55)
    on right: 17
    on left : 18 19
  primary (56)
    on right: 36
    on left : 37 38 39
  lit (57)
    on right: 38
    on left : 40 41 42 43 44
  object (58)
    on right: 39 52 63
    on left : 45 46 47 48 49 50
  args (59)
    on right: 43 61 62 63 66
    on left : 64 65 66
  hash (60)
    on right: 44 57
    on left : 55 56 57
  func_def (61)
    on right: 48 62
    on left : 53 54
  class_def (62)
    on right: 49
    on left : 67 68
  identifier (63)
    on right: 51 52 59 60 61 63 70
    on left : 73
  params (64)
    on right: 53 60
    on left : 58 59 60
  expands (65)
    on right: 67
    on left : 69 70
  var_assigns (66)
    on right: 67 68 72
    on left : 71 72

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  "*" (2) 24
  "/" (3) 25
  "%" (4) 26
  "+" (5) 21
  "-" (6) 22 23
  "==" (7) 27
  "!=" (8) 28
  ">" (9) 30
  ">=" (10) 31
  "<" (11) 32
  "<=" (12) 33
  "<>" (13) 29
  "=" (14) 11
  "+=" (15) 12
  "-=" (16) 13
  "*=" (17) 14
  "/=" (18) 15
  "%=" (19) 16
  "&&" (20) 34
  "||" (21) 35
  "." (22) 52 63
  ";" (23) 4
  BREAK (24) 8
  RETURN (25) 9
  IF (26) 17
  "{" (27) 17 19 20 44 53 54 67 68
  "}" (28) 17 19 20 44 53 54 67 68
  ELSE (29) 19
  LOOP (30) 20
  "(" (31) 37 53 61 62 63 67
  ")" (32) 37 53 61 62 63 67
  NUMBER (33) 40
  STRING (34) 41
  BOOLEAN (35) 42
  "[" (36) 43
  "]" (37) 43
  instance (38) 46
  SELF (39) 50
  FUNCTION (40) 53 54
  ":" (41) 56 57
  "," (42) 57 60 66
  CLASS (43) 67 68
  IDENTIFIER (44) 73

--------- State ---------

state 0


  $default      reduce using rule 2 (stmts)

  program       go to state 1
  stmts         go to state 2

state 1


  $end          shift, and go to state 3


state 2

   1) program : stmts _
   3) stmts : stmts _ stmt
   4) stmts : stmts _ stmt ";"

  BREAK         shift, and go to state 8
  RETURN        shift, and go to state 9
  IF            shift, and go to state 12
  LOOP          shift, and go to state 13
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22
  $default      reduce using rule 1 (program)

  stmt          go to state 4
  var_assign    go to state 5
  if_stmt       go to state 6
  loop_stmt     go to state 7
  func_call     go to state 10
  variable      go to state 11
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18
  object        go to state 19

state 3


  $end          shift, and go to state 23


state 4

   3) stmts : stmts stmt _
   4) stmts : stmts stmt _ ";"

  ";"           shift, and go to state 24
  $default      reduce using rule 3 (stmts)


state 5

   5) stmt : var_assign _

  $default      reduce using rule 5 (stmt)


state 6

   6) stmt : if_stmt _

  $default      reduce using rule 6 (stmt)


state 7

   7) stmt : loop_stmt _

  $default      reduce using rule 7 (stmt)


state 8

   8) stmt : BREAK _

  $default      reduce using rule 8 (stmt)


state 9

   9) stmt : RETURN _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 25
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 10

  10) stmt : func_call _
  47) object : func_call _

  "."           reduce using rule 47 (object)
  $default      reduce using rule 10 (stmt)


state 11

  11) var_assign : variable _ "=" expr
  12) var_assign : variable _ "+=" expr
  13) var_assign : variable _ "-=" expr
  14) var_assign : variable _ "*=" expr
  15) var_assign : variable _ "/=" expr
  16) var_assign : variable _ "%=" expr
  45) object : variable _

  "="           shift, and go to state 38
  "+="          shift, and go to state 39
  "-="          shift, and go to state 40
  "*="          shift, and go to state 41
  "/="          shift, and go to state 42
  "%="          shift, and go to state 43
  $default      reduce using rule 45 (object)


state 12

  17) if_stmt : IF _ expr "{" stmts "}" else_stmt

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 44
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 13

  20) loop_stmt : LOOP _ "{" stmts "}"

  "{"           shift, and go to state 45


state 14

  46) object : instance _

  $default      reduce using rule 46 (object)


state 15

  48) object : func_def _
  62) func_call : func_def _ "(" args ")"

  "("           shift, and go to state 46
  $default      reduce using rule 48 (object)


state 16

  49) object : class_def _

  $default      reduce using rule 49 (object)


state 17

  50) object : SELF _

  $default      reduce using rule 50 (object)


state 18

  51) variable : identifier _
  61) func_call : identifier _ "(" args ")"

  "("           shift, and go to state 47
  $default      reduce using rule 51 (variable)


state 19

  52) variable : object _ "." identifier
  63) func_call : object _ "." identifier "(" args ")"

  "."           shift, and go to state 48


state 20

  53) func_def : FUNCTION _ "(" params ")" "{" stmts "}"
  54) func_def : FUNCTION _ "{" stmts "}"

  "{"           shift, and go to state 50
  "("           shift, and go to state 49


state 21

  67) class_def : CLASS _ "(" expands ")" "{" var_assigns "}"
  68) class_def : CLASS _ "{" var_assigns "}"

  "{"           shift, and go to state 52
  "("           shift, and go to state 51


state 22

  73) identifier : IDENTIFIER _

  $default      reduce using rule 73 (identifier)


state 23


  $default      accept


state 24

   4) stmts : stmts stmt ";" _

  $default      reduce using rule 4 (stmts)


state 25

   9) stmt : RETURN expr _
  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          shift, and go to state 58
  "!="          shift, and go to state 59
  ">"           shift, and go to state 61
  ">="          shift, and go to state 62
  "<"           shift, and go to state 63
  "<="          shift, and go to state 64
  "<>"          shift, and go to state 60
  "&&"          shift, and go to state 65
  "||"          shift, and go to state 66
  $default      reduce using rule 9 (stmt)


state 26

  23) expr : "-" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 67
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 27

  36) expr : primary _

  $default      reduce using rule 36 (expr)


state 28

  37) primary : "(" _ expr ")"

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 68
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 29

  38) primary : lit _

  $default      reduce using rule 38 (primary)


state 30

  39) primary : object _
  52) variable : object _ "." identifier
  63) func_call : object _ "." identifier "(" args ")"

  "."           shift, and go to state 48
  $default      reduce using rule 39 (primary)


state 31

  40) lit : NUMBER _

  $default      reduce using rule 40 (lit)


state 32

  41) lit : STRING _

  $default      reduce using rule 41 (lit)


state 33

  42) lit : BOOLEAN _

  $default      reduce using rule 42 (lit)


state 34

  43) lit : "[" _ args "]"

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22
  $default      reduce using rule 64 (args)

  expr          go to state 69
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  args          go to state 70
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 35

  44) lit : "{" _ hash "}"

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22
  $default      reduce using rule 55 (hash)

  expr          go to state 71
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  hash          go to state 72
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 36

  45) object : variable _

  $default      reduce using rule 45 (object)


state 37

  47) object : func_call _

  $default      reduce using rule 47 (object)


state 38

  11) var_assign : variable "=" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 73
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 39

  12) var_assign : variable "+=" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 74
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 40

  13) var_assign : variable "-=" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 75
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 41

  14) var_assign : variable "*=" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 76
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 42

  15) var_assign : variable "/=" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 77
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 43

  16) var_assign : variable "%=" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 78
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 44

  17) if_stmt : IF expr _ "{" stmts "}" else_stmt
  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          shift, and go to state 58
  "!="          shift, and go to state 59
  ">"           shift, and go to state 61
  ">="          shift, and go to state 62
  "<"           shift, and go to state 63
  "<="          shift, and go to state 64
  "<>"          shift, and go to state 60
  "&&"          shift, and go to state 65
  "||"          shift, and go to state 66
  "{"           shift, and go to state 79


state 45

  20) loop_stmt : LOOP "{" _ stmts "}"

  $default      reduce using rule 2 (stmts)

  stmts         go to state 80

state 46

  62) func_call : func_def "(" _ args ")"

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22
  $default      reduce using rule 64 (args)

  expr          go to state 69
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18
  args          go to state 81

state 47

  61) func_call : identifier "(" _ args ")"

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22
  $default      reduce using rule 64 (args)

  expr          go to state 69
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18
  args          go to state 82

state 48

  52) variable : object "." _ identifier
  63) func_call : object "." _ identifier "(" args ")"

  IDENTIFIER    shift, and go to state 22

  identifier    go to state 83

state 49

  53) func_def : FUNCTION "(" _ params ")" "{" stmts "}"

  IDENTIFIER    shift, and go to state 22
  $default      reduce using rule 58 (params)

  params        go to state 84
  identifier    go to state 85

state 50

  54) func_def : FUNCTION "{" _ stmts "}"

  $default      reduce using rule 2 (stmts)

  stmts         go to state 86

state 51

  67) class_def : CLASS "(" _ expands ")" "{" var_assigns "}"

  IDENTIFIER    shift, and go to state 22
  $default      reduce using rule 69 (expands)

  expands       go to state 87
  identifier    go to state 88

state 52

  68) class_def : CLASS "{" _ var_assigns "}"

  $default      reduce using rule 71 (var_assigns)

  var_assigns   go to state 89

state 53

  21) expr : expr "+" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 90
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 54

  22) expr : expr "-" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 91
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 55

  24) expr : expr "*" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 92
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 56

  25) expr : expr "/" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 93
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 57

  26) expr : expr "%" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 94
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 58

  27) expr : expr "==" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 95
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 59

  28) expr : expr "!=" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 96
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 60

  29) expr : expr "<>" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 97
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 61

  30) expr : expr ">" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 98
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 62

  31) expr : expr ">=" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 99
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 63

  32) expr : expr "<" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 100
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 64

  33) expr : expr "<=" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 101
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 65

  34) expr : expr "&&" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 102
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 66

  35) expr : expr "||" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 103
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 67

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  23) expr : "-" expr _
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  $default      reduce using rule 23 (expr)


state 68

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr
  37) primary : "(" expr _ ")"

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          shift, and go to state 58
  "!="          shift, and go to state 59
  ">"           shift, and go to state 61
  ">="          shift, and go to state 62
  "<"           shift, and go to state 63
  "<="          shift, and go to state 64
  "<>"          shift, and go to state 60
  "&&"          shift, and go to state 65
  "||"          shift, and go to state 66
  ")"           shift, and go to state 104


state 69

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr
  65) args : expr _

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          shift, and go to state 58
  "!="          shift, and go to state 59
  ">"           shift, and go to state 61
  ">="          shift, and go to state 62
  "<"           shift, and go to state 63
  "<="          shift, and go to state 64
  "<>"          shift, and go to state 60
  "&&"          shift, and go to state 65
  "||"          shift, and go to state 66
  $default      reduce using rule 65 (args)


state 70

  43) lit : "[" args _ "]"
  66) args : args _ "," expr

  "]"           shift, and go to state 105
  ","           shift, and go to state 106


state 71

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr
  56) hash : expr _ ":" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          shift, and go to state 58
  "!="          shift, and go to state 59
  ">"           shift, and go to state 61
  ">="          shift, and go to state 62
  "<"           shift, and go to state 63
  "<="          shift, and go to state 64
  "<>"          shift, and go to state 60
  "&&"          shift, and go to state 65
  "||"          shift, and go to state 66
  ":"           shift, and go to state 107


state 72

  44) lit : "{" hash _ "}"
  57) hash : hash _ "," expr ":" expr

  "}"           shift, and go to state 108
  ","           shift, and go to state 109


state 73

  11) var_assign : variable "=" expr _
  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          shift, and go to state 58
  "!="          shift, and go to state 59
  ">"           shift, and go to state 61
  ">="          shift, and go to state 62
  "<"           shift, and go to state 63
  "<="          shift, and go to state 64
  "<>"          shift, and go to state 60
  "&&"          shift, and go to state 65
  "||"          shift, and go to state 66
  $default      reduce using rule 11 (var_assign)


state 74

  12) var_assign : variable "+=" expr _
  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          shift, and go to state 58
  "!="          shift, and go to state 59
  ">"           shift, and go to state 61
  ">="          shift, and go to state 62
  "<"           shift, and go to state 63
  "<="          shift, and go to state 64
  "<>"          shift, and go to state 60
  "&&"          shift, and go to state 65
  "||"          shift, and go to state 66
  $default      reduce using rule 12 (var_assign)


state 75

  13) var_assign : variable "-=" expr _
  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          shift, and go to state 58
  "!="          shift, and go to state 59
  ">"           shift, and go to state 61
  ">="          shift, and go to state 62
  "<"           shift, and go to state 63
  "<="          shift, and go to state 64
  "<>"          shift, and go to state 60
  "&&"          shift, and go to state 65
  "||"          shift, and go to state 66
  $default      reduce using rule 13 (var_assign)


state 76

  14) var_assign : variable "*=" expr _
  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          shift, and go to state 58
  "!="          shift, and go to state 59
  ">"           shift, and go to state 61
  ">="          shift, and go to state 62
  "<"           shift, and go to state 63
  "<="          shift, and go to state 64
  "<>"          shift, and go to state 60
  "&&"          shift, and go to state 65
  "||"          shift, and go to state 66
  $default      reduce using rule 14 (var_assign)


state 77

  15) var_assign : variable "/=" expr _
  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          shift, and go to state 58
  "!="          shift, and go to state 59
  ">"           shift, and go to state 61
  ">="          shift, and go to state 62
  "<"           shift, and go to state 63
  "<="          shift, and go to state 64
  "<>"          shift, and go to state 60
  "&&"          shift, and go to state 65
  "||"          shift, and go to state 66
  $default      reduce using rule 15 (var_assign)


state 78

  16) var_assign : variable "%=" expr _
  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          shift, and go to state 58
  "!="          shift, and go to state 59
  ">"           shift, and go to state 61
  ">="          shift, and go to state 62
  "<"           shift, and go to state 63
  "<="          shift, and go to state 64
  "<>"          shift, and go to state 60
  "&&"          shift, and go to state 65
  "||"          shift, and go to state 66
  $default      reduce using rule 16 (var_assign)


state 79

  17) if_stmt : IF expr "{" _ stmts "}" else_stmt

  $default      reduce using rule 2 (stmts)

  stmts         go to state 110

state 80

   3) stmts : stmts _ stmt
   4) stmts : stmts _ stmt ";"
  20) loop_stmt : LOOP "{" stmts _ "}"

  BREAK         shift, and go to state 8
  RETURN        shift, and go to state 9
  IF            shift, and go to state 12
  "}"           shift, and go to state 111
  LOOP          shift, and go to state 13
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  stmt          go to state 4
  var_assign    go to state 5
  if_stmt       go to state 6
  loop_stmt     go to state 7
  func_call     go to state 10
  variable      go to state 11
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18
  object        go to state 19

state 81

  62) func_call : func_def "(" args _ ")"
  66) args : args _ "," expr

  ")"           shift, and go to state 112
  ","           shift, and go to state 106


state 82

  61) func_call : identifier "(" args _ ")"
  66) args : args _ "," expr

  ")"           shift, and go to state 113
  ","           shift, and go to state 106


state 83

  52) variable : object "." identifier _
  63) func_call : object "." identifier _ "(" args ")"

  "("           shift, and go to state 114
  $default      reduce using rule 52 (variable)


state 84

  53) func_def : FUNCTION "(" params _ ")" "{" stmts "}"
  60) params : params _ "," identifier

  ")"           shift, and go to state 115
  ","           shift, and go to state 116


state 85

  59) params : identifier _

  $default      reduce using rule 59 (params)


state 86

   3) stmts : stmts _ stmt
   4) stmts : stmts _ stmt ";"
  54) func_def : FUNCTION "{" stmts _ "}"

  BREAK         shift, and go to state 8
  RETURN        shift, and go to state 9
  IF            shift, and go to state 12
  "}"           shift, and go to state 117
  LOOP          shift, and go to state 13
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  stmt          go to state 4
  var_assign    go to state 5
  if_stmt       go to state 6
  loop_stmt     go to state 7
  func_call     go to state 10
  variable      go to state 11
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18
  object        go to state 19

state 87

  67) class_def : CLASS "(" expands _ ")" "{" var_assigns "}"

  ")"           shift, and go to state 118


state 88

  70) expands : identifier _

  $default      reduce using rule 70 (expands)


state 89

  68) class_def : CLASS "{" var_assigns _ "}"
  72) var_assigns : var_assigns _ var_assign

  "}"           shift, and go to state 119
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  variable      go to state 11
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18
  object        go to state 19
  var_assign    go to state 120

state 90

  21) expr : expr _ "+" expr
  21) expr : expr "+" expr _
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  $default      reduce using rule 21 (expr)


state 91

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  22) expr : expr "-" expr _
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  $default      reduce using rule 22 (expr)


state 92

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  24) expr : expr "*" expr _
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  $default      reduce using rule 24 (expr)


state 93

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  25) expr : expr "/" expr _
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  $default      reduce using rule 25 (expr)


state 94

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  26) expr : expr "%" expr _
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  $default      reduce using rule 26 (expr)


state 95

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  27) expr : expr "==" expr _
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 27 (expr)


state 96

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  28) expr : expr "!=" expr _
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 28 (expr)


state 97

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  29) expr : expr "<>" expr _
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 29 (expr)


state 98

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  30) expr : expr ">" expr _
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 30 (expr)


state 99

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  31) expr : expr ">=" expr _
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 31 (expr)


state 100

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  32) expr : expr "<" expr _
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 32 (expr)


state 101

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  33) expr : expr "<=" expr _
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          error
  "!="          error
  ">"           error
  ">="          error
  "<"           error
  "<="          error
  "<>"          error
  $default      reduce using rule 33 (expr)


state 102

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  34) expr : expr "&&" expr _
  35) expr : expr _ "||" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          shift, and go to state 58
  "!="          shift, and go to state 59
  ">"           shift, and go to state 61
  ">="          shift, and go to state 62
  "<"           shift, and go to state 63
  "<="          shift, and go to state 64
  "<>"          shift, and go to state 60
  $default      reduce using rule 34 (expr)


state 103

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr
  35) expr : expr "||" expr _

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          shift, and go to state 58
  "!="          shift, and go to state 59
  ">"           shift, and go to state 61
  ">="          shift, and go to state 62
  "<"           shift, and go to state 63
  "<="          shift, and go to state 64
  "<>"          shift, and go to state 60
  "&&"          shift, and go to state 65
  $default      reduce using rule 35 (expr)


state 104

  37) primary : "(" expr ")" _

  $default      reduce using rule 37 (primary)


state 105

  43) lit : "[" args "]" _

  $default      reduce using rule 43 (lit)


state 106

  66) args : args "," _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 121
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 107

  56) hash : expr ":" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 122
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 108

  44) lit : "{" hash "}" _

  $default      reduce using rule 44 (lit)


state 109

  57) hash : hash "," _ expr ":" expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 123
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 110

   3) stmts : stmts _ stmt
   4) stmts : stmts _ stmt ";"
  17) if_stmt : IF expr "{" stmts _ "}" else_stmt

  BREAK         shift, and go to state 8
  RETURN        shift, and go to state 9
  IF            shift, and go to state 12
  "}"           shift, and go to state 124
  LOOP          shift, and go to state 13
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  stmt          go to state 4
  var_assign    go to state 5
  if_stmt       go to state 6
  loop_stmt     go to state 7
  func_call     go to state 10
  variable      go to state 11
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18
  object        go to state 19

state 111

  20) loop_stmt : LOOP "{" stmts "}" _

  $default      reduce using rule 20 (loop_stmt)


state 112

  62) func_call : func_def "(" args ")" _

  $default      reduce using rule 62 (func_call)


state 113

  61) func_call : identifier "(" args ")" _

  $default      reduce using rule 61 (func_call)


state 114

  63) func_call : object "." identifier "(" _ args ")"

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22
  $default      reduce using rule 64 (args)

  expr          go to state 69
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18
  args          go to state 125

state 115

  53) func_def : FUNCTION "(" params ")" _ "{" stmts "}"

  "{"           shift, and go to state 126


state 116

  60) params : params "," _ identifier

  IDENTIFIER    shift, and go to state 22

  identifier    go to state 127

state 117

  54) func_def : FUNCTION "{" stmts "}" _

  $default      reduce using rule 54 (func_def)


state 118

  67) class_def : CLASS "(" expands ")" _ "{" var_assigns "}"

  "{"           shift, and go to state 128


state 119

  68) class_def : CLASS "{" var_assigns "}" _

  $default      reduce using rule 68 (class_def)


state 120

  72) var_assigns : var_assigns var_assign _

  $default      reduce using rule 72 (var_assigns)


state 121

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr
  66) args : args "," expr _

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          shift, and go to state 58
  "!="          shift, and go to state 59
  ">"           shift, and go to state 61
  ">="          shift, and go to state 62
  "<"           shift, and go to state 63
  "<="          shift, and go to state 64
  "<>"          shift, and go to state 60
  "&&"          shift, and go to state 65
  "||"          shift, and go to state 66
  $default      reduce using rule 66 (args)


state 122

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr
  56) hash : expr ":" expr _

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          shift, and go to state 58
  "!="          shift, and go to state 59
  ">"           shift, and go to state 61
  ">="          shift, and go to state 62
  "<"           shift, and go to state 63
  "<="          shift, and go to state 64
  "<>"          shift, and go to state 60
  "&&"          shift, and go to state 65
  "||"          shift, and go to state 66
  $default      reduce using rule 56 (hash)


state 123

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr
  57) hash : hash "," expr _ ":" expr

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          shift, and go to state 58
  "!="          shift, and go to state 59
  ">"           shift, and go to state 61
  ">="          shift, and go to state 62
  "<"           shift, and go to state 63
  "<="          shift, and go to state 64
  "<>"          shift, and go to state 60
  "&&"          shift, and go to state 65
  "||"          shift, and go to state 66
  ":"           shift, and go to state 129


state 124

  17) if_stmt : IF expr "{" stmts "}" _ else_stmt

  ELSE          shift, and go to state 131
  $default      reduce using rule 18 (else_stmt)

  else_stmt     go to state 130

state 125

  63) func_call : object "." identifier "(" args _ ")"
  66) args : args _ "," expr

  ")"           shift, and go to state 132
  ","           shift, and go to state 106


state 126

  53) func_def : FUNCTION "(" params ")" "{" _ stmts "}"

  $default      reduce using rule 2 (stmts)

  stmts         go to state 133

state 127

  60) params : params "," identifier _

  $default      reduce using rule 60 (params)


state 128

  67) class_def : CLASS "(" expands ")" "{" _ var_assigns "}"

  $default      reduce using rule 71 (var_assigns)

  var_assigns   go to state 134

state 129

  57) hash : hash "," expr ":" _ expr

  "-"           shift, and go to state 26
  "{"           shift, and go to state 35
  "("           shift, and go to state 28
  NUMBER        shift, and go to state 31
  STRING        shift, and go to state 32
  BOOLEAN       shift, and go to state 33
  "["           shift, and go to state 34
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  expr          go to state 135
  primary       go to state 27
  lit           go to state 29
  object        go to state 30
  variable      go to state 36
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18

state 130

  17) if_stmt : IF expr "{" stmts "}" else_stmt _

  $default      reduce using rule 17 (if_stmt)


state 131

  19) else_stmt : ELSE _ "{" stmts "}"

  "{"           shift, and go to state 136


state 132

  63) func_call : object "." identifier "(" args ")" _

  $default      reduce using rule 63 (func_call)


state 133

   3) stmts : stmts _ stmt
   4) stmts : stmts _ stmt ";"
  53) func_def : FUNCTION "(" params ")" "{" stmts _ "}"

  BREAK         shift, and go to state 8
  RETURN        shift, and go to state 9
  IF            shift, and go to state 12
  "}"           shift, and go to state 137
  LOOP          shift, and go to state 13
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  stmt          go to state 4
  var_assign    go to state 5
  if_stmt       go to state 6
  loop_stmt     go to state 7
  func_call     go to state 10
  variable      go to state 11
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18
  object        go to state 19

state 134

  67) class_def : CLASS "(" expands ")" "{" var_assigns _ "}"
  72) var_assigns : var_assigns _ var_assign

  "}"           shift, and go to state 138
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  variable      go to state 11
  func_call     go to state 37
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18
  object        go to state 19
  var_assign    go to state 120

state 135

  21) expr : expr _ "+" expr
  22) expr : expr _ "-" expr
  24) expr : expr _ "*" expr
  25) expr : expr _ "/" expr
  26) expr : expr _ "%" expr
  27) expr : expr _ "==" expr
  28) expr : expr _ "!=" expr
  29) expr : expr _ "<>" expr
  30) expr : expr _ ">" expr
  31) expr : expr _ ">=" expr
  32) expr : expr _ "<" expr
  33) expr : expr _ "<=" expr
  34) expr : expr _ "&&" expr
  35) expr : expr _ "||" expr
  57) hash : hash "," expr ":" expr _

  "*"           shift, and go to state 55
  "/"           shift, and go to state 56
  "%"           shift, and go to state 57
  "+"           shift, and go to state 53
  "-"           shift, and go to state 54
  "=="          shift, and go to state 58
  "!="          shift, and go to state 59
  ">"           shift, and go to state 61
  ">="          shift, and go to state 62
  "<"           shift, and go to state 63
  "<="          shift, and go to state 64
  "<>"          shift, and go to state 60
  "&&"          shift, and go to state 65
  "||"          shift, and go to state 66
  $default      reduce using rule 57 (hash)


state 136

  19) else_stmt : ELSE "{" _ stmts "}"

  $default      reduce using rule 2 (stmts)

  stmts         go to state 139

state 137

  53) func_def : FUNCTION "(" params ")" "{" stmts "}" _

  $default      reduce using rule 53 (func_def)


state 138

  67) class_def : CLASS "(" expands ")" "{" var_assigns "}" _

  $default      reduce using rule 67 (class_def)


state 139

   3) stmts : stmts _ stmt
   4) stmts : stmts _ stmt ";"
  19) else_stmt : ELSE "{" stmts _ "}"

  BREAK         shift, and go to state 8
  RETURN        shift, and go to state 9
  IF            shift, and go to state 12
  "}"           shift, and go to state 140
  LOOP          shift, and go to state 13
  instance      shift, and go to state 14
  SELF          shift, and go to state 17
  FUNCTION      shift, and go to state 20
  CLASS         shift, and go to state 21
  IDENTIFIER    shift, and go to state 22

  stmt          go to state 4
  var_assign    go to state 5
  if_stmt       go to state 6
  loop_stmt     go to state 7
  func_call     go to state 10
  variable      go to state 11
  func_def      go to state 15
  class_def     go to state 16
  identifier    go to state 18
  object        go to state 19

state 140

  19) else_stmt : ELSE "{" stmts "}" _

  $default      reduce using rule 19 (else_stmt)

